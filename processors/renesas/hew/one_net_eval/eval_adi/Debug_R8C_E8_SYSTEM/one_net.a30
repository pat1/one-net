	._LANG	'C','5.31.30.001','REV.F'

;##    C Compiler		 OUTPUT
;## ccom30 Version 5.31.30.001
;## Copyright(C) 2001(2003,2004). Renesas Technology Corp.
;## and Renesas Solutions Corp., All rights reserved.
;## Compile Start Time Sat Jun 11 07:36:31 2011

;## COMMAND_LINE: ccom30  C:\HEWProj\2_0_trunk\processors\renesas\hew\one_net_eval\eval_adi\Debug_R8C_E8_SYSTEM\one_net.i -o C:\HEWProj\2_0_trunk\processors\renesas\hew\one_net_eval\eval_adi\Debug_R8C_E8_SYSTEM\one_net.a30 -finfo -O5 -OR -dS -WNP -fD32 -fNA -fNC -fNROM -fSIZET16 -fPTRDIFFT16 -fSA -fUD -Wall -R8CE


;## Normal Optimize		ON
;## ROM size Optimize		ON
;## Speed Optimize		OFF
;## Default ROM is		near
;## Default RAM is		near

	.GLB	__SB__
	.SB	__SB__
	.FB	0
	._aopt	ON

	._inspect	'M', "C:/HEWProj/2_0_trunk/one_net/mac/one_net.c", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../src/common/one_net_types.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/app/one_net_message.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"

	._inspect	'M', "C:/HEWProj/2_0_trunk/one_net/mac/one_net_status_codes.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/utility/one_net_xtea.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "one_net_xtea_encipher", "$one_net_xtea_encipher", 'G', 101, 0, 00h, 0
	._inspect	'F', 'p', "one_net_xtea_decipher", "$one_net_xtea_decipher", 'G', 103, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/one_net/mac/one_net.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'V', 'e', "ON_ENCODED_BROADCAST_DID", 'G', 1463, 2, 0, 0, 00h
	._inspect	'V', 'e', "ON_RAW_BROADCAST_DID", 'G', 1466, 2, 0, 0, 00h
	._inspect	'F', 'p', "single_ack_queued", "$single_ack_queued", 'G', 1480, 0, 00h, 0
	._inspect	'F', 'p', "single_data_is_repeat", "$single_data_is_repeat", 'G', 1482, 0, 00h, 0
	._inspect	'F', 'p', "one_net_init", "$one_net_init", 'G', 1484, 0, 00h, 0
	._inspect	'F', 'p', "device_is_master", "$device_is_master", 'G', 1491, 0, 00h, 0
	._inspect	'F', 'p', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 1495, 0, 00h, 0
	._inspect	'F', 'p', "place_in_single_queue", "$place_in_single_queue", 'G', 1499, 0, 00h, 0
	._inspect	'F', 'p', "on_is_my_NID", "$on_is_my_NID", 'G', 1503, 0, 00h, 0
	._inspect	'F', 'p', "did_is_broadcast", "$did_is_broadcast", 'G', 1504, 0, 00h, 0
	._inspect	'F', 'p', "enc_did_cmp", "$enc_did_cmp", 'G', 1505, 0, 00h, 0
	._inspect	'F', 'p', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 1507, 0, 00h, 0
	._inspect	'F', 'p', "on_validate_dst_DID", "$on_validate_dst_DID", 'G', 1508, 0, 00h, 0
	._inspect	'F', 'p', "on_encrypt", "$on_encrypt", 'G', 1513, 0, 00h, 0
	._inspect	'F', 'p', "on_decrypt", "$on_decrypt", 'G', 1515, 0, 00h, 0
	._inspect	'F', 'p', "on_rx_data_pkt", "$on_rx_data_pkt", 'G', 1519, 0, 00h, 0
	._inspect	'F', 'p', "on_build_nonces", "$on_build_nonces", 'G', 1523, 0, 00h, 0
	._inspect	'F', 'p', "on_build_admin_pkt", "$on_build_admin_pkt", 'G', 1530, 0, 00h, 0
	._inspect	'F', 'p', "on_build_data_pkt", "$on_build_data_pkt", 'G', 1535, 0, 00h, 0
	._inspect	'F', 'p', "on_build_response_pkt", "$on_build_response_pkt", 'G', 1542, 0, 00h, 0
	._inspect	'F', 'p', "on_build_data_rate_pkt", "$on_build_data_rate_pkt", 'G', 1545, 0, 00h, 0
	._inspect	'F', 'p', "on_build_pkt", "$on_build_pkt", 'G', 1548, 0, 00h, 0
	._inspect	'F', 'p', "on_parse_pld", "$on_parse_pld", 'G', 1554, 0, 00h, 0
	._inspect	'F', 'p', "on_parse_txn_pld", "$on_parse_txn_pld", 'G', 1557, 0, 00h, 0
	._inspect	'F', 'p', "on_update_next_txn_time", "$on_update_next_txn_time", 'G', 1560, 0, 00h, 0
	._inspect	'F', 'p', "one_net", "$one_net", 'G', 1563, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/utility/one_net_crc.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "one_net_compute_crc", "$one_net_compute_crc", 'G', 91, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/utility/one_net_encode.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "on_encode", "$on_encode", 'G', 101, 0, 00h, 0
	._inspect	'F', 'p', "on_decode", "$on_decode", 'G', 103, 0, 00h, 0

	._inspect	'M', "C:/Renesas/NC30WA/V543R00/inc30/stdlib.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "abort", "_abort", 'G', 73, 0, 00h, 0
	._inspect	'F', 'p', "div", "$div", 'G', 74, 0, 00h, 0
	._inspect	'F', 'p', "exit", "$exit", 'G', 75, 0, 00h, 0
	._inspect	'F', 'p', "calloc", "$calloc", 'G', 76, 0, 00h, 0
	._inspect	'F', 'p', "free", "_free", 'G', 77, 0, 00h, 0
	._inspect	'F', 'p', "malloc", "$malloc", 'G', 78, 0, 00h, 0
	._inspect	'F', 'p', "realloc", "$realloc", 'G', 79, 0, 00h, 0
	._inspect	'F', 'p', "strtol", "_strtol", 'G', 81, 0, 00h, 0
	._inspect	'F', 'p', "_n_n_strtol", "$_n_n_strtol", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "_n_f_strtol", "$_n_f_strtol", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "_f_n_strtol", "$_f_n_strtol", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "strtoul", "_strtoul", 'G', 85, 0, 00h, 0
	._inspect	'F', 'p', "_n_n_strtoul", "$_n_n_strtoul", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "_n_f_strtoul", "$_n_f_strtoul", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "_f_n_strtoul", "$_f_n_strtoul", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "strtod", "_strtod", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "_n_n_strtod", "$_n_n_strtod", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "_n_f_strtod", "$_n_f_strtod", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "_f_n_strtod", "$_f_n_strtod", 'G', 92, 0, 00h, 0
	._inspect	'F', 'p', "atoi", "_atoi", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "atol", "_atol", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "atof", "_atof", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "abs", "$abs", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "labs", "_labs", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "ldiv", "_ldiv", 'G', 99, 0, 00h, 0
	._inspect	'F', 'p', "qsort", "$qsort", 'G', 100, 0, 00h, 0
	._inspect	'F', 'p', "bsearch", "_bsearch", 'G', 101, 0, 00h, 0
	._inspect	'F', 'p', "mblen", "$mblen", 'G', 102, 0, 00h, 0
	._inspect	'F', 'p', "mbtowc", "_mbtowc", 'G', 103, 0, 00h, 0
	._inspect	'F', 'p', "wctomb", "$wctomb", 'G', 104, 0, 00h, 0
	._inspect	'F', 'p', "wcstombs", "_wcstombs", 'G', 105, 0, 00h, 0
	._inspect	'F', 'p', "mbstowcs", "_mbstowcs", 'G', 106, 0, 00h, 0
	._inspect	'F', 'p', "rand", "_rand", 'G', 107, 0, 00h, 0
	._inspect	'F', 'p', "srand", "$srand", 'G', 108, 0, 00h, 0
	._inspect	'F', 'p', "strtof", "_strtof", 'G', 110, 0, 00h, 0
	._inspect	'F', 'p', "_n_n_strtof", "$_n_n_strtof", 'G', 111, 0, 00h, 0
	._inspect	'F', 'p', "_n_f_strtof", "$_n_f_strtof", 'G', 112, 0, 00h, 0
	._inspect	'F', 'p', "_f_n_strtof", "$_f_n_strtof", 'G', 113, 0, 00h, 0
	._inspect	'F', 'p', "atoff", "_atoff", 'G', 114, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../src/eval/tick.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "init_tick", "_init_tick", 'G', 108, 0, 00h, 0
	._inspect	'F', 'p', "get_tick_count", "_get_tick_count", 'G', 188, 0, 00h, 0
	._inspect	'F', 'p', "delay_ms", "$delay_ms", 'G', 190, 0, 00h, 0
	._inspect	'F', 'p', "delay_100s_us", "$delay_100s_us", 'G', 191, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../src/eval/one_net_port_const.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/port_specific/one_net_port_specific.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "one_net_memmove", "$one_net_memmove", 'G', 111, 0, 00h, 0
	._inspect	'F', 'p', "one_net_memcmp", "$one_net_memcmp", 'G', 125, 0, 00h, 0
	._inspect	'F', 'p', "one_net_byte_stream_to_int16", "$one_net_byte_stream_to_int16", 'G', 137, 0, 00h, 0
	._inspect	'F', 'p', "one_net_int16_to_byte_stream", "$one_net_int16_to_byte_stream", 'G', 148, 0, 00h, 0
	._inspect	'F', 'p', "one_net_byte_stream_to_int32", "$one_net_byte_stream_to_int32", 'G', 159, 0, 00h, 0
	._inspect	'F', 'p', "one_net_int32_to_byte_stream", "$one_net_int32_to_byte_stream", 'G', 170, 0, 00h, 0
	._inspect	'F', 'p', "one_net_tick", "_one_net_tick", 'G', 180, 0, 00h, 0
	._inspect	'F', 'p', "one_net_ms_to_tick", "_one_net_ms_to_tick", 'G', 190, 0, 00h, 0
	._inspect	'F', 'p', "one_net_tick_to_ms", "_one_net_tick_to_ms", 'G', 200, 0, 00h, 0
	._inspect	'F', 'p', "one_net_set_channel", "$one_net_set_channel", 'G', 211, 0, 00h, 0
	._inspect	'F', 'p', "one_net_channel_is_clear", "_one_net_channel_is_clear", 'G', 225, 0, 00h, 0
	._inspect	'F', 'p', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 239, 0, 00h, 0
	._inspect	'F', 'p', "one_net_look_for_pkt", "_one_net_look_for_pkt", 'G', 249, 0, 00h, 0
	._inspect	'F', 'p', "one_net_read", "$one_net_read", 'G', 262, 0, 00h, 0
	._inspect	'F', 'p', "one_net_write", "$one_net_write", 'G', 276, 0, 00h, 0
	._inspect	'F', 'p', "one_net_write_done", "_one_net_write_done", 'G', 287, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/app/one_net_application.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"

;## #	FUNCTION get_three_message_bytes_from_payload

;## #	FUNCTION put_three_message_bytes_to_payload

;## #	FUNCTION get_first_msg_byte

;## #	FUNCTION put_first_msg_byte

;## #	FUNCTION get_second_msg_byte

;## #	FUNCTION put_second_msg_byte

;## #	FUNCTION get_third_msg_byte

;## #	FUNCTION put_third_msg_byte

;## #	FUNCTION get_first_two_msg_bytes

;## #	FUNCTION put_first_two_msg_bytes

;## #	FUNCTION get_msg_hdr

;## #	FUNCTION put_msg_hdr

;## #	FUNCTION get_msg_data

;## #	FUNCTION put_msg_data

;## #	FUNCTION get_src_unit

;## #	FUNCTION put_src_unit

;## #	FUNCTION get_dst_unit

;## #	FUNCTION put_dst_unit

;## #	FUNCTION put_block_data_payload_hdr

;## #	FUNCTION get_block_data_payload_hdr
	._inspect	'V', 'e', "one_net_send_single", 'G', 260, 4, 0, 0, 00h
	._inspect	'V', 'e', "one_net_block_stream_request", 'G', 263, 4, 0, 0, 00h
	._inspect	'F', 'p', "ona_parse_msg_class_and_type", "$ona_parse_msg_class_and_type", 'G', 278, 0, 00h, 0
	._inspect	'F', 'p', "on_parse_single_app_pld", "$on_parse_single_app_pld", 'G', 284, 0, 00h, 0
	._inspect	'F', 'p', "ona_send_unit_type_count_query", "$ona_send_unit_type_count_query", 'G', 293, 0, 00h, 0
	._inspect	'F', 'p', "ona_send_unit_type_query", "$ona_send_unit_type_query", 'G', 301, 0, 00h, 0
	._inspect	'F', 'p', "ona_parse_unit_type_count", "$ona_parse_unit_type_count", 'G', 304, 0, 00h, 0
	._inspect	'F', 'p', "ona_parse_unit_type_status", "$ona_parse_unit_type_status", 'G', 307, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../src/eval/one_net_client_port_const.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'V', 'e', "ONE_NET_DEVICE_UNIT_TYPE", 'G', 107, 3, 0, 0, 00h

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/mac/one_net_client.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'V', 'e', "client_joined_network", 'G', 158, 1, 0, 0, 00h
	._inspect	'V', 'e', "client_looking_for_invite", 'G', 159, 1, 0, 0, 00h
	._inspect	'F', 'p', "one_net_client_look_for_invite", "$one_net_client_look_for_invite", 'G', 183, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_init", "$one_net_client_init", 'G', 209, 0, 00h, 0
	._inspect	'F', 'p', "one_net_copy_to_nv_param", "$one_net_copy_to_nv_param", 'G', 211, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_raw_master_did", "$one_net_client_raw_master_did", 'G', 213, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_send_single", "$one_net_client_send_single", 'G', 218, 0, 00h, 0
	._inspect	'F', 'p', "on_client_handle_ack_nack_response", "$on_client_handle_ack_nack_response", 'G', 224, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_block_stream_request", "$one_net_client_block_stream_request", 'G', 231, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_end_stream", "_one_net_client_end_stream", 'G', 232, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_stream_key_query", "_one_net_client_stream_key_query", 'G', 233, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_join_network", "$one_net_client_join_network", 'G', 235, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client", "_one_net_client", 'G', 237, 0, 00h, 0
	._inspect	'F', 'p', "one_net_client_get_channel", "_one_net_client_get_channel", 'G', 240, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/mac/one_net_master.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "one_net_master_create_network", "$one_net_master_create_network", 'G', 254, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_init", "$one_net_master_init", 'G', 262, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_get_channel", "_one_net_master_get_channel", 'G', 264, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_send_single", "$one_net_master_send_single", 'G', 269, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_block_stream_request", "$one_net_master_block_stream_request", 'G', 273, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_end_stream", "$one_net_master_end_stream", 'G', 275, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_change_client_data_rate", "$one_net_master_change_client_data_rate", 'G', 278, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_change_client_keep_alive", "$one_net_master_change_client_keep_alive", 'G', 280, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_change_frag_dly", "$one_net_master_change_frag_dly", 'G', 283, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_change_key", "$one_net_master_change_key", 'G', 285, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_change_stream_key", "$one_net_master_change_stream_key", 'G', 287, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_set_update_master_flag", "$one_net_master_set_update_master_flag", 'G', 294, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_start_data_rate_test", "$one_net_master_start_data_rate_test", 'G', 304, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_invite", "$one_net_master_invite", 'G', 306, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_cancel_invite", "$one_net_master_cancel_invite", 'G', 308, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_remove_device", "$one_net_master_remove_device", 'G', 311, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master", "_one_net_master", 'G', 313, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_add_client", "$one_net_master_add_client", 'G', 317, 0, 00h, 0
	._inspect	'F', 'p', "client_info", "$client_info", 'G', 319, 0, 00h, 0
	._inspect	'F', 'p', "get_encryption_key", "$get_encryption_key", 'G', 322, 0, 00h, 0
	._inspect	'F', 'p', "get_client_encryption_key", "$get_client_encryption_key", 'G', 327, 0, 00h, 0
	._inspect	'F', 'p', "on_master_handle_ack_nack_response", "$on_master_handle_ack_nack_response", 'G', 336, 0, 00h, 0
	._inspect	'F', 'p', "one_net_master_delete_last_client", "$one_net_master_delete_last_client", 'G', 341, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/utility/one_net_timer.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "ont_set_timer", "$ont_set_timer", 'G', 232, 0, 00h, 0
	._inspect	'F', 'p', "ont_get_timer", "$ont_get_timer", 'G', 233, 0, 00h, 0
	._inspect	'F', 'p', "ont_stop_timer", "$ont_stop_timer", 'G', 234, 0, 00h, 0
	._inspect	'F', 'p', "ont_active", "$ont_active", 'G', 236, 0, 00h, 0
	._inspect	'F', 'p', "ont_expired", "$ont_expired", 'G', 237, 0, 00h, 0
	._inspect	'F', 'p', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 238, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/processors/renesas/hew/one_net_eval/../../../../one_net/utility/one_net_prand.h", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'F', 'p', "one_net_prand", "_one_net_prand", 'G', 90, 0, 00h, 0

	._inspect	'M', "C:/HEWProj/2_0_trunk/one_net/mac/one_net.c", "C:/HEWProj/2_0_trunk/one_net/mac/one_net"
	._inspect	'V', 'd', "PREAMBLE", "_PREAMBLE", 'S', 94, 3, 0, 0, 00h
	._inspect	'V', 'd', "SOF", "_SOF", 'S', 97, 1, 0, 0, 00h
	._inspect	'V', 'd', "ON_ENCODED_BROADCAST_DID", "_ON_ENCODED_BROADCAST_DID", 'G', 106, 2, 0, 0, 00h
	._inspect	'V', 'd', "ON_RAW_BROADCAST_DID", "_ON_RAW_BROADCAST_DID", 'G', 114, 2, 0, 0, 00h
	._inspect	'V', 'd', "pkt_hdlr", "_pkt_hdlr", 'S', 138, 36, 0, 0, 00h
	._inspect	'V', 'd', "on_state", "_on_state", 'G', 149, 2, 0, 0, 00h
	._inspect	'V', 'd', "on_base_param", "_on_base_param", 'G', 156, 2, 0, 0, 00h
	._inspect	'V', 'd', "data_rate_result", "_data_rate_result", 'S', 159, 1, 0, 0, 00h
	._inspect	'V', 'd', "block_complete", "_block_complete", 'S', 163, 1, 0, 0, 00h
	._inspect	'V', 'd', "cur_stream", "_cur_stream", 'S', 169, 2, 0, 0, 00h
	._inspect	'V', 'd', "last_single_ack_time", "_last_single_ack_time", 'S', 187, 4, 0, 0, 00h
	._inspect	'V', 'd', "last_single_ack_did", "_last_single_ack_did", 'S', 188, 2, 0, 0, 00h
	._inspect	'V', 'd', "last_single_ack_payload", "_last_single_ack_payload", 'S', 189, 5, 0, 0, 00h
	._inspect	'V', 'd', "single_data_queue_size", "_single_data_queue_size", 'G', 204, 1, 0, 0, 00h
	._inspect	'V', 'd', "single_data_queue", "_single_data_queue", 'G', 205, 57, 0, 0, 00h
	._inspect	'V', 'd', "parse_txn_payload", "_parse_txn_payload", 'G', 210, 1, 0, 0, 00h
	._inspect	'F', 'p', "check_for_clr_channel", "_check_for_clr_channel", 'S', 224, 0, 00h, 0
	._inspect	'F', 'p', "rx_pkt_addr", "$rx_pkt_addr", 'S', 234, 0, 00h, 0
	._inspect	'F', 'p', "rx_single_resp_pkt", "$rx_single_resp_pkt", 'S', 236, 0, 00h, 0
	._inspect	'F', 'p', "rx_block_resp_pkt", "$rx_block_resp_pkt", 'S', 243, 0, 00h, 0
	._inspect	'F', 'p', "rx_block_txn_ack", "$rx_block_txn_ack", 'S', 244, 0, 00h, 0
	._inspect	'F', 'p', "rx_stream_resp_pkt", "$rx_stream_resp_pkt", 'S', 245, 0, 00h, 0
	._inspect	'F', 'p', "rx_data_rate", "$rx_data_rate", 'S', 248, 0, 00h, 0
	._inspect	'F', 'p', "rx_single_data", "$rx_single_data", 'S', 251, 0, 00h, 0
	._inspect	'F', 'p', "rx_block_data", "$rx_block_data", 'S', 254, 0, 00h, 0
	._inspect	'F', 'p', "rx_stream_data", "$rx_stream_data", 'S', 256, 0, 00h, 0
	._inspect	'F', 'p', "rx_payload", "$rx_payload", 'S', 259, 0, 00h, 0
	._inspect	'F', 'p', "rx_nonces", "$rx_nonces", 'S', 264, 0, 00h, 0

;## #	FUNCTION on_parse_txn_pld
;## #	FRAME	AUTO	(     pld)	size  2,	offset -5
;## #	FRAME	AUTO	(     txn)	size  2,	offset -3
;## #	FRAME	AUTO	(    temp)	size  1,	offset -1
;## #  FRAME   ARG (DATA_TYPE)  size   1,    offset 5
;## #  FRAME   ARG (     KEY)  size   2,    offset 6
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #  REGISTER ARG    (     pld)   size   2,   REGISTER R2
;## #	ARG Size(3)	Auto Size(5)	Context Size(5)


	.SECTION	program,CODE
	._inspect	'U', 2, "program", "program", 0
	._file	'C:/HEWProj/2_0_trunk/one_net/mac/one_net.c'
	._type	256,'N',''
	._type	256,'m','ONS_SNGH_INTERNAL_ERR',47
	._type	256,'m','ONS_RETRY',46
	._type	256,'m','ONS_STREAM_CANCELED',45
	._type	256,'m','ONS_BLOCK_CANCELED',44
	._type	256,'m','ONS_SINGLE_CANCELED',43
	._type	256,'m','ONS_REBUILD_PKT',42
	._type	256,'m','ONS_WRITE_ERR',41
	._type	256,'m','ONS_READ_ERR',40
	._type	256,'m','ONS_NOT_JOINED',39
	._type	256,'m','ONS_DEVICE_LIMIT',38
	._type	256,'m','ONS_DID_FAILED',37
	._type	256,'m','ONS_NID_FAILED',36
	._type	256,'m','ONS_INCORRECT_ADDR',35
	._type	256,'m','ONS_BAD_ADDR',34
	._type	256,'m','ONS_BROADCAST_ADDR',33
	._type	256,'m','ONS_MULTICAST_ADDR',32
	._type	256,'m','ONS_UNICAST_ADDR',31
	._type	256,'m','ONS_UNHANDLED_PKT',30
	._type	256,'m','ONS_BAD_PKT',29
	._type	256,'m','ONS_BAD_PKT_TYPE',28
	._type	256,'m','ONS_BAD_ENCODING',27
	._type	256,'m','ONS_BAD_RAW_DATA',26
	._type	256,'m','ONS_BAD_RAW_PKT_LEN',25
	._type	256,'m','ONS_TXN_DOES_NOT_EXIST',24
	._type	256,'m','ONS_TXN_QUEUED',23
	._type	256,'m','ONS_STREAM_FAIL',22
	._type	256,'m','ONS_STREAM_END',21
	._type	256,'m','ONS_BLOCK_FAIL',20
	._type	256,'m','ONS_BLOCK_END',19
	._type	256,'m','ONS_SINGLE_FAIL',18
	._type	256,'m','ONS_SINGLE_END',17
	._type	256,'m','ONS_INCORRECT_NONCE',16
	._type	256,'m','ONS_TX_NACK',15
	._type	256,'m','ONS_RX_NACK',14
	._type	256,'m','ONS_RX_STAY_AWAKE',13
	._type	256,'m','ONS_CRC_FAIL',12
	._type	256,'m','ONS_UNHANDLED_VER',11
	._type	256,'m','ONS_INTERNAL_ERR',10
	._type	256,'m','ONS_TIME_OUT',9
	._type	256,'m','ONS_CANCELED',8
	._type	256,'m','ONS_RSRC_FULL',7
	._type	256,'m','ONS_END',6
	._type	256,'m','ONS_MORE',5
	._type	256,'m','ONS_INVALID_DATA',4
	._type	256,'m','ONS_ALREADY_IN_PROGRESS',3
	._type	256,'m','ONS_NOT_INIT',2
	._type	256,'m','ONS_BAD_PARAM',1
	._type	256,'m','ONS_SUCCESS',0
	._type	257,'T','one_net_status_t',256
	._type	259,'T','UInt8',3
	._type	260,'T','BOOL',259
	._type	261,'T','UInt16',18
	._type	262,'O',259
	._type	263,'T','UInt32',7
	._type	264,'T','tick_t',263
	._type	258,'S','',16
	._type	258,'m','priority',259,0
	._type	258,'m','retry',259,1
	._type	258,'m','expected_nonce',259,2
	._type	258,'m','msg_type',259,3
	._type	258,'m','send',260,4
	._type	258,'m','next_txn_timer',259,5
	._type	258,'m','remaining',261,6
	._type	258,'m','data_len',259,8
	._type	258,'m','pkt_size',259,9
	._type	258,'m','pkt',262,10
	._type	258,'m','time',264,12
	._type	265,'T','on_txn_t',258
	._type	266,'O',265
	._type	267,'O',259
	._type	268,'Z',16,259
	._type	269,'T','one_net_xtea_key_t',268
	._type	270,'O',269
	._type	271,'x',257,4
	._type	271,'m','txn',0,266
	._type	271,'m','pld',0,267
	._type	271,'m','DATA_TYPE',0,259
	._type	271,'m','KEY',0,270
	._func	'on_parse_txn_pld','G',5,271,$on_parse_txn_pld,0
	._inspect	'F', 's', "on_parse_txn_pld", "$on_parse_txn_pld", 'G', 10
	._block
	._line	299
;## # C_SRC :	{
	.glb	$on_parse_txn_pld
$on_parse_txn_pld:
	enter	#05H
	._block
	._type	272,'O',265
	._var	'txn','R',272,6
	mov.w	R1,-3[FB]	;  txn  txn 
	._eblock
	._block
	._type	273,'O',259
	._var	'pld','R',273,7
	mov.w	R2,-5[FB]	;  pld  pld 
	._eblock
	._block
	._type	274,'O',265
	._var	'txn','A',274,-3
	._type	275,'O',259
	._var	'pld','A',275,-5
	._var	'DATA_TYPE','A',259,5
	._type	276,'O',269
	._var	'KEY','A',276,6
	._var	'temp','A',259,-1
	._line	303
;## # C_SRC :	    if(!txn || !pld)
	cmp.w	#0000H,-3[FB]	;  txn 
	jeq	L115
	cmp.w	#0000H,-5[FB]	;  pld 
	jne	L73
L115:
	._line	304
	._block
	._line	305
;## # C_SRC :			return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L73:
	._line	312
;## # C_SRC :	    if(ONS_SUCCESS != (status = on_decode(pld, &(txn->pkt[ON_PLD_IDX]), ON_ENCODED_SINGLE_PLD_SIZE)))
	push.w	#000bH
	._inspect	'S', 'p', 2
	mov.w	-3[FB],A0	;  txn 
	mov.w	000aH[A0],R2
	add.w	#000fH,R2
	mov.w	-5[FB],R1	;  pld 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 312
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L97
	._eblock
	._line	313
	._block
	._block
	._var	'status','R',257,5
	._line	314
;## # C_SRC :			return status;
L119:
	._eblock
	exitd	
	._eblock
L97:
	._line	320
;## # C_SRC :		         ON_SINGLE, KEY);
	push.w	6[FB]	;  KEY 
	._inspect	'S', 'p', 2
	push.b	#03H
	._inspect	'S', 'p', 1
	push.w	-5[FB]	;  pld 
	._inspect	'S', 'p', 2
	mov.w	-3[FB],A0	;  txn 
	pusha	0003H[A0]
	._inspect	'S', 'p', 2
	mova	-1[FB],R2	;  temp 
	mova	-1[FB],R1	;  temp 
	._inspect	'S', 'c', "on_parse_pld", "$on_parse_pld", 'G', 0, 320
	jsr	$on_parse_pld
	._inspect	'S', 'p', -7
	add.b	#07H,SP
	jmp	L119
E1:
	._eblock
	._eblock
M1:
	._efunc	M1
	._inspect	'F', 'd', "on_parse_txn_pld", "$on_parse_txn_pld", 'G', 299, 0, 00h, 0
	._inspect	'F', 't', "on_parse_txn_pld", 'G', 271
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 312, 0, 00h, 0
	._inspect	'F', 'r', "on_parse_pld", "$on_parse_pld", 'G', 320, 0, 00h, 0
	._inspect	'F', 'e', "on_parse_txn_pld", "$on_parse_txn_pld", 'G', 7, 0


;## #	FUNCTION single_ack_queued
;## #	FRAME	AUTO	( raw_pld)	size  2,	offset -2
;## #  REGISTER ARG    ( src_did)   size   2,   REGISTER R1
;## #  REGISTER ARG    ( raw_pld)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(2)	Context Size(5)

	._type	277,'v'
	._type	278,'Z',2,259
	._type	279,'T','one_net_raw_did_t',278
	._type	280,'O',279
	._type	281,'O',259
	._type	282,'x',277,2
	._type	282,'m','src_did',0,280
	._type	282,'m','raw_pld',0,281
	._func	'single_ack_queued','G',2,282,$single_ack_queued,0
	._inspect	'F', 's', "single_ack_queued", "$single_ack_queued", 'G', 7
	._line	326
;## # C_SRC :	{
	.glb	$single_ack_queued
$single_ack_queued:
	enter	#02H
	mov.w	R2,-2[FB]	;  raw_pld  raw_pld 
	._block
	._type	283,'O',279
	._var	'src_did','A',283,0
	._type	284,'O',259
	._var	'raw_pld','A',284,-2
	._line	327
;## # C_SRC :		one_net_memmove(last_single_ack_did, *src_did, ON_ENCODED_DID_LEN);
	._block
	._type	285,'O',279
	._var	'src_did','R',285,6
	push.w	#0002H
	._inspect	'S', 'p', 2
	._eblock
	mov.w	R1,R2
	mov.w	#_last_single_ack_did,R1
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 327
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	328
;## # C_SRC :		one_net_memmove(last_single_ack_payload, raw_pld, ONE_NET_RAW_SINGLE_DATA_LEN);
	push.w	#0005H
	._inspect	'S', 'p', 2
	mov.w	-2[FB],R2	;  raw_pld 
	mov.w	#_last_single_ack_payload,R1
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 328
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	329
;## # C_SRC :		last_single_ack_time = one_net_tick();
	._inspect	'S', 'c', "one_net_tick", "_one_net_tick", 'G', 0, 329
	jsr	_one_net_tick
	mov.w	R0,_last_single_ack_time
	mov.w	R2,_last_single_ack_time+2
	._eblock
	._line	330
;## # C_SRC :	}
	exitd	
E2:
M2:
	._efunc	M2
	._inspect	'F', 'd', "single_ack_queued", "$single_ack_queued", 'G', 326, 0, 00h, 0
	._inspect	'F', 't', "single_ack_queued", 'G', 282
	._inspect	'V', 'r', "last_single_ack_did", 'S', 327, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 327, 0, 00h, 0
	._inspect	'V', 'r', "last_single_ack_payload", 'S', 328, 5, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 328, 0, 00h, 0
	._inspect	'F', 'r', "one_net_tick", "_one_net_tick", 'G', 329, 0, 00h, 0
	._inspect	'V', 'r', "last_single_ack_time", 'S', 329, 4, 0, 0, 00h
	._inspect	'F', 'e', "single_ack_queued", "$single_ack_queued", 'G', 2, 0


;## #	FUNCTION single_data_is_repeat
;## #	FRAME	AUTO	( raw_pld)	size  2,	offset -4
;## #	FRAME	AUTO	( src_did)	size  2,	offset -2
;## #  REGISTER ARG    ( src_did)   size   2,   REGISTER R1
;## #  REGISTER ARG    ( raw_pld)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(4)	Context Size(5)

	._type	286,'O',279
	._type	287,'O',259
	._type	288,'x',260,2
	._type	288,'m','src_did',0,286
	._type	288,'m','raw_pld',0,287
	._func	'single_data_is_repeat','G',4,288,$single_data_is_repeat,0
	._inspect	'F', 's', "single_data_is_repeat", "$single_data_is_repeat", 'G', 9
	._line	335
;## # C_SRC :	{
	.glb	$single_data_is_repeat
$single_data_is_repeat:
	enter	#04H
	mov.w	R1,-2[FB]	;  src_did  src_did 
	mov.w	R2,-4[FB]	;  raw_pld  raw_pld 
	._block
	._type	289,'O',279
	._var	'src_did','A',289,-2
	._type	290,'O',259
	._var	'raw_pld','A',290,-4
	._line	336
;## # C_SRC :		if(one_net_tick() - last_single_ack_time > ONE_NET_DISTINCT_SINGLE_MESSAGE_PAUSE)
	._inspect	'S', 'c', "one_net_tick", "_one_net_tick", 'G', 0, 336
	jsr	_one_net_tick
	sub.w	_last_single_ack_time,R0
	sbb.w	_last_single_ack_time+2,R2
	cmp.w	#0000H,R2
	jltu	L123
	jgtu	M3
	cmp.w	#00c8H,R0
	jleu	L123
M3:
	._line	337
	._block
	._line	338
;## # C_SRC :			return FALSE;
	mov.b	#00H,R0L
	exitd	
	._eblock
L123:
	._line	342
;## # C_SRC :		       (one_net_memcmp(raw_pld, last_single_ack_payload, ONE_NET_RAW_SINGLE_DATA_LEN)));
	push.w	#0002H
	._inspect	'S', 'p', 2
	mov.w	#_last_single_ack_did,R2
	mov.w	-2[FB],R1	;  src_did 
	._inspect	'S', 'c', "one_net_memcmp", "$one_net_memcmp", 'G', 0, 342
	jsr	$one_net_memcmp
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	mov.b	R0L,R0H
	jne	L155
	push.w	#0005H
	._inspect	'S', 'p', 2
	mov.w	#_last_single_ack_payload,R2
	mov.w	-4[FB],R1	;  raw_pld 
	._inspect	'S', 'c', "one_net_memcmp", "$one_net_memcmp", 'G', 0, 342
	jsr	$one_net_memcmp
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	mov.b	R0L,R0H
	jeq	L145
L155:
	mov.b	#00H,R0L
	jmp	L147
L145:
	mov.b	#01H,R0L
L147:
	exitd	
E3:
	._eblock
M4:
	._efunc	M4
	._inspect	'F', 'd', "single_data_is_repeat", "$single_data_is_repeat", 'G', 335, 0, 00h, 0
	._inspect	'F', 't', "single_data_is_repeat", 'G', 288
	._inspect	'F', 'r', "one_net_tick", "_one_net_tick", 'G', 336, 0, 00h, 0
	._inspect	'V', 'r', "last_single_ack_time", 'S', 336, 4, 0, 0, 00h
	._inspect	'V', 'r', "last_single_ack_did", 'S', 342, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memcmp", "$one_net_memcmp", 'G', 342, 0, 00h, 0
	._inspect	'V', 'r', "last_single_ack_payload", 'S', 342, 5, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memcmp", "$one_net_memcmp", 'G', 342, 0, 00h, 0
	._inspect	'F', 'e', "single_data_is_repeat", "$single_data_is_repeat", 'G', 2, 0


;## #	FUNCTION device_is_master
;## #	FRAME	AUTO	( enc_did)	size  2,	offset -6
;## #	FRAME	AUTO	(ENC_MASTER_DID)	size  2,	offset -4
;## #	FRAME	AUTO	(member_of_network)	size  2,	offset -2
;## #  REGISTER ARG    (member_of_network)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(6)	Context Size(5)

	._type	291,'O',260
	._type	292,'x',260,1
	._type	292,'m','member_of_network',0,291
	._func	'device_is_master','G',6,292,$device_is_master,0
	._inspect	'F', 's', "device_is_master", "$device_is_master", 'G', 11
	._line	357
;## # C_SRC :	{
	.glb	$device_is_master
$device_is_master:
	enter	#06H
	mov.w	R1,-2[FB]	;  member_of_network  member_of_network 
	._block
	._type	293,'O',260
	._var	'member_of_network','A',293,-2
	._type	294,'Z',2,259
	._type	295,'T','on_encoded_did_t',294
	._type	296,'O',295
	._var	'enc_did','A',296,-6
	._var	'ENC_MASTER_DID','A',295,-4
	._line	366
;## # C_SRC :	    	on_encoded_did_t ENC_MASTER_DID = {0xB4, 0xBC}; // this must be somewhere else?
	mov.w	#0bcb4H,-4[FB]	;  ENC_MASTER_DID 
	._line	372
;## # C_SRC :	    if(!member_of_network)
	cmp.w	#0000H,-2[FB]	;  member_of_network 
	jne	L159
	._line	373
	._block
	._line	374
;## # C_SRC :			return FALSE;
L183:
	mov.b	#00H,R0L
	exitd	
	._eblock
L159:
	._line	377
;## # C_SRC :		if(!on_base_param)
	cmp.w	#0000H,_on_base_param
	jne	L167
	._line	378
	._block
	._line	379
;## # C_SRC :			*member_of_network = FALSE;
L185:
	mov.w	-2[FB],A0	;  member_of_network 
	mov.b	#00H,[A0]
	._line	380
;## # C_SRC :			return FALSE;
	jmp	L183
	._eblock
L167:
	._line	383
;## # C_SRC :		enc_did = (on_encoded_did_t*) (&(on_base_param->sid[ON_ENCODED_NID_LEN]));
	mov.w	_on_base_param,-6[FB]	;  enc_did 
	add.w	#0009H,-6[FB]	;  enc_did 
	._line	384
;## # C_SRC :		*member_of_network = TRUE;
	mov.w	-2[FB],A0	;  member_of_network 
	mov.b	#01H,[A0]
	._line	386
;## # C_SRC :		if(did_is_broadcast(*enc_did))
	mov.w	-6[FB],R1	;  enc_did 
	._inspect	'S', 'c', "did_is_broadcast", "$did_is_broadcast", 'G', 0, 386
	jsr	$did_is_broadcast
	mov.b	R0L,R0H
	jne	L185
	._line	392
;## # C_SRC :		return on_encoded_did_equal(&ENC_MASTER_DID, enc_did);  
	mov.w	-6[FB],R2	;  enc_did 
	mova	-4[FB],R1	;  ENC_MASTER_DID 
	._inspect	'S', 'c', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 0, 392
	jsr	$on_encoded_did_equal
	exitd	
E4:
	._eblock
M5:
	._efunc	M5
	._inspect	'F', 'd', "device_is_master", "$device_is_master", 'G', 357, 0, 00h, 0
	._inspect	'F', 't', "device_is_master", 'G', 292
	._inspect	'V', 'r', "on_base_param", 'G', 377, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_base_param", 'G', 383, 2, 0, 0, 00h
	._inspect	'F', 'r', "did_is_broadcast", "$did_is_broadcast", 'G', 386, 0, 00h, 0
	._inspect	'F', 'r', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 392, 0, 00h, 0
	._inspect	'F', 'e', "device_is_master", "$device_is_master", 'G', 0, 0


;## #	FUNCTION adjust_single_data_queue
;## #	FRAME	AUTO	(  status)	size  2,	offset -10
;## #	FRAME	AUTO	(       j)	size  2,	offset -8
;## #	FRAME	AUTO	(       i)	size  2,	offset -6
;## #	FRAME	AUTO	(queue_sleep_time)	size  2,	offset -4
;## #	FRAME	AUTO	(queue_time_is_relevant)	size  1,	offset -2
;## #	FRAME	AUTO	(priority)	size  1,	offset -1
;## #  REGISTER ARG    (queue_sleep_time)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(10)	Context Size(5)

	._type	297,'O',264
	._type	298,'x',260,1
	._type	298,'m','queue_sleep_time',0,297
	._func	'adjust_single_data_queue','G',10,298,$adjust_single_data_queue,0
	._inspect	'F', 's', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 15
	._line	440
;## # C_SRC :	{
	.glb	$adjust_single_data_queue
$adjust_single_data_queue:
	enter	#0aH
	mov.w	R1,-4[FB]	;  queue_sleep_time  queue_sleep_time 
	._block
	._type	299,'O',264
	._var	'queue_sleep_time','A',299,-4
	._var	'i','A',16,-6
	._var	'j','A',16,-8
	._var	'status','A',257,-10
	._type	300,'O',279
	._var	'sleep_time','A',264,0
	._var	'priority','A',259,-1
	._var	'cur_tick','A',264,0
	._var	'queue_time_is_relevant','A',260,-2
	._type	302,'Z',5,259
	._type	301,'S','',19
	._type	301,'m','payload',302,0
	._type	301,'m','data_len',259,5
	._type	301,'m','priority',259,6
	._type	301,'m','dst_unit_idx',259,7
	._type	301,'m','raw_dst',279,8
	._type	301,'m','src_unit',259,10
	._type	301,'m','send_time',264,11
	._type	301,'m','expire_time',264,15
	._type	303,'T','on_single_data_queue_t',301
	._type	304,'O',303
	._line	445
;## # C_SRC :		UInt8 priority = ONE_NET_HIGH_PRIORITY;
	mov.b	#02H,-1[FB]	;  priority 
	._line	446
;## # C_SRC :		tick_t cur_tick = one_net_tick();
	._inspect	'S', 'c', "one_net_tick", "_one_net_tick", 'G', 0, 446
	jsr	_one_net_tick
	._line	447
;## # C_SRC :		BOOL queue_time_is_relevant = FALSE;
	mov.b	#00H,-2[FB]	;  queue_time_is_relevant 
	._line	448
;## # C_SRC :		on_single_data_queue_t* single_ptr = 0;
	mov.w	#0000H,R0	;  single_ptr 
	._line	450
;## # C_SRC :		*queue_sleep_time = 0;
	mov.w	-4[FB],A0	;  queue_sleep_time 
	mov.w	#0000H,[A0]
	mov.w	#0000H,2[A0]
	._line	457
;## # C_SRC :		for(i = 0; i < single_data_queue_size; i++)
	mov.w	#0000H,-6[FB]	;  i 
L187:
	._line	457
;## # C_SRC :		for(i = 0; i < single_data_queue_size; i++)
	mov.b	_single_data_queue_size,R0L
	mov.b	#00H,R0H
	cmp.w	R0,-6[FB]	;  i 
	jge	L191
	._line	458
	._block
	._line	463
;## # C_SRC :			if(single_data_queue[i].priority == ONE_NET_NO_PRIORITY)
	mov.w	-6[FB],A0	;  i 
	mul.w	#0013H,A0
	cmp.b	#00H,_single_data_queue+0006H[A0]
	jne	L209
	._line	465
	._block
	._line	466
;## # C_SRC :				if(i < single_data_queue_size - 1)
	mov.w	R0,R1
	add.w	#-1,R0
	cmp.w	R0,-6[FB]	;  i 
	jge	L199
	._line	467
	._block
	._line	470
;## # C_SRC :					    (single_data_queue_size - i - 1) * sizeof(on_single_data_queue_t));
	sub.w	-6[FB],R1	;  i 
	add.w	#-1,R1
	mul.w	#0013H,R1
	push.w	R1
	._inspect	'S', 'p', 2
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_1
	.stk	-3
	mov.w	#_single_data_queue,R1
	xchg.w	R1,A0
	mov.w	A0,R2
	add.w	R2,R1
	mov.w	R0,R2
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 470
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
L199:
	._line	473
;## # C_SRC :				single_data_queue_size--;
	dec.b	_single_data_queue_size
	._line	474
;## # C_SRC :				i--;
	add.w	#-1,-6[FB]	;  i 
	._eblock
L209:
	add.w	#0001H,-6[FB]	;  i 
	jmp	L187
L191:
	._eblock
	._line	481
;## # C_SRC :		for(j = 0; j < 2; j++)
	mov.w	#0000H,-8[FB]	;  j 
L219:
	._line	482
	._block
	._line	483
;## # C_SRC :		    for(i = 0; i < single_data_queue_size; i++)
	mov.w	#0000H,-6[FB]	;  i 
L231:
	._line	483
;## # C_SRC :		    for(i = 0; i < single_data_queue_size; i++)
	mov.b	_single_data_queue_size,R0L
	mov.b	#00H,R0H
	cmp.w	R0,-6[FB]	;  i 
	jge	L235
	._line	484
	._block
	._line	485
;## # C_SRC :			    single_ptr = &(single_data_queue[i]);
	mov.w	-6[FB],A0	;  i 
	mul.w	#0013H,A0
	mov.w	#_single_data_queue,R0
	add.w	R0,A0	;  single_ptr 
	._block
	._type	305,'O',303
	._var	'single_ptr','R',305,9
	._line	491
;## # C_SRC :				    if((*single_ptr).priority == priority)
	cmp.b	-1[FB],0006H[A0]	;  priority 
	jne	L341
	._eblock
	._line	492
	._block
	._block
	._type	306,'O',303
	._var	'single_ptr','R',306,9
	._line	502
;## # C_SRC :						raw_dst = &(single_ptr->raw_dst);
	mov.w	A0,R0	;  single_ptr  single_ptr 
	._eblock
	add.w	#0008H,A0	;  raw_dst 
	._block
	._type	307,'O',303
	._var	'single_ptr','R',307,5
	._type	308,'O',279
	._var	'raw_dst','R',308,9
	._line	503
;## # C_SRC :						if(((*raw_dst)[0] == 0xFF) && ((*raw_dst)[1] == 0xFF))
	cmp.b	#0ffH,[A0]	;  raw_dst 
	jne	L343
	cmp.b	#0ffH,0001H[A0]
	jne	L343
	._eblock
	._block
	._type	309,'O',303
	._var	'single_ptr','R',309,5
	._eblock
	._line	504
	._block
	._block
	._type	310,'O',303
	._var	'single_ptr','R',310,5
	._line	505
;## # C_SRC :							raw_dst = NULL;
	mov.w	#0000H,R1	;  raw_dst 
	._eblock
	mov.w	R1,A0	;  raw_dst  raw_dst 
	._block
	._type	311,'O',303
	._var	'single_ptr','R',311,5
	._type	312,'O',279
	._var	'raw_dst','R',312,9
	._eblock
L343:
	._line	509
;## # C_SRC :							NULL, NULL);
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#0000H
	._inspect	'S', 'p', 2
	mov.w	R0,A1	;  single_ptr  single_ptr 
	._eblock
	push.b	000aH[A1]
	._inspect	'S', 'p', 1
	._block
	._type	313,'O',279
	._var	'raw_dst','R',313,9
	._type	314,'O',303
	._var	'single_ptr','R',314,10
	push.w	A0	;  raw_dst 
	._inspect	'S', 'p', 2
	._eblock
	._block
	._type	315,'O',303
	._var	'single_ptr','R',315,10
	push.b	-1[FB]	;  priority 
	._inspect	'S', 'p', 1
	push.b	0007H[A1]
	._inspect	'S', 'p', 1
	push.b	0005H[A1]
	._inspect	'S', 'p', 1
	mov.w	A1,R1	;  single_ptr  single_ptr 
	._eblock
	._inspect	'S', 'c', "", "", 'O', 0, 509
	jsri.a	_one_net_send_single
	._inspect	'S', 'p', -10
	add.b	#0aH,SP
	mov.w	R0,-10[FB]	;  status 
	._line	511
;## # C_SRC :					    if(status == ONS_RSRC_FULL)
	cmp.w	#0007H,R0
	jne	L271
	._line	512
	._block
	._line	513
;## # C_SRC :							*queue_sleep_time = 0;
L345:
	mov.w	-4[FB],A0	;  queue_sleep_time 
	mov.w	#0000H,[A0]
	mov.w	#0000H,2[A0]
	._line	514
;## # C_SRC :							return TRUE; // busy.  None of the other attempts will work.  Should check the queue
	mov.b	#01H,R0L
	exitd	
	._eblock
L271:
	._line	519
;## # C_SRC :				        if(i < single_data_queue_size - 1)
	mov.b	_single_data_queue_size,R0L
	mov.b	#00H,R0H
	mov.w	R0,R1
	add.w	#-1,R0
	cmp.w	R0,-6[FB]	;  i 
	jge	L281
	._line	520
	._block
	._line	522
;## # C_SRC :					            (single_data_queue_size - i - 1) * sizeof(on_single_data_queue_t));
	sub.w	-6[FB],R1	;  i 
	add.w	#-1,R1
	mul.w	#0013H,R1
	push.w	R1
	._inspect	'S', 'p', 2
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_1
	.stk	-3
	mov.w	-6[FB],R1	;  i 
	mul.w	#0013H,R1
	mov.w	#_single_data_queue,R2
	add.w	R2,R1
	mov.w	R0,R2
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 522
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
L281:
	._line	525
;## # C_SRC :				        single_data_queue_size--;
	dec.b	_single_data_queue_size
	._line	526
;## # C_SRC :						i--;
	add.w	#-1,-6[FB]	;  i 
	._line	528
;## # C_SRC :					    if(status == ONS_SUCCESS)
	cmp.w	#0000H,-10[FB]	;  status 
	jeq	L345
	._eblock
L341:
	add.w	#0001H,-6[FB]	;  i 
	jmp	L231
L235:
	._eblock
	._line	558
;## # C_SRC :			priority = ONE_NET_LOW_PRIORITY;
	mov.b	#01H,-1[FB]	;  priority 
	._eblock
	add.w	#0001H,-8[FB]	;  j 
	cmp.w	#0002H,-8[FB]	;  j 
	jlt	L219
	._line	561
;## # C_SRC :		return queue_time_is_relevant; // nothing ready and able to send.
	mov.b	-2[FB],R0L	;  queue_time_is_relevant 
	exitd	
E5:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_1:
	mov.w	-6[FB],R0
	add.w	#0001H,R0
	mul.w	#0013H,R0
	mov.w	#_single_data_queue,R1
	add.w	R1,R0
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_1:

	._eblock
M6:
	._efunc	M6
	._inspect	'F', 'd', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 440, 0, 00h, 0
	._inspect	'F', 't', "adjust_single_data_queue", 'G', 298
	._inspect	'F', 'r', "one_net_tick", "_one_net_tick", 'G', 446, 0, 00h, 0
	._inspect	'V', 'r', "single_data_queue_size", 'G', 457, 1, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue", 'G', 463, 57, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue", 'G', 470, 57, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue", 'G', 470, 57, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 470, 0, 00h, 0
	._inspect	'V', 'r', "single_data_queue_size", 'G', 473, 1, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue_size", 'G', 483, 1, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue", 'G', 485, 57, 0, 0, 00h
	._inspect	'V', 'r', "one_net_send_single", 'G', 509, 4, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue_size", 'G', 519, 1, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue", 'G', 522, 57, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue", 'G', 522, 57, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 522, 0, 00h, 0
	._inspect	'V', 'r', "single_data_queue_size", 'G', 525, 1, 0, 0, 00h
	._inspect	'F', 'e', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 10, 0


;## #	FUNCTION place_in_single_queue
;## #	FRAME	AUTO	(queue_sleep_time)	size  4,	offset -8
;## #	FRAME	AUTO	(single_ptr)	size  2,	offset -4
;## #	FRAME	AUTO	(    data)	size  2,	offset -2
;## #  FRAME   ARG (data_len)  size   1,    offset 5
;## #  FRAME   ARG (dst_unit_idx)  size   1,    offset 6
;## #  FRAME   ARG (priority)  size   1,    offset 7
;## #  FRAME   ARG ( raw_dst)  size   2,    offset 8
;## #  FRAME   ARG (src_unit)  size   1,    offset 10
;## #  FRAME   ARG (send_time_from_now)  size   2,    offset 11
;## #  FRAME   ARG (expire_time_from_now)  size   2,    offset 13
;## #  REGISTER ARG    (    data)   size   2,   REGISTER R1
;## #	ARG Size(10)	Auto Size(8)	Context Size(5)

	._type	316,'O',259
	._type	317,'O',279
	._type	318,'O',264
	._type	319,'O',264
	._type	320,'x',257,8
	._type	320,'m','data',0,316
	._type	320,'m','data_len',0,259
	._type	320,'m','dst_unit_idx',0,259
	._type	320,'m','priority',0,259
	._type	320,'m','raw_dst',0,317
	._type	320,'m','src_unit',0,259
	._type	320,'m','send_time_from_now',0,318
	._type	320,'m','expire_time_from_now',0,319
	._func	'place_in_single_queue','G',8,320,$place_in_single_queue,0
	._inspect	'F', 's', "place_in_single_queue", "$place_in_single_queue", 'G', 13
	._line	569
;## # C_SRC :	{
	.glb	$place_in_single_queue
$place_in_single_queue:
	enter	#08H
	mov.w	R1,-2[FB]	;  data  data 
	._block
	._type	321,'O',259
	._var	'data','A',321,-2
	._var	'data_len','A',259,5
	._var	'dst_unit_idx','A',259,6
	._var	'priority','A',259,7
	._type	322,'O',279
	._var	'raw_dst','A',322,8
	._var	'src_unit','A',259,10
	._type	323,'O',264
	._var	'send_time_from_now','A',323,11
	._type	324,'O',264
	._var	'expire_time_from_now','A',324,13
	._var	'cur_tick','A',264,0
	._var	'queue_sleep_time','A',264,-8
	._var	'send_time_absolute','A',264,0
	._var	'expire_time_absolute','A',264,0
	._type	325,'O',303
	._var	'single_ptr','A',325,-4
	._line	570
;## # C_SRC :		tick_t cur_tick = one_net_tick();
	._inspect	'S', 'c', "one_net_tick", "_one_net_tick", 'G', 0, 570
	jsr	_one_net_tick
	._line	571
;## # C_SRC :	    tick_t queue_sleep_time = 0;
	mov.w	#0000H,-8[FB]	;  queue_sleep_time 
	mov.w	#0000H,-8+2[FB]	;  queue_sleep_time 
	._line	574
;## # C_SRC :		on_single_data_queue_t* single_ptr = 0;
	mov.w	#0000H,-4[FB]	;  single_ptr 
	._line	580
;## # C_SRC :	      || (src_unit == ONE_NET_DEV_UNIT && !raw_dst))
	cmp.w	#0000H,-2[FB]	;  data 
	jeq	L601
	cmp.b	#05H,5[FB]	;  data_len 
	jgtu	L601
	cmp.b	#01H,7[FB]	;  priority 
	jltu	L601
	cmp.b	#02H,7[FB]	;  priority 
	jgtu	L601
	cmp.b	#0fH,10[FB]	;  src_unit 
	jeq	L565
	cmp.b	#04H,10[FB]	;  src_unit 
	jgeu	L601
L565:
	cmp.b	#0fH,10[FB]	;  src_unit 
	jne	L603
	cmp.w	#0000H,8[FB]	;  raw_dst 
	jne	L603
L601:
	._line	581
	._block
	._line	582
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L603:
	._line	586
;## # C_SRC :		if(!send_time_from_now || !expire_time_from_now)
	cmp.w	#0000H,11[FB]	;  send_time_from_now 
	jeq	L601
	cmp.w	#0000H,13[FB]	;  expire_time_from_now 
	jeq	L601
	._line	615
;## # C_SRC :		adjust_single_data_queue(&queue_sleep_time);
	mova	-8[FB],R1	;  queue_sleep_time 
	._inspect	'S', 'c', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 0, 615
	jsr	$adjust_single_data_queue
	._line	617
;## # C_SRC :		if(single_data_queue_size >= SINGLE_DATA_QUEUE_SIZE)
	cmp.b	#03H,_single_data_queue_size
	jltu	L503
	._line	618
	._block
	._line	619
;## # C_SRC :			return ONS_RSRC_FULL;
	mov.w	#0007H,R0
	exitd	
	._eblock
L503:
	._line	622
;## # C_SRC :		single_ptr = &(single_data_queue[single_data_queue_size]);
	mov.b	_single_data_queue_size,R0L
	mov.b	#00H,R0H
	mul.w	#0013H,R0
	mov.w	#_single_data_queue,R1
	add.w	R1,R0
	mov.w	R0,-4[FB]	;  single_ptr 
	._line	625
;## # C_SRC :		one_net_memmove(single_ptr->payload, data, ONE_NET_RAW_SINGLE_DATA_LEN);
	push.w	#0005H
	._inspect	'S', 'p', 2
	mov.w	-2[FB],R2	;  data 
	mov.w	R0,R1
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 625
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	626
;## # C_SRC :		single_ptr->data_len = data_len;
	mov.w	-4[FB],A0	;  single_ptr 
	mov.b	5[FB],0005H[A0]	;  data_len 
	._line	627
;## # C_SRC :		single_ptr->dst_unit_idx = dst_unit_idx;
	mov.b	6[FB],0007H[A0]	;  dst_unit_idx 
	._line	628
;## # C_SRC :		single_ptr->priority = priority;
	mov.b	7[FB],0006H[A0]	;  priority 
	._line	630
;## # C_SRC :		if(raw_dst == NULL)
	cmp.w	#0000H,8[FB]	;  raw_dst 
	jne	L513
	._line	631
	._block
	._line	633
;## # C_SRC :			(single_ptr->raw_dst)[0] = 0xFF;
	mov.w	#0ffffH,0008H[A0]
	._eblock
	._line	635
;## # C_SRC :		}
	jmp	L515
	._line	636
;## # C_SRC :		else
L513:
	._line	637
	._block
	._line	639
;## # C_SRC :			(single_ptr->raw_dst)[0] = (*raw_dst)[0];
	mov.w	8[FB],A1	;  raw_dst 
	mov.b	[A1],0008H[A0]
	._line	640
;## # C_SRC :			(single_ptr->raw_dst)[1] = (*raw_dst)[1];
	mov.b	0001H[A1],0009H[A0]
	._eblock
	._line	641
;## # C_SRC :		}
L515:
	._line	650
;## # C_SRC :		single_data_queue_size++;
	inc.b	_single_data_queue_size
	._line	654
;## # C_SRC :	    adjust_single_data_queue(&queue_sleep_time);
	mova	-8[FB],R1	;  queue_sleep_time 
	._inspect	'S', 'c', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 0, 654
	jsr	$adjust_single_data_queue
	._line	656
;## # C_SRC :		return ONS_SUCCESS;
	mov.w	#0000H,R0
	exitd	
E6:
	._eblock
M7:
	._efunc	M7
	._inspect	'F', 'd', "place_in_single_queue", "$place_in_single_queue", 'G', 569, 0, 00h, 0
	._inspect	'F', 't', "place_in_single_queue", 'G', 320
	._inspect	'F', 'r', "one_net_tick", "_one_net_tick", 'G', 570, 0, 00h, 0
	._inspect	'F', 'r', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 615, 0, 00h, 0
	._inspect	'V', 'r', "single_data_queue_size", 'G', 617, 1, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue_size", 'G', 622, 1, 0, 0, 00h
	._inspect	'V', 'r', "single_data_queue", 'G', 622, 57, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 625, 0, 00h, 0
	._inspect	'V', 'r', "single_data_queue_size", 'G', 650, 1, 0, 0, 00h
	._inspect	'F', 'r', "adjust_single_data_queue", "$adjust_single_data_queue", 'G', 654, 0, 00h, 0
	._inspect	'F', 'e', "place_in_single_queue", "$place_in_single_queue", 'G', 2, 0


;## #	FUNCTION one_net_init
;## #	FRAME	AUTO	(PKT_HDLR)	size  2,	offset -2
;## #  REGISTER ARG    (PKT_HDLR)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(2)	Context Size(5)

	._type	326,'v'
	._type	328,'O',295
	._type	329,'O',259
	._type	330,'O',265
	._type	331,'O',330
	._type	332,'x',257,4
	._type	332,'m','PID',0,259
	._type	332,'m','SRC_DID',0,328
	._type	332,'m','pld',0,329
	._type	332,'m','txn',0,331
	._type	333,'P',332
	._type	334,'T','on_pkt_hdlr_t',333
	._type	335,'O',265
	._type	336,'O',279
	._type	337,'N',''
	._type	337,'m','ON_NACK_RSN_MAX_NACK_RSN_VALUE',63
	._type	337,'m','ON_NACK_RSN_MAX_USR_FATAL',63
	._type	337,'m','ON_NACK_RSN_MIN_USR_FATAL',56
	._type	337,'m','ON_NACK_RSN_MAX_USR_NON_FATAL',55
	._type	337,'m','ON_NACK_RSN_MIN_USR_NON_FATAL',48
	._type	337,'m','ON_NACK_RSN_MAX_USR_GENERAL',47
	._type	337,'m','ON_NACK_RSN_MIN_USR_GENERAL',32
	._type	337,'m','ON_NACK_RSN_GENERAL_ERR',31
	._type	337,'m','ON_NACK_RSN_FATAL_ERR',30
	._type	337,'m','ON_NACK_RSN_BUSY_TRY_AGAIN_TIME',14
	._type	337,'m','ON_NACK_RSN_BUSY_TRY_AGAIN',13
	._type	337,'m','ON_NACK_RSN_BUSY',12
	._type	337,'m','ON_NACK_RSN_MAX_FAILED_ATTEMPTS_REACHED',11
	._type	337,'m','ON_NACK_RSN_INTERNAL_ERR',10
	._type	337,'m','ON_NACK_RSN_TRANSACTION_ERR',9
	._type	337,'m','ON_NACK_RSN_BAD_DATA_ERR',8
	._type	337,'m','ON_NACK_RSN_INVALID_LENGTH_ERR',7
	._type	337,'m','ON_NACK_RSN_RSRC_UNAVAIL_ERR',6
	._type	337,'m','ON_NACK_RSN_MISMATCH_UNIT_ERR',5
	._type	337,'m','ON_NACK_RSN_INVALID_UNIT_ERR',4
	._type	337,'m','ON_NACK_RSN_UNIT_FUNCTION_ERR',3
	._type	337,'m','ON_NACK_RSN_DEVICE_FUNCTION_ERR',2
	._type	337,'m','ON_NACK_RSN_NONCE_ERR',1
	._type	337,'m','ON_NACK_RSN_NO_ERROR',0
	._type	338,'T','on_nack_rsn_t',337
	._type	339,'O',338
	._type	340,'N',''
	._type	340,'m','ON_ACK_STATUS',4
	._type	340,'m','ON_ACK_TIME_MS',3
	._type	340,'m','ON_ACK_VALUE',2
	._type	340,'m','ON_ACK_DATA',1
	._type	340,'m','ON_ACK',0
	._type	341,'T','on_ack_handle_t',340
	._type	342,'T','on_ack_nack_handle_t',341
	._type	343,'O',342
	._type	345,'Z',5,259
	._type	346,'Z',5,259
	._type	347,'S','',5
	._type	347,'m','uint8',259,0
	._type	347,'m','uint32',263,1
	._type	348,'T','ack_value_t',347
	._type	349,'Z',4,259
	._type	344,'U','',5
	._type	344,'m','query_resp',345,0
	._type	344,'m','ack_payload',346,0
	._type	344,'m','ack_value',348,0
	._type	344,'m','ack_time_ms',264,0
	._type	344,'m','nack_payload',349,0
	._type	344,'m','nack_value',263,0
	._type	344,'m','nack_time_ms',264,0
	._type	350,'T','ack_nack_payload_t',344
	._type	351,'O',350
	._type	352,'x',257,5
	._type	352,'m','txn',0,335
	._type	352,'m','src_did',0,336
	._type	352,'m','nack_reason',0,339
	._type	352,'m','ack_nack_handle',0,343
	._type	352,'m','ack_nack_payload',0,351
	._type	353,'P',352
	._type	354,'T','on_ack_nack_hdlr_t',353
	._type	355,'N','_ona_msg_class'
	._type	355,'m','ONA_MSG_CLASS_MASK',61440
	._type	355,'m','ONA_POLL',49152
	._type	355,'m','ONA_QUERY',32768
	._type	355,'m','ONA_COMMAND',16384
	._type	355,'m','ONA_STATUS_FAST_QUERY_RESP',8192
	._type	355,'m','ONA_STATUS_QUERY_RESP',4096
	._type	355,'m','ONA_STATUS',0
	._type	356,'T','ona_msg_class_t',355
	._type	357,'N','_ona_msg_type'
	._type	357,'m','ONA_MSG_TYPE_MASK',4095
	._type	357,'m','ONA_SIMPLE_TEXT',15
	._type	357,'m','ONA_UNIT_TYPE',13
	._type	357,'m','ONA_UNIT_TYPE_COUNT',12
	._type	357,'m','ONA_UNUSED0',11
	._type	357,'m','ONA_STATUS_INTERVAL',8
	._type	357,'m','ONA_SWITCH',0
	._type	358,'T','ona_msg_type_t',357
	._type	359,'O',279
	._type	360,'O',338
	._type	361,'O',342
	._type	362,'O',350
	._type	363,'x',260,9
	._type	363,'m','msg_class',0,356
	._type	363,'m','msg_type',0,358
	._type	363,'m','src_unit',0,259
	._type	363,'m','dst_unit',0,259
	._type	363,'m','msg_data',0,261
	._type	363,'m','src_addr',0,359
	._type	363,'m','nack_reason',0,360
	._type	363,'m','ack_nack_handle',0,361
	._type	363,'m','ack_nack_payload',0,362
	._type	364,'P',363
	._type	365,'T','on_status_msg_hdlr_t',364
	._type	366,'O',265
	._type	367,'O',366
	._type	368,'x',257,3
	._type	368,'m','txn',0,367
	._type	368,'m','NEXT_NONCE',0,259
	._type	368,'m','STATUS',0,257
	._type	369,'P',368
	._type	370,'T','on_txn_hdlr_t',369
	._type	371,'v'
	._type	372,'O',295
	._type	373,'x',371,3
	._type	373,'m','RATE',0,259
	._type	373,'m','DID',0,372
	._type	373,'m','RESULT',0,259
	._type	374,'P',373
	._type	375,'T','on_data_rate_result_hdlr_t',374
	._type	327,'S','',36
	._type	327,'m','single_data_hdlr',334,0
	._type	327,'m','single_ack_nack_hdlr',354,4
	._type	327,'m','status_msg_hdlr',365,8
	._type	327,'m','single_txn_hdlr',370,12
	._type	327,'m','block_data_hdlr',334,16
	._type	327,'m','block_txn_hdlr',370,20
	._type	327,'m','stream_data_hdlr',334,24
	._type	327,'m','stream_txn_hdlr',370,28
	._type	327,'m','data_rate_hdlr',375,32
	._type	376,'T','on_pkt_hdlr_set_t',327
	._type	377,'O',376
	._type	378,'x',326,1
	._type	378,'m','PKT_HDLR',0,377
	._func	'one_net_init','G',2,378,$one_net_init,0
	._inspect	'F', 's', "one_net_init", "$one_net_init", 'G', 7
	._line	669
;## # C_SRC :	{
	.glb	$one_net_init
$one_net_init:
	enter	#02H
	mov.w	R1,-2[FB]	;  PKT_HDLR  PKT_HDLR 
	._block
	._type	379,'O',376
	._var	'PKT_HDLR','A',379,-2
	._line	670
;## # C_SRC :	    one_net_set_channel(on_base_param->channel);
	mov.w	_on_base_param,A0
	mov.b	000bH[A0],R1L
	._inspect	'S', 'c', "one_net_set_channel", "$one_net_set_channel", 'G', 0, 670
	jsr	$one_net_set_channel
	._line	672
;## # C_SRC :	    one_net_memmove(&pkt_hdlr, PKT_HDLR, sizeof(pkt_hdlr));
	push.w	#0024H
	._inspect	'S', 'p', 2
	mov.w	-2[FB],R2	;  PKT_HDLR 
	mov.w	#_pkt_hdlr,R1
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 672
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	._eblock
	._line	673
;## # C_SRC :	} // one_net_init //
	exitd	
E7:
M8:
	._efunc	M8
	._inspect	'F', 'd', "one_net_init", "$one_net_init", 'G', 669, 0, 00h, 0
	._inspect	'F', 't', "one_net_init", 'G', 378
	._inspect	'V', 'r', "on_base_param", 'G', 670, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_set_channel", "$one_net_set_channel", 'G', 670, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 672, 36, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 672, 0, 00h, 0
	._inspect	'F', 'e', "one_net_init", "$one_net_init", 'G', 2, 0


;## #	FUNCTION on_is_my_NID
;## #  REGISTER ARG    (     NID)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	380,'Z',6,259
	._type	381,'T','on_encoded_nid_t',380
	._type	382,'O',381
	._type	383,'x',260,1
	._type	383,'m','NID',0,382
	._func	'on_is_my_NID','G',0,383,$on_is_my_NID,0
	._inspect	'F', 's', "on_is_my_NID", "$on_is_my_NID", 'G', 3
	._line	704
;## # C_SRC :	{
	.glb	$on_is_my_NID
$on_is_my_NID:
	._block
	._type	384,'O',381
	._var	'NID','A',384,0
	._line	707
;## # C_SRC :	    if(!NID)
	._block
	._type	385,'O',381
	._var	'NID','R',385,6
	cmp.w	#0000H,R1	;  NID 
	jne	L607
	._eblock
	._line	708
	._block
	._line	709
;## # C_SRC :	        return FALSE;
L645:
	mov.b	#00H,R0L
	rts	
	._eblock
L607:
	._block
	._type	386,'O',381
	._var	'NID','R',386,6
	._line	712
;## # C_SRC :	    for(i = 0; i < ON_ENCODED_NID_LEN; i++)
	mov.w	#0000H,A0	;  i 
	._eblock
	._block
	._type	387,'O',381
	._var	'NID','R',387,6
	._var	'i','R',261,9
	._eblock
	mov.w	A0,R0	;  i  i 
	._block
	._var	'i','R',261,5
	._type	388,'O',381
	._var	'NID','R',388,6
L615:
	._eblock
	._line	713
	._block
	._block
	._var	'i','R',261,5
	._type	389,'O',381
	._var	'NID','R',389,6
	._line	714
;## # C_SRC :	        if((*NID)[i] != on_base_param->sid[i])
	mov.w	R0,R2	;  i  i 
	._eblock
	add.w	_on_base_param,R0
	._block
	._type	390,'O',381
	._var	'NID','R',390,6
	._var	'i','R',261,7
	mov.w	R1,A0	;  NID  NID 
	._eblock
	add.w	R2,A0	;  i 
	._block
	._type	391,'O',381
	._var	'NID','R',391,6
	._var	'i','R',261,7
	mov.w	R0,A1
	._eblock
	cmp.b	0003H[A1],[A0]
	jne	L645
	._eblock
	add.w	#0001H,R2	;  i 
	._block
	._type	392,'O',381
	._var	'NID','R',392,6
	._var	'i','R',261,7
	mov.w	R2,R0	;  i  i 
	._eblock
	cmp.w	#0006H,R0	;  i 
	jltu	L615
	._line	720
;## # C_SRC :	    return TRUE;
	mov.b	#01H,R0L
	rts	
E8:
	._eblock
M9:
	._efunc	M9
	._inspect	'F', 'd', "on_is_my_NID", "$on_is_my_NID", 'G', 704, 0, 00h, 0
	._inspect	'F', 't', "on_is_my_NID", 'G', 383
	._inspect	'V', 'r', "on_base_param", 'G', 714, 2, 0, 0, 00h
	._inspect	'F', 'e', "on_is_my_NID", "$on_is_my_NID", 'G', 0, 0


;## #	FUNCTION did_is_broadcast
;## #  REGISTER ARG    (     did)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	393,'O',259
	._type	394,'x',260,1
	._type	394,'m','did',0,393
	._func	'did_is_broadcast','G',0,394,$did_is_broadcast,0
	._inspect	'F', 's', "did_is_broadcast", "$did_is_broadcast", 'G', 3
	._line	736
;## # C_SRC :	{
	.glb	$did_is_broadcast
$did_is_broadcast:
	._block
	._type	395,'O',259
	._var	'did','A',395,0
	._line	739
;## # C_SRC :		if(!did)
	._block
	._type	396,'O',259
	._var	'did','R',396,6
	cmp.w	#0000H,R1	;  did 
	jne	L647
	._eblock
	._line	740
	._block
	._line	741
;## # C_SRC :	        return FALSE;
L739:
	mov.b	#00H,R0L
	rts	
	._eblock
L647:
	._block
	._type	397,'O',259
	._var	'did','R',397,6
	._line	743
;## # C_SRC :		if(did[0] == ON_ENCODED_BROADCAST_DID[0] && did[1] == ON_ENCODED_BROADCAST_DID[1])
	mov.w	R1,A0	;  did  did 
	._eblock
	cmp.b	_ON_ENCODED_BROADCAST_DID,[A0]	;  did 
	jne	L735
	._block
	._type	398,'O',259
	._var	'did','R',398,9
	cmp.b	_ON_ENCODED_BROADCAST_DID+1,0001H[A0]
	jne	L735
	._eblock
	._line	744
	._block
	._line	745
;## # C_SRC :	        return TRUE;
L741:
	mov.b	#01H,R0L
	rts	
	._eblock
L735:
	._block
	._type	399,'O',259
	._var	'did','R',399,9
	._line	747
;## # C_SRC :		if(did[0] == ON_RAW_BROADCAST_DID[0] && did[1] == ON_RAW_BROADCAST_DID[1])
	cmp.b	_ON_RAW_BROADCAST_DID,[A0]	;  did 
	jne	L739
	cmp.b	_ON_RAW_BROADCAST_DID+1,0001H[A0]
	jne	L739
	._eblock
	._line	748
	._block
	._line	749
;## # C_SRC :	        return TRUE;
	jmp	L741
E9:
	._eblock
	._eblock
M10:
	._efunc	M10
	._inspect	'F', 'd', "did_is_broadcast", "$did_is_broadcast", 'G', 736, 0, 00h, 0
	._inspect	'F', 't', "did_is_broadcast", 'G', 394
	._inspect	'V', 'r', "ON_ENCODED_BROADCAST_DID", 'G', 743, 2, 0, 0, 00h
	._inspect	'V', 'r', "ON_ENCODED_BROADCAST_DID", 'G', 743, 2, 0, 0, 00h
	._inspect	'V', 'r', "ON_RAW_BROADCAST_DID", 'G', 747, 2, 0, 0, 00h
	._inspect	'V', 'r', "ON_RAW_BROADCAST_DID", 'G', 747, 2, 0, 0, 00h
	._inspect	'F', 'e', "did_is_broadcast", "$did_is_broadcast", 'G', 0, 0


;## #	FUNCTION enc_did_cmp
;## #	FRAME	AUTO	(raw_did2)	size  2,	offset -9
;## #	FRAME	AUTO	(raw_did1)	size  2,	offset -7
;## #	FRAME	AUTO	(enc_did2)	size  2,	offset -5
;## #	FRAME	AUTO	(enc_did1)	size  2,	offset -3
;## #	FRAME	AUTO	(did1IsBroadcast)	size  1,	offset -1
;## #  REGISTER ARG    (enc_did1)   size   2,   REGISTER R1
;## #  REGISTER ARG    (enc_did2)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(9)	Context Size(5)

	._type	400,'O',295
	._type	401,'O',295
	._type	402,'x',16,2
	._type	402,'m','enc_did1',0,400
	._type	402,'m','enc_did2',0,401
	._func	'enc_did_cmp','G',9,402,$enc_did_cmp,0
	._inspect	'F', 's', "enc_did_cmp", "$enc_did_cmp", 'G', 14
	._line	770
;## # C_SRC :	{
	.glb	$enc_did_cmp
$enc_did_cmp:
	enter	#09H
	mov.w	R1,-3[FB]	;  enc_did1  enc_did1 
	mov.w	R2,-5[FB]	;  enc_did2  enc_did2 
	._block
	._type	403,'O',295
	._var	'enc_did1','A',403,-3
	._type	404,'O',295
	._var	'enc_did2','A',404,-5
	._var	'raw_did1','A',279,-7
	._var	'raw_did2','A',279,-9
	._var	'did1IsBroadcast','A',260,-1
	._line	775
;## # C_SRC :		if(!enc_did1 || !enc_did2)
	cmp.w	#0000H,-3[FB]	;  enc_did1 
	jeq	L809
	cmp.w	#0000H,-5[FB]	;  enc_did2 
	jne	L743
L809:
	._line	776
	._block
	._line	778
;## # C_SRC :			return 0;
	mov.w	#0000H,R0
	exitd	
	._eblock
L743:
	._line	781
;## # C_SRC :		did1IsBroadcast = did_is_broadcast(*enc_did1);
	mov.w	-3[FB],R1	;  enc_did1 
	._inspect	'S', 'c', "did_is_broadcast", "$did_is_broadcast", 'G', 0, 781
	jsr	$did_is_broadcast
	mov.b	R0L,-1[FB]	;  did1IsBroadcast 
	._line	782
;## # C_SRC :		did2IsBroadcast = did_is_broadcast(*enc_did2);
	mov.w	-5[FB],R1	;  enc_did2 
	._inspect	'S', 'c', "did_is_broadcast", "$did_is_broadcast", 'G', 0, 782
	jsr	$did_is_broadcast
	._block
	._var	'did2IsBroadcast','R',260,1
	._line	784
;## # C_SRC :	    if(did1IsBroadcast && did2IsBroadcast)
	mov.b	-1[FB],R0H	;  did1IsBroadcast 
	jeq	L819
	mov.b	R0L,R0H
	jne	L809
	._eblock
	._line	788
;## # C_SRC :		else if(did1IsBroadcast)
L819:
	._block
	._var	'did2IsBroadcast','R',260,1
	mov.b	-1[FB],R0H	;  did1IsBroadcast 
	jeq	L783
	._eblock
	._line	789
	._block
	._line	790
;## # C_SRC :			return 1;
	mov.w	#0001H,R0
	exitd	
	._eblock
	._line	792
;## # C_SRC :		else if(did2IsBroadcast)
L783:
	._block
	._var	'did2IsBroadcast','R',260,1
	mov.b	R0L,R0H
	jeq	L787
	._eblock
	._line	793
	._block
	._line	794
;## # C_SRC :			return -1;
	mov.w	#0ffffH,R0
	exitd	
	._eblock
L787:
	._line	798
;## # C_SRC :	    on_decode(raw_did1, *enc_did1, ON_ENCODED_DID_LEN);
	push.w	#0002H
	._inspect	'S', 'p', 2
	mov.w	-3[FB],R2	;  enc_did1 
	mova	-7[FB],R1	;  raw_did1 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 798
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	799
;## # C_SRC :	    on_decode(raw_did2, *enc_did2, ON_ENCODED_DID_LEN);
	push.w	#0002H
	._inspect	'S', 'p', 2
	mov.w	-5[FB],R2	;  enc_did2 
	mova	-9[FB],R1	;  raw_did2 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 799
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	801
;## # C_SRC :		if(raw_did1[0] == raw_did2[0])
	cmp.b	-9[FB],-7[FB]	;  raw_did2  raw_did1 
	jne	L791
	._line	802
	._block
	._line	803
;## # C_SRC :			return (int) raw_did1[1] - (int) raw_did2[1];
	mov.b	-6[FB],R0L	;  raw_did1 
	mov.b	#00H,R0H
	mov.b	-8[FB],R1L	;  raw_did2 
	mov.b	#00H,R1H
L821:
	sub.w	R1,R0
	exitd	
	._eblock
L791:
	._line	806
;## # C_SRC :	    return (int) raw_did1[0] -  (int) raw_did2[0];
	mov.b	-7[FB],R0L	;  raw_did1 
	mov.b	#00H,R0H
	mov.b	-9[FB],R1L	;  raw_did2 
	mov.b	#00H,R1H
	jmp	L821
E10:
	._eblock
M11:
	._efunc	M11
	._inspect	'F', 'd', "enc_did_cmp", "$enc_did_cmp", 'G', 770, 0, 00h, 0
	._inspect	'F', 't', "enc_did_cmp", 'G', 402
	._inspect	'F', 'r', "did_is_broadcast", "$did_is_broadcast", 'G', 781, 0, 00h, 0
	._inspect	'F', 'r', "did_is_broadcast", "$did_is_broadcast", 'G', 782, 0, 00h, 0
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 798, 0, 00h, 0
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 799, 0, 00h, 0
	._inspect	'F', 'e', "enc_did_cmp", "$enc_did_cmp", 'G', 2, 0


;## #	FUNCTION on_encoded_did_equal
;## #  REGISTER ARG    (     LHS)   size   2,   REGISTER R1
;## #  REGISTER ARG    (     RHS)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	405,'O',295
	._type	406,'O',295
	._type	407,'x',260,2
	._type	407,'m','LHS',0,405
	._type	407,'m','RHS',0,406
	._func	'on_encoded_did_equal','G',0,407,$on_encoded_did_equal,0
	._inspect	'F', 's', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 3
	._line	820
;## # C_SRC :	{
	.glb	$on_encoded_did_equal
$on_encoded_did_equal:
	._block
	._type	408,'O',295
	._var	'LHS','A',408,0
	._type	409,'O',295
	._var	'RHS','A',409,0
	._line	821
;## # C_SRC :		if(!LHS || !RHS)
	._block
	._type	410,'O',295
	._var	'LHS','R',410,6
	._type	411,'O',295
	._var	'RHS','R',411,7
	cmp.w	#0000H,R1	;  LHS 
	jeq	L861
	cmp.w	#0000H,R2	;  RHS 
	jne	L823
	._eblock
L861:
	._line	822
	._block
	._line	823
;## # C_SRC :	        return FALSE;
	mov.b	#00H,R0L
	rts	
	._eblock
L823:
	._block
	._type	412,'O',295
	._var	'LHS','R',412,6
	._type	413,'O',295
	._var	'RHS','R',413,7
	._line	825
;## # C_SRC :	    return (enc_did_cmp(LHS, RHS) == 0);
	._eblock
	._block
	._type	414,'O',295
	._var	'LHS','R',414,6
	._eblock
	._inspect	'S', 'c', "enc_did_cmp", "$enc_did_cmp", 'G', 0, 825
	jsr	$enc_did_cmp
	cmp.w	#0000H,R0
	stzx	#01H,#00H,R0L
	rts	
E11:
	._eblock
M12:
	._efunc	M12
	._inspect	'F', 'd', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 820, 0, 00h, 0
	._inspect	'F', 't', "on_encoded_did_equal", 'G', 407
	._inspect	'F', 'r', "enc_did_cmp", "$enc_did_cmp", 'G', 825, 0, 00h, 0
	._inspect	'F', 'e', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 0, 0


;## #	FUNCTION on_validate_dst_DID
;## #	FRAME	AUTO	(     DID)	size  2,	offset -2
;## #  REGISTER ARG    (     DID)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(2)	Context Size(5)

	._type	415,'O',295
	._type	416,'x',257,1
	._type	416,'m','DID',0,415
	._func	'on_validate_dst_DID','G',2,416,$on_validate_dst_DID,0
	._inspect	'F', 's', "on_validate_dst_DID", "$on_validate_dst_DID", 'G', 7
	._line	840
;## # C_SRC :	{
	.glb	$on_validate_dst_DID
$on_validate_dst_DID:
	enter	#02H
	mov.w	R1,-2[FB]	;  DID  DID 
	._block
	._type	417,'O',295
	._var	'DID','A',417,-2
	._line	842
;## # C_SRC :	      &(on_base_param->sid[ON_ENCODED_NID_LEN])))
	mov.w	_on_base_param,R2
	add.w	#0009H,R2
	mov.w	-2[FB],R1	;  DID 
	._inspect	'S', 'c', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 0, 842
	jsr	$on_encoded_did_equal
	mov.b	R0L,R0H
	jeq	L865
	._line	843
	._block
	._line	844
;## # C_SRC :	        return ONS_SUCCESS;
	mov.w	#0000H,R0
	exitd	
	._eblock
L865:
	._line	847
;## # C_SRC :	    if(on_encoded_did_equal(DID, &ON_ENCODED_BROADCAST_DID))
	mov.w	#_ON_ENCODED_BROADCAST_DID,R2
	mov.w	-2[FB],R1	;  DID 
	._inspect	'S', 'c', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 0, 847
	jsr	$on_encoded_did_equal
	cmp.b	#00H,R0L
	stzx	#25H,#21H,R0L
	mov.b	#00H,R0H
	._line	848
	._block
	._line	849
;## # C_SRC :	        return ONS_BROADCAST_ADDR;
	exitd	
E12:
	._eblock
	._eblock
M13:
	._efunc	M13
	._inspect	'F', 'd', "on_validate_dst_DID", "$on_validate_dst_DID", 'G', 840, 0, 00h, 0
	._inspect	'F', 't', "on_validate_dst_DID", 'G', 416
	._inspect	'V', 'r', "on_base_param", 'G', 842, 2, 0, 0, 00h
	._inspect	'F', 'r', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 842, 0, 00h, 0
	._inspect	'V', 'r', "ON_ENCODED_BROADCAST_DID", 'G', 847, 2, 0, 0, 00h
	._inspect	'F', 'r', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 847, 0, 00h, 0
	._inspect	'F', 'e', "on_validate_dst_DID", "$on_validate_dst_DID", 'G', 0, 0


;## #	FUNCTION on_encrypt
;## #	FRAME	AUTO	(    data)	size  2,	offset -5
;## #	FRAME	AUTO	(       i)	size  1,	offset -3
;## #	FRAME	AUTO	(payload_len)	size  1,	offset -2
;## #	FRAME	AUTO	(  rounds)	size  1,	offset -1
;## #  FRAME   ARG (     KEY)  size   2,    offset 5
;## #  REGISTER ARG    (DATA_TYPE)   size   1,   REGISTER R1L
;## #  REGISTER ARG    (    data)   size   2,   REGISTER R2
;## #	ARG Size(2)	Auto Size(5)	Context Size(5)

	._type	418,'O',259
	._type	419,'O',269
	._type	420,'x',257,3
	._type	420,'m','DATA_TYPE',0,259
	._type	420,'m','data',0,418
	._type	420,'m','KEY',0,419
	._func	'on_encrypt','G',5,420,$on_encrypt,0
	._inspect	'F', 's', "on_encrypt", "$on_encrypt", 'G', 10
	._line	873
;## # C_SRC :	{
	.glb	$on_encrypt
$on_encrypt:
	enter	#05H
	mov.w	R2,-5[FB]	;  data  data 
	._block
	._var	'DATA_TYPE','A',259,0
	._type	421,'O',259
	._var	'data','A',421,-5
	._type	422,'O',269
	._var	'KEY','A',422,5
	._var	'payload_len','A',259,-2
	._var	'rounds','A',259,-1
	._line	882
;## # C_SRC :	    UInt8 rounds = 0;
	._block
	._var	'DATA_TYPE','R',259,3
	mov.b	#00H,-1[FB]	;  rounds 
	._line	884
;## # C_SRC :	    if(!data || !KEY)
	cmp.w	#0000H,-5[FB]	;  data 
	jeq	L969
	cmp.w	#0000H,5[FB]	;  KEY 
	jne	L875
	._eblock
L969:
	._line	885
	._block
	._line	886
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L875:
	._block
	._var	'DATA_TYPE','R',259,3
	._line	890
;## # C_SRC :	    if(DATA_TYPE == ON_SINGLE)
	cmp.b	#03H,R1L	;  DATA_TYPE 
	jne	L899
	._eblock
	._line	891
	._block
	._block
	._var	'DATA_TYPE','R',259,3
	._line	892
;## # C_SRC :	        payload_len = ON_RAW_SINGLE_PLD_SIZE;
	mov.b	#09H,-2[FB]	;  payload_len 
	._eblock
	._line	893
;## # C_SRC :	    } // if single //
	jmp	L911
	._eblock
	._line	894
;## # C_SRC :	    else if(DATA_TYPE == ON_INVITE)
L899:
	._block
	._var	'DATA_TYPE','R',259,3
	cmp.b	#01H,R1L	;  DATA_TYPE 
	stzx	#19H,#21H,-2[FB]	;  payload_len 
	._line	902
;## # C_SRC :	        } // else block/stream //
L911:
	._line	911
;## # C_SRC :	    if(DATA_TYPE != ON_STREAM)
	cmp.b	#04H,R1L	;  DATA_TYPE 
	jeq	L927
	._eblock
	._line	912
	._block
	._line	913
;## # C_SRC :	        switch(on_base_param->single_block_encrypt)
	mov.w	_on_base_param,A0
	mov.b	001dH[A0],R0L
	jeq	L921
	cmp.b	#40H,R0L
	jeq	L923
	._line	928
	._block
	._line	929
;## # C_SRC :	                return ONS_INTERNAL_ERR;
L981:
	mov.w	#000aH,R0
	exitd	
	._eblock
	._line	914
	._block
	._line	915
;## # C_SRC :	            case ONE_NET_SINGLE_BLOCK_ENCRYPT_NONE:
L921:
	._line	916
	._block
	._line	917
;## # C_SRC :	                rounds = 0;
	mov.b	#00H,-1[FB]	;  rounds 
	._line	918
;## # C_SRC :	                break;
	jmp	L919
	._eblock
	._line	921
;## # C_SRC :	            case ONE_NET_SINGLE_BLOCK_ENCRYPT_XTEA32:
L923:
	._line	922
	._block
	._line	923
;## # C_SRC :	                rounds = ON_XTEA_32_ROUNDS;
	mov.b	#20H,-1[FB]	;  rounds 
	._eblock
	._eblock
	._line	932
;## # C_SRC :	        } // switch on encryption type //
L919:
	._line	934
;## # C_SRC :	        data[payload_len - 1] = on_base_param->single_block_encrypt;
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_2
	.stk	-3
	mov.b	001dH[A0],[A1]
	._eblock
	._line	935
;## # C_SRC :	    } // if not stream //
	jmp	L929
	._line	937
;## # C_SRC :	        else
L927:
	._line	938
	._block
	._line	939
;## # C_SRC :	            switch(on_base_param->stream_encrypt)
	mov.w	_on_base_param,A0
	mov.b	002eH[A0],R0L
	jeq	L939
	cmp.b	#40H,R0L
	jeq	L941
	._line	954
	._block
	._line	955
;## # C_SRC :	                    return ONS_INTERNAL_ERR;
	jmp	L981
	._eblock
	._line	940
	._block
	._line	941
;## # C_SRC :	                case ONE_NET_STREAM_ENCRYPT_NONE:
L939:
	._line	942
	._block
	._line	943
;## # C_SRC :	                    rounds = 0;
	mov.b	#00H,-1[FB]	;  rounds 
	._line	944
;## # C_SRC :	                    break;
	jmp	L937
	._eblock
	._line	947
;## # C_SRC :	                case ONE_NET_STREAM_ENCRYPT_XTEA8:
L941:
	._line	948
	._block
	._line	949
;## # C_SRC :	                    rounds = ON_XTEA_8_ROUNDS;
	mov.b	#08H,-1[FB]	;  rounds 
	._eblock
	._eblock
	._line	958
;## # C_SRC :	            } // switch on encryption type //
L937:
	._line	960
;## # C_SRC :	            data[payload_len - 1] = on_base_param->stream_encrypt;
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_2
	.stk	-3
	mov.b	002eH[A0],[A1]
	._eblock
	._line	961
;## # C_SRC :	        } // else stream //
L929:
	._line	987
;## # C_SRC :	    if(rounds)
	mov.b	-1[FB],R0L	;  rounds 
	jeq	L949
	._line	988
	._block
	._var	'i','A',259,-3
	._line	993
;## # C_SRC :	        for(i = 0; i < payload_len - 1; i += ONE_NET_XTEA_BLOCK_SIZE)
	mov.b	#00H,-3[FB]	;  i 
L945:
	._line	993
;## # C_SRC :	        for(i = 0; i < payload_len - 1; i += ONE_NET_XTEA_BLOCK_SIZE)
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_3
	.stk	-3
	jge	L949
	._line	994
	._block
	._line	995
;## # C_SRC :	            one_net_xtea_encipher(rounds, &(data[i]), KEY);
	push.w	5[FB]	;  KEY 
	._inspect	'S', 'p', 2
	add.w	-5[FB],R1	;  data 
	mov.w	R1,R2
	mov.b	-1[FB],R1L	;  rounds 
	._inspect	'S', 'c', "one_net_xtea_encipher", "$one_net_xtea_encipher", 'G', 0, 995
	jsr	$one_net_xtea_encipher
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
	add.b	#08H,-3[FB]	;  i 
	jmp	L945
L949:
	._eblock
	._line	1011
;## # C_SRC :	    return ONS_SUCCESS;
	mov.w	#0000H,R0
	exitd	
E13:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_3:
	mov.b	-2[FB],R0L
	mov.b	#00H,R0H
	add.w	#-1,R0
	mov.b	-3[FB],R1L
	mov.b	#00H,R1H
	cmp.w	R0,R1
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_3:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_2:
	mov.w	_on_base_param,A0
	mov.b	-2[FB],A1
	dec.w	A1
	add.w	-5[FB],A1
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_2:

	._eblock
M14:
	._efunc	M14
	._inspect	'F', 'd', "on_encrypt", "$on_encrypt", 'G', 873, 0, 00h, 0
	._inspect	'F', 't', "on_encrypt", 'G', 420
	._inspect	'V', 'r', "on_base_param", 'G', 913, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_base_param", 'G', 934, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_base_param", 'G', 939, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_base_param", 'G', 960, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_xtea_encipher", "$one_net_xtea_encipher", 'G', 995, 0, 00h, 0
	._inspect	'F', 'e', "on_encrypt", "$on_encrypt", 'G', 2, 0


;## #	FUNCTION on_decrypt
;## #	FRAME	AUTO	(    data)	size  2,	offset -5
;## #	FRAME	AUTO	(       i)	size  1,	offset -3
;## #	FRAME	AUTO	(payload_len)	size  1,	offset -2
;## #	FRAME	AUTO	(  rounds)	size  1,	offset -1
;## #  FRAME   ARG (     KEY)  size   2,    offset 5
;## #  REGISTER ARG    (DATA_TYPE)   size   1,   REGISTER R1L
;## #  REGISTER ARG    (    data)   size   2,   REGISTER R2
;## #	ARG Size(2)	Auto Size(5)	Context Size(5)

	._type	423,'O',259
	._type	424,'O',269
	._type	425,'x',257,3
	._type	425,'m','DATA_TYPE',0,259
	._type	425,'m','data',0,423
	._type	425,'m','KEY',0,424
	._func	'on_decrypt','G',5,425,$on_decrypt,0
	._inspect	'F', 's', "on_decrypt", "$on_decrypt", 'G', 10
	._line	1031
;## # C_SRC :	{
	.glb	$on_decrypt
$on_decrypt:
	enter	#05H
	mov.w	R2,-5[FB]	;  data  data 
	._block
	._var	'DATA_TYPE','A',259,0
	._type	426,'O',259
	._var	'data','A',426,-5
	._type	427,'O',269
	._var	'KEY','A',427,5
	._var	'payload_len','A',259,-2
	._var	'rounds','A',259,-1
	._line	1040
;## # C_SRC :	    UInt8 rounds = 0;
	._block
	._var	'DATA_TYPE','R',259,3
	mov.b	#00H,-1[FB]	;  rounds 
	._line	1044
;## # C_SRC :	    if(!data)
	cmp.w	#0000H,-5[FB]	;  data 
	jne	L983
	._eblock
	._line	1045
	._block
	._line	1046
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L983:
	._block
	._var	'DATA_TYPE','R',259,3
	._line	1050
;## # C_SRC :	    if(DATA_TYPE == ON_SINGLE)
	cmp.b	#03H,R1L	;  DATA_TYPE 
	jne	L991
	._eblock
	._line	1051
	._block
	._block
	._var	'DATA_TYPE','R',259,3
	._line	1052
;## # C_SRC :	        payload_len = ON_RAW_SINGLE_PLD_SIZE;
	mov.b	#09H,-2[FB]	;  payload_len 
	._eblock
	._line	1053
;## # C_SRC :	    } // if single //
	jmp	L1003
	._eblock
	._line	1054
;## # C_SRC :	    else if(DATA_TYPE == ON_INVITE)
L991:
	._block
	._var	'DATA_TYPE','R',259,3
	cmp.b	#01H,R1L	;  DATA_TYPE 
	stzx	#19H,#21H,-2[FB]	;  payload_len 
	._line	1062
;## # C_SRC :	        } // else block/stream //
L1003:
	._line	1071
;## # C_SRC :	    if(DATA_TYPE != ON_STREAM)
	cmp.b	#04H,R1L	;  DATA_TYPE 
	jeq	L1019
	._eblock
	._line	1072
	._block
	._line	1073
;## # C_SRC :	        switch(data[payload_len - 1])
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_4
	.stk	-3
	jeq	L1065
	cmp.b	#40H,R0L
	jeq	L1015
	._line	1088
	._block
	._line	1089
;## # C_SRC :	                return ONS_INTERNAL_ERR;
L1067:
	mov.w	#000aH,R0
	exitd	
	._eblock
	._line	1074
	._block
	._line	1075
;## # C_SRC :	            case ONE_NET_SINGLE_BLOCK_ENCRYPT_NONE:
L1065:
	._line	1076
	._block
	._line	1077
;## # C_SRC :	                rounds = 0;
	mov.b	#00H,-1[FB]	;  rounds 
	._line	1078
;## # C_SRC :	                break;
	jmp	L1029
	._eblock
	._line	1081
;## # C_SRC :	            case ONE_NET_SINGLE_BLOCK_ENCRYPT_XTEA32:
L1015:
	._line	1082
	._block
	._line	1083
;## # C_SRC :	                rounds = ON_XTEA_32_ROUNDS;
	mov.b	#20H,-1[FB]	;  rounds 
	._line	1084
;## # C_SRC :	                break;
	jmp	L1029
	._eblock
	._eblock
	._eblock
	._line	1095
;## # C_SRC :	        else
L1019:
	._line	1096
	._block
	._line	1097
;## # C_SRC :	            switch(data[payload_len - 1])
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_4
	.stk	-3
	jeq	L1065
	cmp.b	#40H,R0L
	jne	L1067
	._line	1106
	._block
	._line	1107
;## # C_SRC :	                    rounds = ON_XTEA_8_ROUNDS;
	mov.b	#08H,-1[FB]	;  rounds 
	._eblock
	._line	1116
;## # C_SRC :	            } // switch on encryption type //
L1029:
	._eblock
	._line	1143
;## # C_SRC :	    if(rounds)
	mov.b	-1[FB],R0L	;  rounds 
	jeq	L1041
	._line	1144
	._block
	._var	'i','A',259,-3
	._line	1149
;## # C_SRC :	        for(i = 0; i < payload_len - 1; i += ONE_NET_XTEA_BLOCK_SIZE)
	mov.b	#00H,-3[FB]	;  i 
L1037:
	._line	1149
;## # C_SRC :	        for(i = 0; i < payload_len - 1; i += ONE_NET_XTEA_BLOCK_SIZE)
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_3
	.stk	-3
	jge	L1041
	._line	1150
	._block
	._line	1151
;## # C_SRC :	            one_net_xtea_decipher(rounds, &(data[i]), KEY);
	push.w	5[FB]	;  KEY 
	._inspect	'S', 'p', 2
	add.w	-5[FB],R1	;  data 
	mov.w	R1,R2
	mov.b	-1[FB],R1L	;  rounds 
	._inspect	'S', 'c', "one_net_xtea_decipher", "$one_net_xtea_decipher", 'G', 0, 1151
	jsr	$one_net_xtea_decipher
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
	add.b	#08H,-3[FB]	;  i 
	jmp	L1037
L1041:
	._eblock
	._line	1167
;## # C_SRC :	    return ONS_SUCCESS;
	mov.w	#0000H,R0
	exitd	
E14:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_4:
	mov.b	-2[FB],A0
	dec.w	A0
	add.w	-5[FB],A0
	mov.b	[A0],R0L
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_4:

	._eblock
M15:
	._efunc	M15
	._inspect	'F', 'd', "on_decrypt", "$on_decrypt", 'G', 1031, 0, 00h, 0
	._inspect	'F', 't', "on_decrypt", 'G', 425
	._inspect	'F', 'r', "one_net_xtea_decipher", "$one_net_xtea_decipher", 'G', 1151, 0, 00h, 0
	._inspect	'F', 'e', "on_decrypt", "$on_decrypt", 'G', 2, 0


;## #	FUNCTION on_rx_data_pkt
;## #	FRAME	AUTO	( src_did)	size  2,	offset -5
;## #	FRAME	AUTO	(     txn)	size  2,	offset -3
;## #	FRAME	AUTO	(     pid)	size  1,	offset -1
;## #  REGISTER ARG    (EXPECTED_SRC_DID)   size   2,   REGISTER R1
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(5)	Context Size(5)

	._type	428,'O',295
	._type	429,'O',265
	._type	430,'O',429
	._type	431,'x',257,2
	._type	431,'m','EXPECTED_SRC_DID',0,428
	._type	431,'m','txn',0,430
	._func	'on_rx_data_pkt','G',5,431,$on_rx_data_pkt,0
	._inspect	'F', 's', "on_rx_data_pkt", "$on_rx_data_pkt", 'G', 10
	._line	1193
;## # C_SRC :	{
	.glb	$on_rx_data_pkt
$on_rx_data_pkt:
	enter	#05H
	mov.w	R2,-3[FB]	;  txn  txn 
	._block
	._type	432,'O',295
	._var	'EXPECTED_SRC_DID','A',432,0
	._type	433,'O',265
	._type	434,'O',433
	._var	'txn','A',434,-3
	._var	'src_did','A',295,-5
	._var	'pid','A',259,-1
	._line	1199
;## # C_SRC :	    if(!pkt_hdlr.single_data_hdlr)
	._block
	._type	435,'O',295
	._var	'EXPECTED_SRC_DID','R',435,6
	cmp.w	#0000H,_pkt_hdlr
	jne	L1071
	cmp.w	#0000H,_pkt_hdlr+2
	jne	L1071
	._eblock
	._line	1200
	._block
	._line	1201
;## # C_SRC :	        return ONS_NOT_INIT;
	mov.w	#0002H,R0
	exitd	
	._eblock
L1071:
	._block
	._type	436,'O',295
	._var	'EXPECTED_SRC_DID','R',436,6
	._line	1204
;## # C_SRC :	    if(!EXPECTED_SRC_DID || !txn)
	cmp.w	#0000H,R1	;  EXPECTED_SRC_DID 
	jeq	L1147
	cmp.w	#0000H,-3[FB]	;  txn 
	jne	L1079
	._eblock
L1147:
	._line	1205
	._block
	._line	1206
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L1079:
	._block
	._type	437,'O',295
	._var	'EXPECTED_SRC_DID','R',437,6
	._line	1223
;## # C_SRC :	        if((status = rx_pkt_addr(EXPECTED_SRC_DID, &src_did)) != ONS_SUCCESS)
	mova	-5[FB],R2	;  src_did 
	._eblock
	._inspect	'S', 'c', "rx_pkt_addr", "$rx_pkt_addr", 'S', 0, 1223
	jsr	$rx_pkt_addr
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L1103
	._eblock
	._line	1224
	._block
	._block
	._var	'status','R',257,5
	._line	1225
;## # C_SRC :	            return status;
L1157:
	._eblock
	exitd	
	._eblock
L1103:
	._line	1231
;## # C_SRC :	    if(one_net_read(&pid, sizeof(pid)) != sizeof(pid))
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_5
	.stk	-3
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 1231
	jeq	L1113
	._line	1232
	._block
	._line	1233
;## # C_SRC :	        return ONS_READ_ERR;
	mov.w	#0028H,R0
	exitd	
	._eblock
L1113:
	._line	1242
;## # C_SRC :	    switch(pid)
	mov.b	-1[FB],R0L	;  pid 
	cmp.b	#0b9H,R0L
	jeq	L1153
	cmp.b	#0b6H,R0L
	jeq	L1153
	cmp.b	#0b2H,R0L
	jeq	L1155
	cmp.b	#0c4H,R0L
	jeq	L1155
	cmp.b	#0c5H,R0L
	jeq	L1133
	._line	1269
	._block
	._line	1270
;## # C_SRC :	            return ONS_BAD_PKT_TYPE;
	mov.w	#001cH,R0
	exitd	
	._eblock
	._line	1243
	._block
	._line	1244
;## # C_SRC :	        case ONE_NET_ENCODED_SINGLE_DATA:               // fall through
L1153:
	._line	1246
	._block
	._line	1248
;## # C_SRC :	              (const on_encoded_did_t * const)&src_did, txn);
	push.w	-3[FB]	;  txn 
	._inspect	'S', 'p', 2
	mova	-5[FB],R2	;  src_did 
	mov.b	-1[FB],R1L	;  pid 
	._inspect	'S', 'c', "rx_single_data", "$rx_single_data", 'S', 0, 1248
	jsr	$rx_single_data
L1159:
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'status','R',257,5
	._line	1249
;## # C_SRC :	            break;
	jmp	L1157
	._eblock
	._eblock
	._line	1253
;## # C_SRC :	            case ONE_NET_ENCODED_BLOCK_DATA:            // fall through
L1155:
	._line	1255
	._block
	._line	1257
;## # C_SRC :	                  (const on_encoded_did_t * const)&src_did, txn);
	push.w	-3[FB]	;  txn 
	._inspect	'S', 'p', 2
	mova	-5[FB],R2	;  src_did 
	mov.b	-1[FB],R1L	;  pid 
	._inspect	'S', 'c', "rx_block_data", "$rx_block_data", 'S', 0, 1257
	jsr	$rx_block_data
	jmp	L1159
	._inspect	'S', 'p', -2
	._eblock
	._line	1260
;## # C_SRC :	            case ONE_NET_ENCODED_STREAM_DATA:
L1133:
	._line	1261
	._block
	._line	1263
;## # C_SRC :	                  (const on_encoded_did_t * const)&src_did, txn);
	push.w	-3[FB]	;  txn 
	._inspect	'S', 'p', 2
	mova	-5[FB],R2	;  src_did 
	mov.b	-1[FB],R1L	;  pid 
	._inspect	'S', 'c', "rx_stream_data", "$rx_stream_data", 'S', 0, 1263
	jsr	$rx_stream_data
	jmp	L1159
	._inspect	'S', 'p', -2
E15:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_5:
	mov.w	#0001H,R2
	mova	-1[FB],R1
	jsr	$one_net_read
	cmp.w	#0001H,R0
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_5:

	._eblock
	._eblock
	._eblock
M16:
	._efunc	M16
	._inspect	'F', 'd', "on_rx_data_pkt", "$on_rx_data_pkt", 'G', 1193, 0, 00h, 0
	._inspect	'F', 't', "on_rx_data_pkt", 'G', 431
	._inspect	'V', 'r', "pkt_hdlr", 'S', 1199, 36, 0, 0, 00h
	._inspect	'F', 'r', "rx_pkt_addr", "$rx_pkt_addr", 'S', 1223, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 1231, 0, 00h, 0
	._inspect	'F', 'r', "rx_single_data", "$rx_single_data", 'S', 1248, 0, 00h, 0
	._inspect	'F', 'r', "rx_block_data", "$rx_block_data", 'S', 1257, 0, 00h, 0
	._inspect	'F', 'r', "rx_stream_data", "$rx_stream_data", 'S', 1263, 0, 00h, 0
	._inspect	'F', 'e', "on_rx_data_pkt", "$on_rx_data_pkt", 'G', 2, 0


;## #	FUNCTION on_build_admin_pkt
;## #	FRAME	AUTO	(admin_pkt)	size  5,	offset -9
;## #	FRAME	AUTO	(pkt_size)	size  2,	offset -4
;## #	FRAME	AUTO	(     pkt)	size  2,	offset -2
;## #  FRAME   ARG (MSG_TYPE)  size   1,    offset 5
;## #  FRAME   ARG (  MSG_ID)  size   1,    offset 6
;## #  FRAME   ARG (ENCODED_DST)  size   2,    offset 7
;## #  FRAME   ARG (TXN_NONCE)  size   1,    offset 9
;## #  FRAME   ARG (RESP_NONCE)  size   1,    offset 10
;## #  FRAME   ARG (RAW_DATA)  size   2,    offset 11
;## #  FRAME   ARG (DATA_LEN)  size   1,    offset 13
;## #  FRAME   ARG (     KEY)  size   2,    offset 14
;## #  REGISTER ARG    (     pkt)   size   2,   REGISTER R1
;## #  REGISTER ARG    (pkt_size)   size   2,   REGISTER R2
;## #	ARG Size(11)	Auto Size(9)	Context Size(5)

	._type	438,'O',259
	._type	439,'O',259
	._type	440,'O',295
	._type	441,'O',259
	._type	442,'O',269
	._type	443,'x',257,10
	._type	443,'m','pkt',0,438
	._type	443,'m','pkt_size',0,439
	._type	443,'m','MSG_TYPE',0,259
	._type	443,'m','MSG_ID',0,259
	._type	443,'m','ENCODED_DST',0,440
	._type	443,'m','TXN_NONCE',0,259
	._type	443,'m','RESP_NONCE',0,259
	._type	443,'m','RAW_DATA',0,441
	._type	443,'m','DATA_LEN',0,259
	._type	443,'m','KEY',0,442
	._func	'on_build_admin_pkt','G',9,443,$on_build_admin_pkt,0
	._inspect	'F', 's', "on_build_admin_pkt", "$on_build_admin_pkt", 'G', 14
	._line	1304
;## # C_SRC :	{
	.glb	$on_build_admin_pkt
$on_build_admin_pkt:
	enter	#09H
	mov.w	R1,-2[FB]	;  pkt  pkt 
	mov.w	R2,-4[FB]	;  pkt_size  pkt_size 
	._block
	._type	444,'O',259
	._var	'pkt','A',444,-2
	._type	445,'O',259
	._var	'pkt_size','A',445,-4
	._var	'MSG_TYPE','A',259,5
	._var	'MSG_ID','A',259,6
	._type	446,'O',295
	._var	'ENCODED_DST','A',446,7
	._var	'TXN_NONCE','A',259,9
	._var	'RESP_NONCE','A',259,10
	._type	447,'O',259
	._var	'RAW_DATA','A',447,11
	._var	'DATA_LEN','A',259,13
	._type	448,'O',269
	._var	'KEY','A',448,14
	._type	449,'Z',5,259
	._var	'admin_pkt','A',449,-9
	._line	1311
;## # C_SRC :	      || !KEY) 
	cmp.w	#0000H,-2[FB]	;  pkt 
	jeq	L1383
	cmp.w	#0000H,-4[FB]	;  pkt_size 
	jeq	L1383
	mov.w	-4[FB],A0	;  pkt_size 
	cmp.b	#1aH,[A0]
	jltu	L1383
	cmp.b	#01H,5[FB]	;  MSG_TYPE 
	jeq	L1341
	cmp.b	#02H,5[FB]	;  MSG_TYPE 
	jne	L1383
L1341:
	cmp.w	#0000H,7[FB]	;  ENCODED_DST 
	jeq	L1383
	cmp.w	#0000H,11[FB]	;  RAW_DATA 
	jeq	L1383
	cmp.b	#04H,13[FB]	;  DATA_LEN 
	jgtu	L1383
	cmp.w	#0000H,14[FB]	;  KEY 
	jne	L1163
L1383:
	._line	1312
	._block
	._line	1313
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L1163:
	._line	1316
;## # C_SRC :	    admin_pkt[ON_ADMIN_MSG_ID_IDX] = MSG_ID;
	mov.b	6[FB],-9[FB]	;  MSG_ID  admin_pkt 
	._line	1317
;## # C_SRC :	    one_net_memmove(&(admin_pkt[ON_ADMIN_DATA_IDX]), RAW_DATA, DATA_LEN);
	mov.b	13[FB],R0L	;  DATA_LEN 
	mov.b	#00H,R0H
	push.w	R0
	._inspect	'S', 'p', 2
	mov.w	11[FB],R2	;  RAW_DATA 
	mova	-8[FB],R1	;  admin_pkt 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 1317
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	1321
;## # C_SRC :	      admin_pkt, sizeof(admin_pkt), KEY);
	push.w	14[FB]	;  KEY 
	._inspect	'S', 'p', 2
	push.b	#05H
	._inspect	'S', 'p', 1
	._inspect	'S', 'p', 2
	pusha	-9[FB]	;  admin_pkt 
	push.w	9[FB]	;  TXN_NONCE 
	._inspect	'S', 'p', 2
	push.w	7[FB]	;  ENCODED_DST 
	._inspect	'S', 'p', 2
	push.b	#0b9H
	._inspect	'S', 'p', 1
	push.b	5[FB]	;  MSG_TYPE 
	._inspect	'S', 'p', 1
	mov.w	-4[FB],R2	;  pkt_size 
	mov.w	-2[FB],R1	;  pkt 
	._inspect	'S', 'c', "on_build_data_pkt", "$on_build_data_pkt", 'G', 0, 1321
	jsr	$on_build_data_pkt
	._inspect	'S', 'p', -11
	add.b	#0bH,SP
	exitd	
E16:
	._eblock
M17:
	._efunc	M17
	._inspect	'F', 'd', "on_build_admin_pkt", "$on_build_admin_pkt", 'G', 1304, 0, 00h, 0
	._inspect	'F', 't', "on_build_admin_pkt", 'G', 443
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 1317, 0, 00h, 0
	._inspect	'F', 'r', "on_build_data_pkt", "$on_build_data_pkt", 'G', 1321, 0, 00h, 0
	._inspect	'F', 'e', "on_build_admin_pkt", "$on_build_admin_pkt", 'G', 11, 0


;## #	FUNCTION on_build_data_pkt
;## #	FRAME	AUTO	( raw_pld)	size 33,	offset -39
;## #	FRAME	AUTO	(pkt_size)	size  2,	offset -6
;## #	FRAME	AUTO	(     pkt)	size  2,	offset -4
;## #	FRAME	AUTO	(pld_word_size)	size  1,	offset 13
;## #	FRAME	AUTO	(data_type)	size  1,	offset -2
;## #	FRAME	AUTO	(raw_pld_len)	size  1,	offset -1
;## #  FRAME   ARG (MSG_TYPE)  size   1,    offset 5
;## #  FRAME   ARG (     PID)  size   1,    offset 6
;## #  FRAME   ARG (ENCODED_DST)  size   2,    offset 7
;## #  FRAME   ARG (TXN_NONCE)  size   1,    offset 9
;## #  FRAME   ARG (RESP_NONCE)  size   1,    offset 10
;## #  FRAME   ARG (RAW_DATA)  size   2,    offset 11
;## #  FRAME   ARG (DATA_LEN)  size   1,    offset 13
;## #  FRAME   ARG (     KEY)  size   2,    offset 14
;## #  REGISTER ARG    (     pkt)   size   2,   REGISTER R1
;## #  REGISTER ARG    (pkt_size)   size   2,   REGISTER R2
;## #	ARG Size(11)	Auto Size(39)	Context Size(5)

	._type	450,'O',259
	._type	451,'O',259
	._type	452,'O',295
	._type	453,'O',259
	._type	454,'O',269
	._type	455,'x',257,10
	._type	455,'m','pkt',0,450
	._type	455,'m','pkt_size',0,451
	._type	455,'m','MSG_TYPE',0,259
	._type	455,'m','PID',0,259
	._type	455,'m','ENCODED_DST',0,452
	._type	455,'m','TXN_NONCE',0,259
	._type	455,'m','RESP_NONCE',0,259
	._type	455,'m','RAW_DATA',0,453
	._type	455,'m','DATA_LEN',0,259
	._type	455,'m','KEY',0,454
	._func	'on_build_data_pkt','G',39,455,$on_build_data_pkt,0
	._inspect	'F', 's', "on_build_data_pkt", "$on_build_data_pkt", 'G', 44
	._line	1350
;## # C_SRC :	{
	.glb	$on_build_data_pkt
$on_build_data_pkt:
	enter	#027H
	mov.w	R1,-4[FB]	;  pkt  pkt 
	mov.w	R2,-6[FB]	;  pkt_size  pkt_size 
	mov.b	13[FB],R0L	;  DATA_LEN  DATA_LEN 
	._block
	._type	456,'O',259
	._var	'pkt','A',456,-4
	._type	457,'O',259
	._var	'pkt_size','A',457,-6
	._var	'MSG_TYPE','A',259,5
	._var	'PID','A',259,6
	._type	458,'O',295
	._var	'ENCODED_DST','A',458,7
	._var	'TXN_NONCE','A',259,9
	._var	'RESP_NONCE','A',259,10
	._type	459,'O',259
	._var	'RAW_DATA','A',459,11
	._type	460,'O',269
	._var	'KEY','A',460,14
	._type	461,'Z',33,259
	._var	'raw_pld','A',461,-39
	._var	'data_type','A',259,-2
	._var	'pld_word_size','A',259,13
	._var	'raw_pld_len','A',259,-1
	._line	1357
;## # C_SRC :	    UInt8 raw_pld_len = 0;          // size of the raw payload in bytes
	._block
	._var	'DATA_LEN','R',259,1
	mov.b	#00H,-1[FB]	;  raw_pld_len 
	._line	1359
;## # C_SRC :	    if(!pkt || !pkt_size || !ENCODED_DST || !RAW_DATA || !DATA_LEN || !KEY)
	cmp.w	#0000H,-4[FB]	;  pkt 
	jeq	L1635
	cmp.w	#0000H,-6[FB]	;  pkt_size 
	jeq	L1635
	cmp.w	#0000H,7[FB]	;  ENCODED_DST 
	jeq	L1635
	cmp.w	#0000H,11[FB]	;  RAW_DATA 
	jeq	L1635
	mov.b	R0L,R0H
	jeq	L1635
	cmp.w	#0000H,14[FB]	;  KEY 
	jne	L1385
	._eblock
L1635:
	._line	1360
	._block
	._line	1361
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L1385:
	._block
	._var	'DATA_LEN','R',259,1
	._line	1364
;## # C_SRC :	    switch(PID)
	mov.b	6[FB],R0H	;  PID 
	cmp.b	#0b9H,R0H
	jeq	L1637
	cmp.b	#0b6H,R0H
	jeq	L1637
	cmp.b	#0b2H,R0H
	jeq	L1641
	cmp.b	#0c4H,R0H
	jeq	L1641
	cmp.b	#0c5H,R0H
	jeq	L1641
	._eblock
	._line	1407
	._block
	._line	1408
;## # C_SRC :	            return ONS_BAD_PARAM;
	jmp	L1635
	._eblock
	._line	1365
	._block
	._line	1366
;## # C_SRC :	        case ONE_NET_ENCODED_SINGLE_DATA:               // fall through
L1637:
	._block
	._var	'DATA_LEN','R',259,1
	._eblock
	._line	1368
	._block
	._block
	._var	'DATA_LEN','R',259,1
	._line	1370
;## # C_SRC :	              || DATA_LEN > ONE_NET_RAW_SINGLE_DATA_LEN)
	mov.w	-6[FB],A0	;  pkt_size 
	cmp.b	#1aH,[A0]
	jltu	L1635
	cmp.b	#05H,R0L	;  DATA_LEN 
	jgtu	L1635
	._eblock
	._line	1375
;## # C_SRC :	            data_type = ON_SINGLE;
	mov.w	#0503H,-2[FB]	;  data_type 
	._block
	._var	'DATA_LEN','R',259,1
	._line	1377
;## # C_SRC :	            pld_word_size = ON_ENCODED_SINGLE_PLD_SIZE;
	mov.b	#0bH,13[FB]	;  pld_word_size 
	._line	1378
;## # C_SRC :	            break;
	jmp	L1473
	._eblock
	._eblock
	._line	1382
;## # C_SRC :	            case ONE_NET_ENCODED_BLOCK_DATA:            // fall through
L1641:
	._block
	._var	'DATA_LEN','R',259,1
	._eblock
	._line	1385
	._block
	._block
	._var	'DATA_LEN','R',259,1
	._line	1387
;## # C_SRC :	                  || DATA_LEN > ONE_NET_RAW_BLOCK_STREAM_DATA_LEN)
	mov.w	-6[FB],A0	;  pkt_size 
	cmp.b	#3aH,[A0]
	jltu	L1635
	cmp.b	#1dH,R0L	;  DATA_LEN 
	jgtu	L1635
	._eblock
	._line	1392
;## # C_SRC :	                if(PID == ONE_NET_ENCODED_STREAM_DATA)
	cmp.b	#0c5H,6[FB]	;  PID 
	stzx	#04H,#05H,-2[FB]	;  data_type 
	._block
	._var	'DATA_LEN','R',259,1
	._line	1400
;## # C_SRC :	                raw_pld_len = ONE_NET_RAW_BLOCK_STREAM_DATA_LEN;
	mov.b	#1dH,-1[FB]	;  raw_pld_len 
	._line	1401
;## # C_SRC :	                pld_word_size = ON_ENCODED_BLOCK_STREAM_PLD_SIZE;
	mov.b	#2bH,13[FB]	;  pld_word_size 
	._eblock
	._eblock
	._line	1411
;## # C_SRC :	    } // switch(PID) //
L1473:
	._line	1415
;## # C_SRC :	      & ON_TXN_NONCE_BUILD_MASK;
	mov.b	9[FB],R0H	;  TXN_NONCE 
	shl.b	#02H,R0H
	and.b	#0fcH,R0H
	mov.b	R0H,-38[FB]	;  raw_pld 
	._line	1417
;## # C_SRC :	      >> ON_RESP_NONCE_HIGH_SHIFT) & ON_RESP_NONCE_BUILD_HIGH_MASK;
	mov.b	10[FB],R0H	;  RESP_NONCE 
	mov.b	R0H,R1L
	._eblock
	shl.b	#-4,R0H
	._block
	._var	'DATA_LEN','R',259,1
	and.b	#03H,R0H
	or.b	R0H,-38[FB]	;  raw_pld 
	._line	1419
;## # C_SRC :	      & ON_RESP_NONCE_BUILD_LOW_MASK;
	shl.b	#04H,R1L
	and.b	#0f0H,R1L
	mov.b	R1L,-37[FB]	;  raw_pld 
	._line	1420
;## # C_SRC :	    raw_pld[ON_PLD_MSG_TYPE_IDX] |= MSG_TYPE;
	or.b	5[FB],-37[FB]	;  MSG_TYPE  raw_pld 
	._line	1421
;## # C_SRC :	    one_net_memmove(&(raw_pld[ON_PLD_DATA_IDX]), RAW_DATA, DATA_LEN);
	mov.b	#00H,R0H
	._eblock
	push.w	R0
	._inspect	'S', 'p', 2
	mov.w	11[FB],R2	;  RAW_DATA 
	mova	-36[FB],R1	;  raw_pld 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 1421
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	1426
;## # C_SRC :	      ON_PLD_CRC_ORDER);
	push.b	#08H
	._inspect	'S', 'p', 1
	push.w	#00ffH
	._inspect	'S', 'p', 2
	mov.b	-1[FB],R0H	;  raw_pld_len 
	add.b	#02H,R0H
	mov.b	R0H,R0L
	push.b	R0L
	._inspect	'S', 'p', 1
	mova	-38[FB],R1	;  raw_pld 
	._inspect	'S', 'c', "one_net_compute_crc", "$one_net_compute_crc", 'G', 0, 1426
	jsr	$one_net_compute_crc
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.b	R0L,-39[FB]	;  raw_pld 
	._line	1428
;## # C_SRC :	    if((status = on_encrypt(data_type, raw_pld, KEY)) == ONS_SUCCESS)
	push.w	14[FB]	;  KEY 
	._inspect	'S', 'p', 2
	mova	-39[FB],R2	;  raw_pld 
	mov.b	-2[FB],R1L	;  data_type 
	._inspect	'S', 'c', "on_encrypt", "$on_encrypt", 'G', 0, 1428
	jsr	$on_encrypt
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jne	L1553
	._eblock
	._line	1429
	._block
	._line	1431
;## # C_SRC :	          pld_word_size);
	push.b	13[FB]	;  pld_word_size 
	._inspect	'S', 'p', 1
	._inspect	'S', 'p', 2
	pusha	-39[FB]	;  raw_pld 
	push.w	7[FB]	;  ENCODED_DST 
	._inspect	'S', 'p', 2
	push.b	6[FB]	;  PID 
	._inspect	'S', 'p', 1
	mov.w	-6[FB],R2	;  pkt_size 
	mov.w	-4[FB],R1	;  pkt 
	._inspect	'S', 'c', "on_build_pkt", "$on_build_pkt", 'G', 0, 1431
	jsr	$on_build_pkt
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._block
	._var	'status','R',257,5
	._eblock
L1553:
	._line	1434
;## # C_SRC :	    return status;
	._eblock
	exitd	
E17:
	._eblock
M18:
	._efunc	M18
	._inspect	'F', 'd', "on_build_data_pkt", "$on_build_data_pkt", 'G', 1350, 0, 00h, 0
	._inspect	'F', 't', "on_build_data_pkt", 'G', 455
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 1421, 0, 00h, 0
	._inspect	'F', 'r', "one_net_compute_crc", "$one_net_compute_crc", 'G', 1426, 0, 00h, 0
	._inspect	'F', 'r', "on_encrypt", "$on_encrypt", 'G', 1428, 0, 00h, 0
	._inspect	'F', 'r', "on_build_pkt", "$on_build_pkt", 'G', 1431, 0, 00h, 0
	._inspect	'F', 'e', "on_build_data_pkt", "$on_build_data_pkt", 'G', 6, 0


;## #	FUNCTION on_build_response_pkt
;## #	FRAME	AUTO	(raw_data)	size  9,	offset -16
;## #	FRAME	AUTO	(  handle)	size  2,	offset -7
;## #	FRAME	AUTO	(pkt_size)	size  2,	offset -5
;## #	FRAME	AUTO	(     pkt)	size  2,	offset -3
;## #	FRAME	AUTO	(       i)	size  1,	offset -1
;## #  FRAME   ARG (     PID)  size   1,    offset 5
;## #  FRAME   ARG (nack_reason)  size   2,    offset 6
;## #  FRAME   ARG (ack_nack_handle)  size   2,    offset 8
;## #  FRAME   ARG (ack_nack_payload)  size   2,    offset 10
;## #  FRAME   ARG (ENCODED_DST)  size   2,    offset 12
;## #  FRAME   ARG (TXN_NONCE)  size   1,    offset 14
;## #  FRAME   ARG (EXPECTED_NONCE)  size   1,    offset 15
;## #  FRAME   ARG (     KEY)  size   2,    offset 16
;## #  FRAME   ARG (data_type)  size   2,    offset 18
;## #  REGISTER ARG    (     pkt)   size   2,   REGISTER R1
;## #  REGISTER ARG    (pkt_size)   size   2,   REGISTER R2
;## #	ARG Size(15)	Auto Size(16)	Context Size(5)

	._type	462,'O',259
	._type	463,'O',259
	._type	464,'O',338
	._type	465,'O',342
	._type	466,'O',350
	._type	467,'O',295
	._type	468,'O',269
	._type	469,'N',''
	._type	469,'m','ON_BLOCK',5
	._type	469,'m','ON_STREAM',4
	._type	469,'m','ON_SINGLE',3
	._type	469,'m','ON_DATA_RATE_TXN',2
	._type	469,'m','ON_INVITE',1
	._type	469,'m','ON_NO_TXN',0
	._type	470,'T','on_data_t',469
	._type	471,'x',257,11
	._type	471,'m','pkt',0,462
	._type	471,'m','pkt_size',0,463
	._type	471,'m','PID',0,259
	._type	471,'m','nack_reason',0,464
	._type	471,'m','ack_nack_handle',0,465
	._type	471,'m','ack_nack_payload',0,466
	._type	471,'m','ENCODED_DST',0,467
	._type	471,'m','TXN_NONCE',0,259
	._type	471,'m','EXPECTED_NONCE',0,259
	._type	471,'m','KEY',0,468
	._type	471,'m','data_type',0,470
	._func	'on_build_response_pkt','G',16,471,$on_build_response_pkt,0
	._inspect	'F', 's', "on_build_response_pkt", "$on_build_response_pkt", 'G', 21
	._line	1466
;## # C_SRC :	{
	.glb	$on_build_response_pkt
$on_build_response_pkt:
	enter	#010H
	mov.w	R1,-3[FB]	;  pkt  pkt 
	mov.w	R2,-5[FB]	;  pkt_size  pkt_size 
	._block
	._type	472,'O',259
	._var	'pkt','A',472,-3
	._type	473,'O',259
	._var	'pkt_size','A',473,-5
	._var	'PID','A',259,5
	._type	474,'O',338
	._var	'nack_reason','A',474,6
	._type	475,'O',342
	._var	'ack_nack_handle','A',475,8
	._type	476,'O',350
	._var	'ack_nack_payload','A',476,10
	._type	477,'O',295
	._var	'ENCODED_DST','A',477,12
	._var	'TXN_NONCE','A',259,14
	._var	'EXPECTED_NONCE','A',259,15
	._type	478,'O',269
	._var	'KEY','A',478,16
	._var	'data_type','A',470,18
	._var	'i','A',259,-1
	._type	479,'Z',9,259
	._var	'raw_data','A',479,-16
	._var	'uint32','A',263,0
	._var	'isACK','A',260,0
	._var	'handle','A',342,-7
	._line	1474
;## # C_SRC :		BOOL isACK = (PID == ONE_NET_ENCODED_SINGLE_DATA_ACK || PID == ONE_NET_ENCODED_BLOCK_DATA_ACK); // TODO - Any other releva;...
	cmp.b	#0bcH,5[FB]	;  PID 
	jeq	L1891
	cmp.b	#0ccH,5[FB]	;  PID 
	jeq	L1891
	mov.b	#00H,R0L
	jmp	L1649
L1891:
	mov.b	#01H,R0L
L1649:
	._line	1475
;## # C_SRC :		on_ack_nack_handle_t handle = ON_ACK; // this also corresponds to ON_NACK
	mov.w	#0000H,-7[FB]	;  handle 
	._line	1478
;## # C_SRC :	      || TXN_NONCE > ON_MAX_NONCE || EXPECTED_NONCE > ON_MAX_NONCE)
	cmp.w	#0000H,-3[FB]	;  pkt 
	jeq	L1897
	cmp.w	#0000H,-5[FB]	;  pkt_size 
	jeq	L1897
	mov.w	-5[FB],A0	;  pkt_size 
	cmp.b	#1aH,[A0]
	jltu	L1897
	cmp.b	#3fH,14[FB]	;  TXN_NONCE 
	jgtu	L1897
	cmp.b	#3fH,15[FB]	;  EXPECTED_NONCE 
	jleu	L1671
L1897:
	._line	1479
	._block
	._line	1480
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L1671:
	._line	1484
;## # C_SRC :		if(ack_nack_payload != 0)
	cmp.w	#0000H,10[FB]	;  ack_nack_payload 
	jeq	L1899
	._line	1485
	._block
	._line	1486
;## # C_SRC :		    if(ack_nack_handle != 0)
	cmp.w	#0000H,8[FB]	;  ack_nack_handle 
	jeq	L1899
	._line	1487
	._block
	._line	1489
;## # C_SRC :			    handle = *ack_nack_handle;
	mov.w	8[FB],A0	;  ack_nack_handle 
	mov.w	[A0],-7[FB]	;  handle 
	._eblock
	._eblock
L1899:
	._line	1495
;## # C_SRC :		for(i = 3; i < 8; i++)
	mov.b	#03H,-1[FB]	;  i 
L1769:
	._line	1496
	._block
	._line	1497
;## # C_SRC :			raw_data[i] = one_net_prand(one_net_tick(), 255);
	push.w	#0000H
	push.w	#00ffH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "one_net_tick", "_one_net_tick", 'G', 0, 1497
	jsr	_one_net_tick
	pushm	R2,R0
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "one_net_prand", "_one_net_prand", 'G', 0, 1497
	jsr	_one_net_prand
	._inspect	'S', 'p', -8
	add.b	#08H,SP
	mov.b	-1[FB],R1L	;  i 
	mov.b	#00H,R1H
	mova	-16[FB],A0	;  raw_data 
	add.w	R1,A0
	mov.b	R0L,[A0]
	._eblock
	inc.b	-1[FB]	;  i 
	cmp.b	#08H,-1[FB]	;  i 
	jltu	L1769
	._line	1504
;## # C_SRC :		switch(handle) /* This may be a nack, but the valid nack values correspond to
	mov.w	-7[FB],R0	;  handle 
	jeq	L1901
	cmp.w	#0004H,R0
	jne	L1903
	._line	1506
	._block
	._line	1544
;## # C_SRC :			   if(nack_reason != 0)
	cmp.w	#0000H,6[FB]	;  nack_reason 
	jeq	L1787
	._line	1545
	._block
	._line	1546
;## # C_SRC :				   return ONS_BAD_RAW_DATA;
L1903:
	mov.w	#001aH,R0
	exitd	
	._eblock
L1787:
	._line	1549
;## # C_SRC :			   one_net_memmove(&raw_data[ON_PLD_DATA_IDX], (*ack_nack_payload).query_resp, ONE_NET_RAW_SINGLE_DATA_LEN);
	push.w	#0005H
	._inspect	'S', 'p', 2
	mov.w	10[FB],R2	;  ack_nack_payload 
	mova	-13[FB],R1	;  raw_data 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 1549
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
	._line	1554
;## # C_SRC :		}
L1901:
	._line	1557
;## # C_SRC :	    raw_data[1] = (TXN_NONCE << 2);
	mov.b	14[FB],R0L	;  TXN_NONCE 
	shl.b	#02H,R0L
	mov.b	R0L,-15[FB]	;  raw_data 
	._line	1558
;## # C_SRC :		raw_data[1] |= ((EXPECTED_NONCE & 0x30) >> 4);
	mov.b	15[FB],R0L	;  EXPECTED_NONCE 
	and.b	#30H,R0L
	shl.b	#-4,R0L
	or.b	R0L,-15[FB]	;  raw_data 
	._line	1559
;## # C_SRC :		raw_data[2] = (EXPECTED_NONCE & 0x0F) << 4;
	mov.b	15[FB],R0L	;  EXPECTED_NONCE 
	and.b	#0fH,R0L
	shl.b	#04H,R0L
	mov.b	R0L,-14[FB]	;  raw_data 
	._line	1562
;## # C_SRC :		raw_data[2] |= handle;
	or.b	-7[FB],-14[FB]	;  handle  raw_data 
	._line	1565
;## # C_SRC :		if(nack_reason != 0)
	cmp.w	#0000H,6[FB]	;  nack_reason 
	jeq	L1809
	._line	1566
	._block
	._line	1567
;## # C_SRC :			if(*nack_reason > ON_NACK_RSN_MAX_NACK_RSN_VALUE)
	mov.w	6[FB],A0	;  nack_reason 
	cmp.w	#003fH,[A0]
	jgtu	L1897
	._line	1572
;## # C_SRC :			raw_data[3] = (*nack_reason) << 2;
	mov.w	6[FB],A0	;  nack_reason 
	mov.b	[A0],R0L
	shl.b	#02H,R0L
	mov.b	R0L,-13[FB]	;  raw_data 
	._eblock
L1809:
	._line	1577
	._block
	._line	1584
;## # C_SRC :			    raw_data[8] = ONE_NET_SINGLE_BLOCK_ENCRYPT_XTEA32; // encryption technique
	mov.b	#40H,-8[FB]	;  raw_data 
	._eblock
	._line	1590
;## # C_SRC :	      ON_PLD_CRC_ORDER);
	push.b	#08H
	._inspect	'S', 'p', 1
	push.w	#00ffH
	._inspect	'S', 'p', 2
	push.b	#07H
	._inspect	'S', 'p', 1
	mova	-15[FB],R1	;  raw_data 
	._inspect	'S', 'c', "one_net_compute_crc", "$one_net_compute_crc", 'G', 0, 1590
	jsr	$one_net_compute_crc
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.b	R0L,-16[FB]	;  raw_data 
	._line	1592
;## # C_SRC :		if((status = on_encrypt(data_type, raw_data, KEY)) != ONS_SUCCESS)
	push.w	16[FB]	;  KEY 
	._inspect	'S', 'p', 2
	mova	-16[FB],R2	;  raw_data 
	mov.b	18[FB],R1L	;  data_type 
	._inspect	'S', 'c', "on_encrypt", "$on_encrypt", 'G', 0, 1592
	jsr	$on_encrypt
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L1825
	._eblock
	._line	1593
	._block
	._block
	._var	'status','R',257,5
	._line	1599
;## # C_SRC :			return status;
L1905:
	._eblock
	exitd	
	._eblock
L1825:
	._line	1618
;## # C_SRC :	    return on_build_pkt(pkt, pkt_size, PID, ENCODED_DST, raw_data, 11);
	push.b	#0bH
	._inspect	'S', 'p', 1
	._inspect	'S', 'p', 2
	pusha	-16[FB]	;  raw_data 
	push.w	12[FB]	;  ENCODED_DST 
	._inspect	'S', 'p', 2
	push.b	5[FB]	;  PID 
	._inspect	'S', 'p', 1
	mov.w	-5[FB],R2	;  pkt_size 
	mov.w	-3[FB],R1	;  pkt 
	._inspect	'S', 'c', "on_build_pkt", "$on_build_pkt", 'G', 0, 1618
	jsr	$on_build_pkt
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	jmp	L1905
E18:
	._eblock
M19:
	._efunc	M19
	._inspect	'F', 'd', "on_build_response_pkt", "$on_build_response_pkt", 'G', 1466, 0, 00h, 0
	._inspect	'F', 't', "on_build_response_pkt", 'G', 471
	._inspect	'F', 'r', "one_net_tick", "_one_net_tick", 'G', 1497, 0, 00h, 0
	._inspect	'F', 'r', "one_net_prand", "_one_net_prand", 'G', 1497, 0, 00h, 0
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 1549, 0, 00h, 0
	._inspect	'F', 'r', "one_net_compute_crc", "$one_net_compute_crc", 'G', 1590, 0, 00h, 0
	._inspect	'F', 'r', "on_encrypt", "$on_encrypt", 'G', 1592, 0, 00h, 0
	._inspect	'F', 'r', "on_build_pkt", "$on_build_pkt", 'G', 1618, 0, 00h, 0
	._inspect	'F', 'e', "on_build_response_pkt", "$on_build_response_pkt", 'G', 8, 0


;## #	FUNCTION on_build_data_rate_pkt
;## #	FRAME	AUTO	(pkt_size)	size  2,	offset -4
;## #	FRAME	AUTO	(     pkt)	size  2,	offset -2
;## #  FRAME   ARG (ENCODED_DST)  size   2,    offset 5
;## #  FRAME   ARG (data_rate)  size   1,    offset 7
;## #  REGISTER ARG    (     pkt)   size   2,   REGISTER R1
;## #  REGISTER ARG    (pkt_size)   size   2,   REGISTER R2
;## #	ARG Size(3)	Auto Size(4)	Context Size(5)

	._type	480,'O',259
	._type	481,'O',259
	._type	482,'O',295
	._type	483,'x',257,4
	._type	483,'m','pkt',0,480
	._type	483,'m','pkt_size',0,481
	._type	483,'m','ENCODED_DST',0,482
	._type	483,'m','data_rate',0,259
	._func	'on_build_data_rate_pkt','G',4,483,$on_build_data_rate_pkt,0
	._inspect	'F', 's', "on_build_data_rate_pkt", "$on_build_data_rate_pkt", 'G', 9
	._line	1642
;## # C_SRC :	{
	.glb	$on_build_data_rate_pkt
$on_build_data_rate_pkt:
	enter	#04H
	mov.w	R1,-2[FB]	;  pkt  pkt 
	mov.w	R2,-4[FB]	;  pkt_size  pkt_size 
	._block
	._type	484,'O',259
	._var	'pkt','A',484,-2
	._type	485,'O',259
	._var	'pkt_size','A',485,-4
	._type	486,'O',295
	._var	'ENCODED_DST','A',486,5
	._var	'data_rate','A',259,7
	._line	1647
;## # C_SRC :	      || !ENCODED_DST)
	cmp.w	#0000H,-2[FB]	;  pkt 
	jeq	L2019
	cmp.w	#0000H,-4[FB]	;  pkt_size 
	jeq	L2019
	mov.w	-4[FB],A0	;  pkt_size 
	cmp.b	#14H,[A0]
	jltu	L2019
	cmp.w	#0000H,5[FB]	;  ENCODED_DST 
	jne	L1907
L2019:
	._line	1648
	._block
	._line	1649
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L1907:
	._line	1652
;## # C_SRC :	    data_rate <<= ON_DATA_RATE_SHIFT;
	shl.b	#02H,7[FB]	;  data_rate 
	._line	1655
;## # C_SRC :	      ENCODED_DST, &data_rate, sizeof(data_rate))) != ONS_SUCCESS)
	push.b	#01H
	._inspect	'S', 'p', 1
	._inspect	'S', 'p', 2
	pusha	7[FB]	;  data_rate 
	push.w	5[FB]	;  ENCODED_DST 
	._inspect	'S', 'p', 2
	push.b	#0c6H
	._inspect	'S', 'p', 1
	mov.w	-4[FB],R2	;  pkt_size 
	mov.w	-2[FB],R1	;  pkt 
	._inspect	'S', 'c', "on_build_pkt", "$on_build_pkt", 'G', 0, 1655
	jsr	$on_build_pkt
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L1965
	._eblock
	._line	1656
	._block
	._block
	._var	'status','R',257,5
	._line	1657
;## # C_SRC :	        return status;
	._eblock
	exitd	
	._eblock
L1965:
	._line	1661
;## # C_SRC :	    for(i = 0; i < ON_TEST_PATTERN_SIZE; i++)
	mov.b	#00H,R0H	;  i 
	._block
	._var	'i','R',259,2
	._eblock
	mov.b	R0H,R0L	;  i  i 
	._block
	._var	'i','R',259,1
L1975:
	._eblock
	._line	1662
	._block
	._block
	._var	'i','R',259,1
	._line	1663
;## # C_SRC :	        pkt[(*pkt_size)++] = ON_TEST_PATTERN;
	mov.w	-4[FB],A0	;  pkt_size 
	mov.b	[A0],R0H
	mov.b	R0H,R1L
	._eblock
	inc.b	R0H
	._block
	._var	'i','R',259,1
	mov.b	R0H,[A0]
	mov.b	R1L,A0
	add.w	-2[FB],A0	;  pkt 
	mov.b	#0e1H,[A0]
	._eblock
	inc.b	R0L	;  i 
	cmp.b	#04H,R0L	;  i 
	jltu	L1975
	._eblock
	._line	1666
;## # C_SRC :	    return ONS_SUCCESS;
	mov.w	#0000H,R0
	exitd	
E19:
	._eblock
M20:
	._efunc	M20
	._inspect	'F', 'd', "on_build_data_rate_pkt", "$on_build_data_rate_pkt", 'G', 1642, 0, 00h, 0
	._inspect	'F', 't', "on_build_data_rate_pkt", 'G', 483
	._inspect	'F', 'r', "on_build_pkt", "$on_build_pkt", 'G', 1655, 0, 00h, 0
	._inspect	'F', 'e', "on_build_data_rate_pkt", "$on_build_data_rate_pkt", 'G', 6, 0


;## #	FUNCTION on_build_pkt
;## #	FRAME	AUTO	(      rv)	size  2,	offset -6
;## #	FRAME	AUTO	(pkt_size)	size  2,	offset -4
;## #	FRAME	AUTO	(     pkt)	size  2,	offset -2
;## #  FRAME   ARG (     PID)  size   1,    offset 5
;## #  FRAME   ARG (ENCODED_DST)  size   2,    offset 6
;## #  FRAME   ARG (RAW_DATA)  size   2,    offset 8
;## #  FRAME   ARG (DATA_WORD_SIZE)  size   1,    offset 10
;## #  REGISTER ARG    (     pkt)   size   2,   REGISTER R1
;## #  REGISTER ARG    (pkt_size)   size   2,   REGISTER R2
;## #	ARG Size(6)	Auto Size(6)	Context Size(5)

	._type	487,'O',259
	._type	488,'O',259
	._type	489,'O',295
	._type	490,'O',259
	._type	491,'x',257,6
	._type	491,'m','pkt',0,487
	._type	491,'m','pkt_size',0,488
	._type	491,'m','PID',0,259
	._type	491,'m','ENCODED_DST',0,489
	._type	491,'m','RAW_DATA',0,490
	._type	491,'m','DATA_WORD_SIZE',0,259
	._func	'on_build_pkt','G',6,491,$on_build_pkt,0
	._inspect	'F', 's', "on_build_pkt", "$on_build_pkt", 'G', 11
	._line	1693
;## # C_SRC :	{
	.glb	$on_build_pkt
$on_build_pkt:
	enter	#06H
	mov.w	R1,-2[FB]	;  pkt  pkt 
	mov.w	R2,-4[FB]	;  pkt_size  pkt_size 
	._block
	._type	492,'O',259
	._var	'pkt','A',492,-2
	._type	493,'O',259
	._var	'pkt_size','A',493,-4
	._var	'PID','A',259,5
	._type	494,'O',295
	._var	'ENCODED_DST','A',494,6
	._type	495,'O',259
	._var	'RAW_DATA','A',495,8
	._var	'DATA_WORD_SIZE','A',259,10
	._var	'i','A',259,0
	._var	'rv','A',257,-6
	._line	1702
;## # C_SRC :	    one_net_status_t rv = ONS_SUCCESS;
	mov.w	#0000H,-6[FB]	;  rv 
	._line	1705
;## # C_SRC :	      || *pkt_size < HDR_SIZE + DATA_WORD_SIZE)
	cmp.w	#0000H,-2[FB]	;  pkt 
	jeq	L2113
	cmp.w	#0000H,-4[FB]	;  pkt_size 
	jeq	L2113
	cmp.w	#0000H,6[FB]	;  ENCODED_DST 
	jeq	L2113
	mov.b	10[FB],R0L	;  DATA_WORD_SIZE 
	mov.b	#00H,R0H
	add.w	#000fH,R0
	mov.w	-4[FB],A0	;  pkt_size 
	mov.b	[A0],R1L
	mov.b	#00H,R1H
	cmp.w	R0,R1
	jge	L2021
L2113:
	._line	1706
	._block
	._line	1707
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L2021:
	._line	1711
;## # C_SRC :	    one_net_memmove(pkt, PREAMBLE, sizeof(PREAMBLE));
	push.w	#0003H
	._inspect	'S', 'p', 2
	mov.w	#_PREAMBLE,R2
	mov.w	-2[FB],R1	;  pkt 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 1711
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	1712
;## # C_SRC :	    pkt += sizeof(PREAMBLE);
	add.w	#0003H,-2[FB]	;  pkt 
	._line	1715
;## # C_SRC :	    one_net_memmove(pkt, SOF, sizeof(SOF));
	push.w	#0001H
	._inspect	'S', 'p', 2
	mov.w	#_SOF,R2
	mov.w	-2[FB],R1	;  pkt 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 1715
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	1716
;## # C_SRC :	    pkt += sizeof(SOF);
	add.w	#0001H,-2[FB]	;  pkt 
	._line	1719
;## # C_SRC :	    one_net_memmove(pkt, *ENCODED_DST, ON_ENCODED_DID_LEN);
	push.w	#0002H
	._inspect	'S', 'p', 2
	mov.w	6[FB],R2	;  ENCODED_DST 
	mov.w	-2[FB],R1	;  pkt 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 1719
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	1720
;## # C_SRC :	    pkt += ON_ENCODED_DID_LEN;
	add.w	#0002H,-2[FB]	;  pkt 
	._line	1723
;## # C_SRC :	    one_net_memmove(pkt, on_base_param->sid, sizeof(on_base_param->sid));
	push.w	#0008H
	._inspect	'S', 'p', 2
	mov.w	_on_base_param,R2
	add.w	#0003H,R2
	mov.w	-2[FB],R1	;  pkt 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 1723
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	1724
;## # C_SRC :	    pkt += sizeof(on_base_param->sid);
	add.w	#0008H,-2[FB]	;  pkt 
	._line	1727
;## # C_SRC :	    *pkt++ = PID;
	mov.w	-2[FB],A0	;  pkt 
	mov.b	5[FB],[A0]	;  PID 
	add.w	#0001H,-2[FB]	;  pkt 
	._line	1729
;## # C_SRC :	    if(RAW_DATA)
	cmp.w	#0000H,8[FB]	;  RAW_DATA 
	jeq	L2079
	._line	1730
	._block
	._line	1731
;## # C_SRC :	        rv = on_encode(pkt, RAW_DATA, DATA_WORD_SIZE);
	mov.b	10[FB],R0L	;  DATA_WORD_SIZE 
	mov.b	#00H,R0H
	push.w	R0
	._inspect	'S', 'p', 2
	mov.w	8[FB],R2	;  RAW_DATA 
	mov.w	-2[FB],R1	;  pkt 
	._inspect	'S', 'c', "on_encode", "$on_encode", 'G', 0, 1731
	jsr	$on_encode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	mov.w	R0,-6[FB]	;  rv 
	._eblock
L2079:
	._line	1742
;## # C_SRC :	    *pkt_size = HDR_SIZE + DATA_WORD_SIZE;
	mov.w	-4[FB],A0	;  pkt_size 
	mov.b	10[FB],R0L	;  DATA_WORD_SIZE 
	add.b	#0fH,R0L
	mov.b	R0L,[A0]
	._line	1743
;## # C_SRC :	    return rv;
	mov.w	-6[FB],R0	;  rv 
	exitd	
E20:
	._eblock
M21:
	._efunc	M21
	._inspect	'F', 'd', "on_build_pkt", "$on_build_pkt", 'G', 1693, 0, 00h, 0
	._inspect	'F', 't', "on_build_pkt", 'G', 491
	._inspect	'V', 'r', "PREAMBLE", 'S', 1711, 3, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 1711, 0, 00h, 0
	._inspect	'V', 'r', "SOF", 'S', 1715, 1, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 1715, 0, 00h, 0
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 1719, 0, 00h, 0
	._inspect	'V', 'r', "on_base_param", 'G', 1723, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 1723, 0, 00h, 0
	._inspect	'F', 'r', "on_encode", "$on_encode", 'G', 1731, 0, 00h, 0
	._inspect	'F', 'e', "on_build_pkt", "$on_build_pkt", 'G', 2, 0


;## #	FUNCTION on_parse_pld
;## #	FRAME	AUTO	(resp_nonce)	size  2,	offset -5
;## #	FRAME	AUTO	(txn_nonce)	size  2,	offset -3
;## #	FRAME	AUTO	(raw_pld_len)	size  1,	offset -1
;## #  FRAME   ARG (msg_type)  size   2,    offset 5
;## #  FRAME   ARG (     pld)  size   2,    offset 7
;## #  FRAME   ARG (DATA_TYPE)  size   1,    offset 9
;## #  FRAME   ARG (     KEY)  size   2,    offset 10
;## #  REGISTER ARG    (txn_nonce)   size   2,   REGISTER R1
;## #  REGISTER ARG    (resp_nonce)   size   2,   REGISTER R2
;## #	ARG Size(7)	Auto Size(5)	Context Size(5)

	._type	496,'O',259
	._type	497,'O',259
	._type	498,'O',259
	._type	499,'O',259
	._type	500,'O',269
	._type	501,'x',257,6
	._type	501,'m','txn_nonce',0,496
	._type	501,'m','resp_nonce',0,497
	._type	501,'m','msg_type',0,498
	._type	501,'m','pld',0,499
	._type	501,'m','DATA_TYPE',0,259
	._type	501,'m','KEY',0,500
	._func	'on_parse_pld','G',5,501,$on_parse_pld,0
	._inspect	'F', 's', "on_parse_pld", "$on_parse_pld", 'G', 10
	._line	1768
;## # C_SRC :	{
	.glb	$on_parse_pld
$on_parse_pld:
	enter	#05H
	mov.w	R1,-3[FB]	;  txn_nonce  txn_nonce 
	mov.w	R2,-5[FB]	;  resp_nonce  resp_nonce 
	._block
	._type	502,'O',259
	._var	'txn_nonce','A',502,-3
	._type	503,'O',259
	._var	'resp_nonce','A',503,-5
	._type	504,'O',259
	._var	'msg_type','A',504,5
	._type	505,'O',259
	._var	'pld','A',505,7
	._var	'DATA_TYPE','A',259,9
	._type	506,'O',269
	._var	'KEY','A',506,10
	._var	'raw_pld_len','A',259,-1
	._line	1773
;## # C_SRC :	    if(!txn_nonce || !resp_nonce || !msg_type || !pld || !KEY)
	cmp.w	#0000H,-3[FB]	;  txn_nonce 
	jeq	L2261
	cmp.w	#0000H,-5[FB]	;  resp_nonce 
	jeq	L2261
	cmp.w	#0000H,5[FB]	;  msg_type 
	jeq	L2261
	cmp.w	#0000H,7[FB]	;  pld 
	jeq	L2261
	cmp.w	#0000H,10[FB]	;  KEY 
	jne	L2115
L2261:
	._line	1774
	._block
	._line	1775
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L2115:
	._line	1778
;## # C_SRC :	    switch(DATA_TYPE)
	mov.b	9[FB],R0L	;  DATA_TYPE 
	cmp.b	#03H,R0L
	jeq	L2189
	cmp.b	#05H,R0L
	jeq	L2263
	cmp.b	#04H,R0L
	jeq	L2263
	._line	1798
	._block
	._line	1799
;## # C_SRC :	            return ONS_BAD_PARAM;
	jmp	L2261
	._eblock
	._line	1779
	._block
	._line	1780
;## # C_SRC :	        case ON_SINGLE:
L2189:
	._line	1781
	._block
	._line	1783
;## # C_SRC :	            raw_pld_len = ON_RAW_SINGLE_PLD_SIZE - 1;
	mov.b	#08H,-1[FB]	;  raw_pld_len 
	._line	1784
;## # C_SRC :	            break;
	jmp	L2187
	._eblock
	._line	1788
;## # C_SRC :	            case ON_BLOCK:          // fall through
L2263:
	._line	1790
	._block
	._line	1792
;## # C_SRC :	                raw_pld_len = ON_RAW_BLOCK_STREAM_PLD_SIZE - 1;
	mov.b	#20H,-1[FB]	;  raw_pld_len 
	._eblock
	._eblock
	._line	1802
;## # C_SRC :	    } // switch(DATA_TYPE)
L2187:
	._line	1804
;## # C_SRC :	    if((status = on_decrypt(DATA_TYPE, pld, KEY)) != ONS_SUCCESS)
	push.w	10[FB]	;  KEY 
	._inspect	'S', 'p', 2
	mov.w	7[FB],R2	;  pld 
	mov.b	9[FB],R1L	;  DATA_TYPE 
	._inspect	'S', 'c', "on_decrypt", "$on_decrypt", 'G', 0, 1804
	jsr	$on_decrypt
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L2197
	._eblock
	._line	1805
	._block
	._block
	._var	'status','R',257,5
	._line	1806
;## # C_SRC :	        return status;
	._eblock
	exitd	
	._eblock
L2197:
	._line	1811
;## # C_SRC :	      != pld[ON_PLD_CRC_IDX])
	push.b	#08H
	._inspect	'S', 'p', 1
	push.w	#00ffH
	._inspect	'S', 'p', 2
	mov.b	-1[FB],R0L	;  raw_pld_len 
	dec.b	R0L
	push.b	R0L
	._inspect	'S', 'p', 1
	mov.w	7[FB],R1	;  pld 
	add.w	#0001H,R1
	._inspect	'S', 'c', "one_net_compute_crc", "$one_net_compute_crc", 'G', 0, 1811
	jsr	$one_net_compute_crc
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.w	7[FB],A0	;  pld 
	cmp.b	[A0],R0L
	jeq	L2207
	._line	1812
	._block
	._line	1813
;## # C_SRC :	        return ONS_CRC_FAIL;
	mov.w	#000cH,R0
	exitd	
	._eblock
L2207:
	._line	1818
;## # C_SRC :	      & ON_TXN_NONCE_PARSE_MASK;
	mov.w	7[FB],A0	;  pld 
	mov.b	0001H[A0],R0L
	shl.b	#-2,R0L
	and.b	#3fH,R0L
	mov.w	-3[FB],A1	;  txn_nonce 
	mov.b	R0L,[A1]
	._line	1822
;## # C_SRC :	      << ON_RESP_NONCE_HIGH_SHIFT) & ON_RESP_NONCE_PARSE_HIGH_MASK;
	mov.b	0001H[A0],R0L
	shl.b	#04H,R0L
	and.b	#30H,R0L
	mov.w	-5[FB],A1	;  resp_nonce 
	mov.b	R0L,[A1]
	._line	1824
;## # C_SRC :	      & ON_RESP_NONCE_PARSE_LOW_MASK;
	mov.b	0002H[A0],R0L
	shl.b	#-4,R0L
	and.b	#0fH,R0L
	or.b	R0L,[A1]
	._line	1827
;## # C_SRC :	    *msg_type = pld[ON_PLD_MSG_TYPE_IDX] & ON_PLD_MSG_TYPE_MASK;
	mov.w	5[FB],A1	;  msg_type 
	mov.b	0002H[A0],[A1]
	and.b	#0fH,[A1]
	._line	1829
;## # C_SRC :	    return ONS_SUCCESS;
	mov.w	#0000H,R0
	exitd	
E21:
	._eblock
M22:
	._efunc	M22
	._inspect	'F', 'd', "on_parse_pld", "$on_parse_pld", 'G', 1768, 0, 00h, 0
	._inspect	'F', 't', "on_parse_pld", 'G', 501
	._inspect	'F', 'r', "on_decrypt", "$on_decrypt", 'G', 1804, 0, 00h, 0
	._inspect	'F', 'r', "one_net_compute_crc", "$one_net_compute_crc", 'G', 1811, 0, 00h, 0
	._inspect	'F', 'e', "on_parse_pld", "$on_parse_pld", 'G', 4, 0


;## #	FUNCTION on_update_next_txn_time
;## #	FRAME	AUTO	(     txn)	size  2,	offset -2
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(2)	Context Size(5)

	._type	507,'v'
	._type	508,'O',265
	._type	509,'x',507,1
	._type	509,'m','txn',0,508
	._func	'on_update_next_txn_time','G',2,509,$on_update_next_txn_time,0
	._inspect	'F', 's', "on_update_next_txn_time", "$on_update_next_txn_time", 'G', 7
	._line	1842
;## # C_SRC :	    {
	.glb	$on_update_next_txn_time
$on_update_next_txn_time:
	enter	#02H
	mov.w	R1,-2[FB]	;  txn  txn 
	._block
	._type	510,'O',265
	._var	'txn','A',510,-2
	._line	1843
;## # C_SRC :	        if(!txn)
	jne	L2265
	._line	1844
	._block
	._line	1845
;## # C_SRC :	            return;
	exitd	
	._eblock
L2265:
	._line	1848
;## # C_SRC :	        if(txn->priority == ONE_NET_HIGH_PRIORITY)
	mov.w	-2[FB],A0	;  txn 
	cmp.b	#02H,[A0]
	jne	L2273
	._line	1849
	._block
	._line	1851
;## # C_SRC :	              on_base_param->fragment_delay_high);
	mov.w	_on_base_param,A1
	push.w	0033H+2H[A1]
	push.w	0033H[A1]
	._inspect	'S', 'p', 4
L2289:
	mov.b	0005H[A0],R1L
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 1851
	jsr	$ont_set_timer
	._inspect	'S', 'p', -4
	._eblock
	._line	1852
;## # C_SRC :	        } // if a high priority transaction //
	exitd	
	._line	1853
;## # C_SRC :	        else
L2273:
	._line	1854
	._block
	._line	1856
;## # C_SRC :	              on_base_param->fragment_delay_low);
	mov.w	_on_base_param,A0
	push.w	002fH+2H[A0]
	push.w	002fH[A0]
	._inspect	'S', 'p', 4
	mov.w	-2[FB],A0	;  txn 
	jmp	L2289
	._inspect	'S', 'p', -4
E22:
	._eblock
	._eblock
M23:
	._efunc	M23
	._inspect	'F', 'd', "on_update_next_txn_time", "$on_update_next_txn_time", 'G', 1842, 0, 00h, 0
	._inspect	'F', 't', "on_update_next_txn_time", 'G', 509
	._inspect	'V', 'r', "on_base_param", 'G', 1851, 2, 0, 0, 00h
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 1851, 0, 00h, 0
	._inspect	'V', 'r', "on_base_param", 'G', 1856, 2, 0, 0, 00h
	._inspect	'F', 'e', "on_update_next_txn_time", "$on_update_next_txn_time", 'G', 4, 0


;## #	FUNCTION one_net
;## #	FRAME	AUTO	(     txn)	size  2,	offset -6
;## #	FRAME	AUTO	(data_rate)	size  1,	offset -4
;## #	FRAME	AUTO	(data_rate)	size  1,	offset -3
;## #	FRAME	AUTO	(data_rate)	size  1,	offset -2
;## #	FRAME	AUTO	(      rv)	size  1,	offset -1
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(6)	Context Size(5)

	._type	511,'O',265
	._type	512,'O',511
	._type	513,'x',260,1
	._type	513,'m','txn',0,512
	._func	'one_net','G',6,513,$one_net,0
	._inspect	'F', 's', "one_net", "$one_net", 'G', 11
	._line	1877
;## # C_SRC :	{
	.glb	$one_net
$one_net:
	enter	#06H
	mov.w	R1,-6[FB]	;  txn  txn 
	._block
	._type	514,'O',265
	._type	515,'O',514
	._var	'txn','A',515,-6
	._var	'rv','A',260,-1
	._line	1878
;## # C_SRC :	    BOOL rv = FALSE;
	mov.b	#00H,-1[FB]	;  rv 
	._line	1895
;## # C_SRC :	      || !pkt_hdlr.single_data_hdlr)
	cmp.w	#0000H,-6[FB]	;  txn 
	jeq	L2985
	mov.w	-6[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	jeq	L2985
	mov.w	[A0],A0
	cmp.w	#0000H,000aH[A0]
	jeq	L2985
	cmp.b	#1aH,0009H[A0]
	jltu	L2985
	cmp.w	#0000H,_pkt_hdlr
	jne	L2291
	cmp.w	#0000H,_pkt_hdlr+2
	jne	L2291
L2985:
	._line	1896
	._block
	._line	1897
;## # C_SRC :	        return FALSE;
	mov.b	#00H,R0L
	exitd	
	._eblock
L2291:
	._line	1900
;## # C_SRC :	    switch(on_state)
	mov.w	_on_state,R0
	cmp.w	#000aH,R0
	jeq	L2367
	cmp.w	#000bH,R0
	jeq	L2373
	cmp.w	#0014H,R0
	jeq	L2989
	cmp.w	#0028H,R0
	jeq	L2989
	cmp.w	#003cH,R0
	jeq	L2989
	cmp.w	#0015H,R0
	jeq	L2997
	cmp.w	#001fH,R0
	jeq	L2997
	cmp.w	#0029H,R0
	jeq	L2997
	cmp.w	#003dH,R0
	jeq	L2997
	cmp.w	#0052H,R0
	jeq	L2997
	cmp.w	#0016H,R0
	jeq	L2429
	cmp.w	#001eH,R0
	jeq	L3001
	cmp.w	#0032H,R0
	jeq	L3001
	cmp.w	#0046H,R0
	jeq	L3001
	cmp.w	#002aH,R0
	jeq	L2529
	cmp.w	#0033H,R0
	jeq	L2577
	cmp.w	#0034H,R0
	jeq	L2587
	cmp.w	#003eH,R0
	jeq	L2621
	cmp.w	#0047H,R0
	jeq	L2665
	cmp.w	#0050H,R0
	jeq	L2671
	cmp.w	#0051H,R0
	jeq	L2701
	cmp.w	#0053H,R0
	jeq	L2727
	cmp.w	#005aH,R0
	jeq	L2743
	cmp.w	#005bH,R0
	jeq	L2773
	cmp.w	#005cH,R0
	jeq	L2807
	cmp.w	#005dH,R0
	jeq	L2813
	cmp.w	#03e8H,R0
	jeq	L3057
	jmp	L2821
	._line	1901
	._block
	._line	1902
;## # C_SRC :	        case ON_SEND_PKT:
L2367:
	._line	1903
	._block
	._line	1904
;## # C_SRC :	            if(check_for_clr_channel())
	._inspect	'S', 'c', "check_for_clr_channel", "_check_for_clr_channel", 'S', 0, 1904
	jsr	_check_for_clr_channel
	mov.b	R0L,R0H
	jeq	L3057
	._line	1905
	._block
	._line	1906
;## # C_SRC :	                one_net_write((*txn)->pkt, (*txn)->data_len);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_6
	.stk	-3
	._inspect	'S', 'c', "one_net_write", "$one_net_write", 'G', 0, 1906
	._line	1907
;## # C_SRC :	                on_state = ON_SEND_PKT_WRITE_WAIT;
	mov.w	#000bH,_on_state
	._eblock
	._line	1908
;## # C_SRC :	            } // if channel is clear //
	jmp	L3057
	._eblock
	._line	1912
;## # C_SRC :	        case ON_SEND_PKT_WRITE_WAIT:
L2373:
	._line	1913
	._block
	._line	1914
;## # C_SRC :	            if(one_net_write_done())
	._inspect	'S', 'c', "one_net_write_done", "_one_net_write_done", 'G', 0, 1914
	jsr	_one_net_write_done
	mov.b	R0L,R0H
	jeq	L3057
	._line	1915
	._block
	._line	1916
;## # C_SRC :	                rv = TRUE;
L3047:
	mov.b	#01H,-1[FB]	;  rv 
	._line	1917
;## # C_SRC :	                on_state = ON_LISTEN_FOR_DATA;
	jmp	L2821
	._eblock
	._eblock
	._line	1922
;## # C_SRC :	        case ON_SEND_SINGLE_DATA_PKT:                   // fall through
L2989:
	._line	1927
	._block
	._line	1929
;## # C_SRC :	              && check_for_clr_channel())
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 1929
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L3057
	._inspect	'S', 'c', "check_for_clr_channel", "_check_for_clr_channel", 'S', 0, 1929
	jsr	_check_for_clr_channel
	mov.b	R0L,R0H
	jeq	L3057
	._line	1930
	._block
	._line	1931
;## # C_SRC :	                one_net_write((*txn)->pkt, (*txn)->data_len);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_6
	.stk	-3
	._inspect	'S', 'c', "one_net_write", "$one_net_write", 'G', 0, 1931
	._line	1933
;## # C_SRC :	                ont_set_timer(ONT_GENERAL_TIMER, ONE_NET_RESPONSE_TIME_OUT);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_7
	.stk	-3
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 1933
	._inspect	'S', 'p', -4
	._line	1934
;## # C_SRC :	                on_state++;
L2975:
	add.w	#0001H,_on_state
	._eblock
	._line	1935
;## # C_SRC :	            } // if the channel is clear //
	jmp	L3057
	._eblock
	._line	1939
;## # C_SRC :	        case ON_SEND_SINGLE_DATA_WRITE_WAIT:            // fall through
L2997:
	._line	1946
	._block
	._line	1947
;## # C_SRC :	            if(one_net_write_done())
	._inspect	'S', 'c', "one_net_write_done", "_one_net_write_done", 'G', 0, 1947
	jsr	_one_net_write_done
	mov.b	R0L,R0H
	jeq	L3057
	._line	1948
	._block
	._line	1950
;## # C_SRC :	                    if(cur_stream)
	cmp.w	#0000H,_cur_stream
	jeq	L2411
	._line	1951
	._block
	._line	1952
;## # C_SRC :	                        *txn = cur_stream;
	mov.w	-6[FB],A0	;  txn 
	mov.w	_cur_stream,[A0]
	._line	1953
;## # C_SRC :	                        cur_stream = 0;
	mov.w	#0000H,_cur_stream
	._line	1954
;## # C_SRC :	                        on_state = ON_WAIT_FOR_STREAM_DATA_RESP;
	mov.w	#003eH,_on_state
	._eblock
	._line	1955
;## # C_SRC :	                    } // if cur_stream //
	jmp	L3057
	._line	1956
;## # C_SRC :	                    else
L2411:
	._line	1958
	._block
	._line	1959
;## # C_SRC :						on_state++;
	add.w	#0001H,_on_state
	._line	1962
;## # C_SRC :						if(on_state == ON_SEND_SINGLE_DATA_RESP_WRITE_WAIT + 1)
	cmp.w	#0020H,_on_state
	jne	L3057
	._line	1963
	._block
	._line	1964
;## # C_SRC :							on_state = ON_LISTEN_FOR_DATA;
	jmp	L2821
	._eblock
	._eblock
	._eblock
	._eblock
	._line	1972
;## # C_SRC :	        case ON_WAIT_FOR_SINGLE_DATA_RESP:
L2429:
	._line	1973
	._block
	._line	1977
;## # C_SRC :				rx_status = rx_single_resp_pkt(txn);
	mov.w	-6[FB],R1	;  txn 
	._inspect	'S', 'c', "rx_single_resp_pkt", "$rx_single_resp_pkt", 'S', 0, 1977
	jsr	$rx_single_resp_pkt
	._block
	._var	'rx_status','R',257,5
	._line	1978
;## # C_SRC :	            if(rx_status == ONS_SINGLE_FAIL || rx_status == ONS_SINGLE_CANCELED)
	cmp.w	#0012H,R0	;  rx_status 
	jeq	L3017
	cmp.w	#002bH,R0	;  rx_status 
	jne	L2431
	._eblock
L3017:
	._line	1979
	._block
	._line	1980
;## # C_SRC :	                rv = TRUE;
	mov.b	#01H,-1[FB]	;  rv 
	._line	1981
;## # C_SRC :	                break;
	jmp	L3057
	._eblock
L2431:
	._line	1984
;## # C_SRC :	            if(on_state == ON_LISTEN_FOR_DATA)
	mov.w	_on_state,R0
	jeq	L3017
	._line	1989
;## # C_SRC :	              && ont_inactive_or_expired(ONT_GENERAL_TIMER))
	cmp.w	#0016H,R0
	jne	L3057
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 1989
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L3057
	._line	1990
	._block
	._line	1993
;## # C_SRC :	                (*txn)->retry++;
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_8
	.stk	-3
	._line	1995
;## # C_SRC :	                if((*txn)->retry >= ON_MAX_RETRY)
	jltu	L2469
	._line	1996
	._block
	._line	1998
;## # C_SRC :	                      ONS_SINGLE_FAIL);
	push.w	#0012H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 1998
	jsri.a	_pkt_hdlr+12
L3075:
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	1999
;## # C_SRC :	                    rv = TRUE;
	jmp	L3047
	._eblock
	._line	2002
;## # C_SRC :	                else
L2469:
	._line	2003
	._block
	._line	2006
;## # C_SRC :	                      = ONE_NET_ENCODED_REPEAT_SINGLE_DATA;
	mov.w	000aH[A1],A1
	mov.b	#0b6H,000eH[A1]
	._line	2008
;## # C_SRC :	                    if((*txn)->priority == ONE_NET_HIGH_PRIORITY)
	mov.w	[A0],A0
	cmp.b	#02H,[A0]
	jne	L2479
	._line	2009
	._block
	._line	2012
;## # C_SRC :	                          ONE_NET_RETRANSMIT_HIGH_PRIORITY_TIME));
	push.w	#0000H
	push.w	#0002H
	._inspect	'S', 'p', 4
	jmp	L3059
	._inspect	'S', 'p', 4
	._inspect	'S', 'p', -8
	._inspect	'S', 'p', 4
	._inspect	'S', 'p', -4
	._eblock
	._line	2014
;## # C_SRC :	                    else
L2479:
	._line	2015
	._block
	._line	2018
;## # C_SRC :	                          ONE_NET_RETRANSMIT_LOW_PRIORITY_TIME));
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
L3059:
	._inspect	'S', 'c', "one_net_tick", "_one_net_tick", 'G', 0, 2018
	jsr	_one_net_tick
	pushm	R2,R0
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "one_net_prand", "_one_net_prand", 'G', 0, 2018
	jsr	_one_net_prand
	._inspect	'S', 'p', -8
	add.b	#08H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 2018
	jsr	$ont_set_timer
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
	._line	2020
;## # C_SRC :	                    on_state = ON_SEND_SINGLE_DATA_PKT;
	mov.w	#0014H,_on_state
	._eblock
	._eblock
	._line	2022
;## # C_SRC :	            } // else if on_state hasn't changed & timed out waiting for resp //
	jmp	L3057
	._eblock
	._line	2026
;## # C_SRC :	        case ON_SEND_SINGLE_DATA_RESP:                  // fall through
L3001:
	._line	2031
	._block
	._line	2032
;## # C_SRC :	            if(check_for_clr_channel())
	._inspect	'S', 'c', "check_for_clr_channel", "_check_for_clr_channel", 'S', 0, 2032
	jsr	_check_for_clr_channel
	mov.b	R0L,R0H
	jeq	L3057
	._line	2033
	._block
	._line	2034
;## # C_SRC :	                one_net_write((*txn)->pkt, (*txn)->data_len);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_6
	.stk	-3
	._inspect	'S', 'c', "one_net_write", "$one_net_write", 'G', 0, 2034
	._line	2054
;## # C_SRC :	                on_state++;
	jmp	L2975
	._eblock
	._eblock
	._line	2077
;## # C_SRC :	            case ON_WAIT_FOR_BLOCK_DATA_RESP:
L2529:
	._line	2078
	._block
	._line	2079
;## # C_SRC :	                if(rx_block_resp_pkt(txn) == ONS_BLOCK_FAIL)
	mov.w	-6[FB],R1	;  txn 
	._inspect	'S', 'c', "rx_block_resp_pkt", "$rx_block_resp_pkt", 'S', 0, 2079
	jsr	$rx_block_resp_pkt
	cmp.w	#0014H,R0
	jeq	L3047
	._line	2087
;## # C_SRC :	                  && ont_inactive_or_expired(ONT_GENERAL_TIMER))
	cmp.w	#002aH,_on_state
	jne	L3025
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 2087
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L3025
	._line	2088
	._block
	._line	2090
;## # C_SRC :	                    (*txn)->retry++;
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_8
	.stk	-3
	._line	2092
;## # C_SRC :	                    if((*txn)->retry >= ON_MAX_RETRY)
	jltu	L2541
	._line	2093
	._block
	._line	2095
;## # C_SRC :	                          ONS_BLOCK_FAIL);
	push.w	#0014H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 2095
	jsri.a	_pkt_hdlr+20
	jmp	L3075
	._inspect	'S', 'p', -3
	._eblock
	._line	2098
;## # C_SRC :	                    else
L2541:
	._line	2099
	._block
	._line	2101
;## # C_SRC :	                          ONS_TIME_OUT);
	push.w	#0009H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 2101
	jsri.a	_pkt_hdlr+20
L3087:
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._eblock
	._line	2104
;## # C_SRC :	                    on_state = ON_LISTEN_FOR_DATA;
	jmp	L2821
	._eblock
	._line	2106
;## # C_SRC :	                else if(block_complete)
L3025:
	mov.b	_block_complete,R0L
	jeq	L3057
	._line	2107
	._block
	._line	2108
;## # C_SRC :	                    block_complete = FALSE;
	mov.b	#00H,_block_complete
	._line	2109
;## # C_SRC :	                    rv = TRUE;
	jmp	L3047
	._eblock
	._eblock
	._line	2115
;## # C_SRC :	            case ON_SEND_BLOCK_DATA_RESP_WRITE_WAIT:
L2577:
	._line	2116
	._block
	._line	2117
;## # C_SRC :	                if(one_net_write_done())
	._inspect	'S', 'c', "one_net_write_done", "_one_net_write_done", 'G', 0, 2117
	jsr	_one_net_write_done
	mov.b	R0L,R0H
	jeq	L3057
	._line	2118
	._block
	._line	2119
;## # C_SRC :	                    if(block_complete)
	mov.b	_block_complete,R0L
	jeq	L3047
	._line	2120
	._block
	._line	2121
;## # C_SRC :	                        block_complete = FALSE;
	mov.b	#00H,_block_complete
	._line	2123
;## # C_SRC :	                          ONE_NET_RESPONSE_TIME_OUT);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_7
	.stk	-3
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 2123
	._inspect	'S', 'p', -4
	._line	2124
;## # C_SRC :	                        on_state = ON_WAIT_FOR_BLOCK_DATA_END;
	mov.w	#0034H,_on_state
	._eblock
	._line	2125
;## # C_SRC :	                    } // if the block transaction is complete //
	jmp	L3057
	._eblock
	._eblock
	._line	2135
;## # C_SRC :	            case ON_WAIT_FOR_BLOCK_DATA_END:
L2587:
	._line	2136
	._block
	._line	2137
;## # C_SRC :	                if(rx_block_txn_ack(txn) == ONS_SUCCESS)
	mov.w	-6[FB],R1	;  txn 
	._inspect	'S', 'c', "rx_block_txn_ack", "$rx_block_txn_ack", 'S', 0, 2137
	jsr	$rx_block_txn_ack
	cmp.w	#0000H,R0
	stz	#01H,-1[FB]	;  rv 
	._line	2145
;## # C_SRC :	                  && ont_inactive_or_expired(ONT_GENERAL_TIMER))
	cmp.w	#0034H,_on_state
	jne	L3057
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 2145
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L3057
	._line	2146
	._block
	._line	2147
;## # C_SRC :	                    on_state = ON_LISTEN_FOR_DATA;
	jmp	L2821
	._eblock
	._eblock
	._line	2152
;## # C_SRC :	            case ON_WAIT_FOR_STREAM_DATA_RESP:
L2621:
	._line	2153
	._block
	._line	2154
;## # C_SRC :	                if(rx_stream_resp_pkt(txn) == ONS_STREAM_FAIL)
	mov.w	-6[FB],R1	;  txn 
	._inspect	'S', 'c', "rx_stream_resp_pkt", "$rx_stream_resp_pkt", 'S', 0, 2154
	jsr	$rx_stream_resp_pkt
	cmp.w	#0016H,R0
	jne	L2623
	._line	2155
	._block
	._line	2156
;## # C_SRC :	                    cur_stream = 0;
	mov.w	#0000H,_cur_stream
	._line	2157
;## # C_SRC :	                    rv = TRUE;
	jmp	L3047
	._eblock
L2623:
	._line	2163
;## # C_SRC :	                  && ont_inactive_or_expired(ONT_GENERAL_TIMER))
	cmp.w	#003eH,_on_state
	jne	L3057
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 2163
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L3057
	._line	2164
	._block
	._line	2166
;## # C_SRC :	                    (*txn)->retry++;
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_8
	.stk	-3
	._line	2168
;## # C_SRC :	                    if((*txn)->retry >= ON_MAX_RETRY)
	jltu	L2633
	._line	2169
	._block
	._line	2170
;## # C_SRC :	                        cur_stream = 0;
	mov.w	#0000H,_cur_stream
	._line	2172
;## # C_SRC :	                          ONS_STREAM_FAIL);
	push.w	#0016H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 2172
	jsri.a	_pkt_hdlr+28
	jmp	L3075
	._inspect	'S', 'p', -3
	._eblock
	._line	2175
;## # C_SRC :	                    else
L2633:
	._line	2176
	._block
	._line	2178
;## # C_SRC :	                          ONS_TIME_OUT);
	push.w	#0009H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 2178
	jsri.a	_pkt_hdlr+28
	jmp	L3087
	._inspect	'S', 'p', -3
	._eblock
	._eblock
	._eblock
	._line	2186
;## # C_SRC :	            case ON_SEND_STREAM_DATA_RESP_WRITE_WAIT:
L2665:
	._line	2187
	._block
	._line	2188
;## # C_SRC :	                if(one_net_write_done())
	._inspect	'S', 'c', "one_net_write_done", "_one_net_write_done", 'G', 0, 2188
	jsr	_one_net_write_done
	mov.b	R0L,R0H
	jeq	L3057
	._line	2189
	._block
	._line	2190
;## # C_SRC :	                    on_state = ON_LISTEN_FOR_DATA;
	jmp	L2821
	._eblock
	._eblock
	._line	2196
;## # C_SRC :	        case ON_INIT_SEND_DATA_RATE:
L2671:
	._line	2197
	._block
	._var	'data_rate','A',259,-2
	._line	2202
;## # C_SRC :	              || data_rate >= ONE_NET_DATA_RATE_LIMIT)
	push.w	#0001H
	._inspect	'S', 'p', 2
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_9
	.stk	-3
	mova	-2[FB],R1	;  data_rate 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 2202
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	cmp.w	#0000H,R0
	jne	L3051
	cmp.b	#06H,-2[FB]	;  data_rate 
	jltu	L2673
L3051:
	._line	2203
	._block
	._line	2205
;## # C_SRC :	                (*txn)->priority = ONE_NET_NO_PRIORITY;
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A0
	mov.b	#00H,[A0]
	._line	2206
;## # C_SRC :	                rv = TRUE;
	jmp	L3047
	._eblock
L2673:
	._line	2211
;## # C_SRC :	            one_net_set_data_rate(data_rate);
	mov.b	-2[FB],R1L	;  data_rate 
	._inspect	'S', 'c', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 0, 2211
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_10
	.stk	-3
	._line	2212
;## # C_SRC :	            (*txn)->retry = 0;
	._line	2213
;## # C_SRC :	            data_rate_result = 0;
	mov.b	#00H,_data_rate_result
	._line	2214
;## # C_SRC :	            on_state = ON_SEND_DATA_RATE;
L2977:
	mov.w	#0051H,_on_state
	._line	2215
;## # C_SRC :	            break;
	jmp	L3057
	._eblock
	._line	2218
;## # C_SRC :	        case ON_SEND_DATA_RATE:
L2701:
	._line	2219
	._block
	._line	2220
;## # C_SRC :	            if((*txn)->retry < ON_MAX_DATA_RATE_TRIES)
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A0
	cmp.b	#08H,0001H[A0]
	jgeu	L2707
	._line	2221
	._block
	._line	2222
;## # C_SRC :	                if(check_for_clr_channel())
	._inspect	'S', 'c', "check_for_clr_channel", "_check_for_clr_channel", 'S', 0, 2222
	jsr	_check_for_clr_channel
	mov.b	R0L,R0H
	jeq	L3057
	._line	2223
	._block
	._line	2224
;## # C_SRC :	                    one_net_write((*txn)->pkt, (*txn)->data_len);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_6
	.stk	-3
	._inspect	'S', 'c', "one_net_write", "$one_net_write", 'G', 0, 2224
	._line	2228
;## # C_SRC :	                      ONE_NET_RESPONSE_TIME_OUT);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_7
	.stk	-3
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 2228
	._inspect	'S', 'p', -4
	._line	2229
;## # C_SRC :	                    on_state = ON_SEND_DATA_RATE_WRITE_WAIT;
	mov.w	#0052H,_on_state
	._eblock
	._line	2230
;## # C_SRC :	                } // if the channel is clear //
	jmp	L3057
	._eblock
	._line	2232
;## # C_SRC :	            else
L2707:
	._line	2233
	._block
	._var	'data_rate','A',259,-3
	._line	2236
;## # C_SRC :	                one_net_set_data_rate(on_base_param->data_rate);
	mov.w	_on_base_param,A0
	mov.b	000cH[A0],R1L
	._inspect	'S', 'c', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 0, 2236
	jsr	$one_net_set_data_rate
	._line	2237
;## # C_SRC :	                (*txn)->priority = ONE_NET_NO_PRIORITY;
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A1
	mov.b	#00H,[A1]
	._line	2240
;## # C_SRC :	                  ON_DATA_RATE_WORD_SIZE) == ONS_SUCCESS)
	push.w	#0001H
	._inspect	'S', 'p', 2
	mov.w	[A0],A0
	mov.w	000aH[A0],R2
	add.w	#000fH,R2
	mova	-3[FB],R1	;  data_rate 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 2240
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	cmp.w	#0000H,R0
	jne	L3047
	._line	2241
	._block
	._line	2245
;## # C_SRC :	                      data_rate_result);
	push.b	_data_rate_result
	._inspect	'S', 'p', 1
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A0
	mov.w	000aH[A0],R2
	add.w	#0004H,R2
	mov.b	-3[FB],R1L	;  data_rate 
	._inspect	'S', 'c', "", "", 'O', 0, 2245
	jsri.a	_pkt_hdlr+32
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2248
;## # C_SRC :	                rv = TRUE;
	jmp	L3047
	._eblock
	._eblock
	._line	2254
;## # C_SRC :	        case ON_RX_DATA_RATE_RESP:
L2727:
	._line	2255
	._block
	._line	2256
;## # C_SRC :	            if(rx_data_rate(*txn, FALSE) == ONS_SUCCESS)
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],R1
	._inspect	'S', 'c', "rx_data_rate", "$rx_data_rate", 'S', 0, 2256
	jsr	$rx_data_rate
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0000H,R0
	jne	L2729
	._line	2257
	._block
	._line	2258
;## # C_SRC :	                data_rate_result++;
	inc.b	_data_rate_result
	._line	2259
;## # C_SRC :	                (*txn)->retry++;
L2979:
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A0
	add.b	#01H,0001H[A0]
	._line	2260
;## # C_SRC :	                on_state = ON_SEND_DATA_RATE;
	jmp	L2977
	._eblock
	._line	2262
;## # C_SRC :	            else if(ont_inactive_or_expired(ONT_GENERAL_TIMER))
L2729:
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 2262
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L3057
	._line	2263
	._block
	._line	2264
;## # C_SRC :	                (*txn)->retry++;
	jmp	L2979
	._eblock
	._eblock
	._line	2270
;## # C_SRC :	        case ON_INIT_RX_DATA_RATE:
L2743:
	._line	2271
	._block
	._var	'data_rate','A',259,-4
	._line	2276
;## # C_SRC :	              || data_rate >= ONE_NET_DATA_RATE_LIMIT)
	push.w	#0001H
	._inspect	'S', 'p', 2
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_9
	.stk	-3
	mova	-4[FB],R1	;  data_rate 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 2276
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	cmp.w	#0000H,R0
	jne	L3051
	cmp.b	#06H,-4[FB]	;  data_rate 
	jgeu	L3051
	._line	2285
;## # C_SRC :	            one_net_set_data_rate(data_rate);
	mov.b	-4[FB],R1L	;  data_rate 
	._inspect	'S', 'c', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 0, 2285
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_10
	.stk	-3
	._line	2286
;## # C_SRC :	            (*txn)->retry = 0;
	._line	2287
;## # C_SRC :	            ont_set_timer(ONT_GENERAL_TIMER, ONE_NET_STAY_AWAKE_TIME);
L3103:
	push.w	#0000H
	push.w	#07d0H
	._inspect	'S', 'p', 4
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 2287
	jsr	$ont_set_timer
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2288
;## # C_SRC :	            on_state = ON_RX_DATA_RATE;
	mov.w	#005bH,_on_state
	._line	2289
;## # C_SRC :	            break;
	jmp	L3057
	._eblock
	._line	2292
;## # C_SRC :	        case ON_RX_DATA_RATE:
L2773:
	._line	2293
	._block
	._line	2295
;## # C_SRC :	              ont_inactive_or_expired(ONT_GENERAL_TIMER))
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A0
	cmp.b	#08H,0001H[A0]
	jgeu	L2967
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 2295
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L2775
L2967:
	._line	2296
	._block
	._line	2297
;## # C_SRC :	                one_net_set_data_rate(on_base_param->data_rate);
	mov.w	_on_base_param,A0
	mov.b	000cH[A0],R1L
	._inspect	'S', 'c', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 0, 2297
	jsr	$one_net_set_data_rate
	._line	2298
;## # C_SRC :	                rv = TRUE;
	mov.b	#01H,-1[FB]	;  rv 
	._line	2299
;## # C_SRC :	                on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._line	2307
;## # C_SRC :	                (*txn)->priority = ONE_NET_NO_PRIORITY;
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A1
	mov.b	#00H,[A1]
	._line	2309
;## # C_SRC :	                    ONE_NET_ENCODED_SINGLE_DATA;
	mov.w	[A0],A0
	mov.w	000aH[A0],A0
	mov.b	#0b9H,000eH[A0]
	._eblock
	._line	2310
;## # C_SRC :	            } // if we had enough successes or timed out //
	jmp	L3057
	._line	2311
;## # C_SRC :	            else if(rx_data_rate(*txn, TRUE) == ONS_SUCCESS)
L2775:
	push.b	#01H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],R1
	._inspect	'S', 'c', "rx_data_rate", "$rx_data_rate", 'S', 0, 2311
	jsr	$rx_data_rate
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0000H,R0
	jne	L3057
	._line	2312
	._block
	._line	2313
;## # C_SRC :	                (*txn)->retry++;
	mov.w	-6[FB],A0	;  txn 
	mov.w	[A0],A0
	add.b	#01H,0001H[A0]
	._line	2315
;## # C_SRC :	                ont_set_timer(ONT_GENERAL_TIMER, 0);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_11
	.stk	-3
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 2315
	._inspect	'S', 'p', -4
	._line	2316
;## # C_SRC :	                on_state = ON_SEND_DATA_RATE_RESP;
	mov.w	#005cH,_on_state
	._eblock
	._line	2317
;## # C_SRC :	            } // if receiving the response was successful //
	jmp	L3057
	._eblock
	._line	2321
;## # C_SRC :	        case ON_SEND_DATA_RATE_RESP:
L2807:
	._line	2322
	._block
	._line	2323
;## # C_SRC :	            if(check_for_clr_channel())
	._inspect	'S', 'c', "check_for_clr_channel", "_check_for_clr_channel", 'S', 0, 2323
	jsr	_check_for_clr_channel
	mov.b	R0L,R0H
	jeq	L3057
	._line	2324
	._block
	._line	2325
;## # C_SRC :	                one_net_write((*txn)->pkt, (*txn)->data_len);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_6
	.stk	-3
	._inspect	'S', 'c', "one_net_write", "$one_net_write", 'G', 0, 2325
	._line	2326
;## # C_SRC :	                on_state = ON_SEND_DATA_RATE_RESP_WRITE_WAIT;
	mov.w	#005dH,_on_state
	._eblock
	._line	2327
;## # C_SRC :	            } // if the channel is clear //
	jmp	L3057
	._eblock
	._line	2331
;## # C_SRC :	        case ON_SEND_DATA_RATE_RESP_WRITE_WAIT:
L2813:
	._line	2332
	._block
	._line	2333
;## # C_SRC :	            if(one_net_write_done())
	._inspect	'S', 'c', "one_net_write_done", "_one_net_write_done", 'G', 0, 2333
	jsr	_one_net_write_done
	mov.b	R0L,R0H
	jeq	L3057
	._line	2334
	._block
	._line	2337
;## # C_SRC :	                ont_set_timer(ONT_GENERAL_TIMER, ONE_NET_STAY_AWAKE_TIME);
	jmp	L3103
	._inspect	'S', 'p', 4
	._inspect	'S', 'p', -4
	._eblock
	._eblock
	._line	2350
;## # C_SRC :	        default:
L2821:
	._line	2351
	._block
	._line	2352
;## # C_SRC :	            on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._eblock
	._eblock
	._line	2355
;## # C_SRC :	    } // switch(on_state) //
L3057:
	._line	2357
;## # C_SRC :	    if(on_state == ON_LISTEN_FOR_DATA)
	cmp.w	#0000H,_on_state
	jne	L2823
	._line	2358
	._block
	._line	2359
;## # C_SRC :	        one_net_set_data_rate(on_base_param->data_rate);
	mov.w	_on_base_param,A0
	mov.b	000cH[A0],R1L
	._inspect	'S', 'c', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 0, 2359
	jsr	$one_net_set_data_rate
	._eblock
L2823:
	._line	2363
;## # C_SRC :	    return rv;
	mov.b	-1[FB],R0L	;  rv 
	exitd	
E23:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_11:
	push.w	#0000H
	push.w	#0000H
	mov.b	#05H,R1L
	jsr	$ont_set_timer
	add.b	#04H,SP
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_11:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_10:
	jsr	$one_net_set_data_rate
	mov.w	-6[FB],A0
	mov.w	[A0],A0
	mov.b	#00H,0001H[A0]
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_10:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_9:
	mov.w	-6[FB],A0
	mov.w	[A0],A0
	mov.w	000aH[A0],R2
	add.w	#000fH,R2
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_9:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_8:
	mov.w	-6[FB],A0
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_12
	.stk	-3
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_8:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_12:
	mov.w	[A0],A1
	add.b	#01H,0001H[A1]
	mov.w	[A0],A1
	cmp.b	#08H,0001H[A1]
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_12:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_7:
	push.w	#0000H
	push.w	#0032H
	mov.b	#05H,R1L
	jsr	$ont_set_timer
	add.b	#04H,SP
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_7:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_6:
	mov.w	-6[FB],A0
	mov.w	[A0],A0
	mov.b	0008H[A0],A1
	mov.w	000aH[A0],R1
	mov.w	A1,R2
	jsr	$one_net_write
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_6:

	._eblock
M25:
	._efunc	M25
	._inspect	'F', 'd', "one_net", "$one_net", 'G', 1877, 0, 00h, 0
	._inspect	'F', 't', "one_net", 'G', 513
	._inspect	'V', 'r', "pkt_hdlr", 'S', 1895, 36, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 1900, 2, 0, 0, 00h
	._inspect	'F', 'r', "check_for_clr_channel", "_check_for_clr_channel", 'S', 1904, 0, 00h, 0
	._inspect	'F', 'r', "one_net_write", "$one_net_write", 'G', 1906, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 1907, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_write_done", "_one_net_write_done", 'G', 1914, 0, 00h, 0
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 1929, 0, 00h, 0
	._inspect	'F', 'r', "check_for_clr_channel", "_check_for_clr_channel", 'S', 1929, 0, 00h, 0
	._inspect	'F', 'r', "one_net_write", "$one_net_write", 'G', 1931, 0, 00h, 0
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 1933, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 1934, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_write_done", "_one_net_write_done", 'G', 1947, 0, 00h, 0
	._inspect	'V', 'r', "cur_stream", 'S', 1950, 2, 0, 0, 00h
	._inspect	'V', 'r', "cur_stream", 'S', 1952, 2, 0, 0, 00h
	._inspect	'V', 'r', "cur_stream", 'S', 1953, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 1954, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 1959, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 1962, 2, 0, 0, 00h
	._inspect	'F', 'r', "rx_single_resp_pkt", "$rx_single_resp_pkt", 'S', 1977, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 1984, 2, 0, 0, 00h
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 1989, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 1998, 36, 0, 0, 00h
	._inspect	'F', 'r', "one_net_tick", "_one_net_tick", 'G', 2018, 0, 00h, 0
	._inspect	'F', 'r', "one_net_prand", "_one_net_prand", 'G', 2018, 0, 00h, 0
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 2018, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2020, 2, 0, 0, 00h
	._inspect	'F', 'r', "check_for_clr_channel", "_check_for_clr_channel", 'S', 2032, 0, 00h, 0
	._inspect	'F', 'r', "one_net_write", "$one_net_write", 'G', 2034, 0, 00h, 0
	._inspect	'F', 'r', "rx_block_resp_pkt", "$rx_block_resp_pkt", 'S', 2079, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2087, 2, 0, 0, 00h
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 2087, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2095, 36, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2101, 36, 0, 0, 00h
	._inspect	'V', 'r', "block_complete", 'S', 2106, 1, 0, 0, 00h
	._inspect	'V', 'r', "block_complete", 'S', 2108, 1, 0, 0, 00h
	._inspect	'F', 'r', "one_net_write_done", "_one_net_write_done", 'G', 2117, 0, 00h, 0
	._inspect	'V', 'r', "block_complete", 'S', 2119, 1, 0, 0, 00h
	._inspect	'V', 'r', "block_complete", 'S', 2121, 1, 0, 0, 00h
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 2123, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2124, 2, 0, 0, 00h
	._inspect	'F', 'r', "rx_block_txn_ack", "$rx_block_txn_ack", 'S', 2137, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2145, 2, 0, 0, 00h
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 2145, 0, 00h, 0
	._inspect	'F', 'r', "rx_stream_resp_pkt", "$rx_stream_resp_pkt", 'S', 2154, 0, 00h, 0
	._inspect	'V', 'r', "cur_stream", 'S', 2156, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 2163, 2, 0, 0, 00h
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 2163, 0, 00h, 0
	._inspect	'V', 'r', "cur_stream", 'S', 2170, 2, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2172, 36, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2178, 36, 0, 0, 00h
	._inspect	'F', 'r', "one_net_write_done", "_one_net_write_done", 'G', 2188, 0, 00h, 0
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 2202, 0, 00h, 0
	._inspect	'F', 'r', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 2211, 0, 00h, 0
	._inspect	'V', 'r', "data_rate_result", 'S', 2213, 1, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 2214, 2, 0, 0, 00h
	._inspect	'F', 'r', "check_for_clr_channel", "_check_for_clr_channel", 'S', 2222, 0, 00h, 0
	._inspect	'F', 'r', "one_net_write", "$one_net_write", 'G', 2224, 0, 00h, 0
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 2228, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2229, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_base_param", 'G', 2236, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 2236, 0, 00h, 0
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 2240, 0, 00h, 0
	._inspect	'V', 'r', "data_rate_result", 'S', 2245, 1, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2245, 36, 0, 0, 00h
	._inspect	'F', 'r', "rx_data_rate", "$rx_data_rate", 'S', 2256, 0, 00h, 0
	._inspect	'V', 'r', "data_rate_result", 'S', 2258, 1, 0, 0, 00h
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 2262, 0, 00h, 0
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 2276, 0, 00h, 0
	._inspect	'F', 'r', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 2285, 0, 00h, 0
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 2287, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2288, 2, 0, 0, 00h
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 2295, 0, 00h, 0
	._inspect	'V', 'r', "on_base_param", 'G', 2297, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 2297, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2299, 2, 0, 0, 00h
	._inspect	'F', 'r', "rx_data_rate", "$rx_data_rate", 'S', 2311, 0, 00h, 0
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 2315, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2316, 2, 0, 0, 00h
	._inspect	'F', 'r', "check_for_clr_channel", "_check_for_clr_channel", 'S', 2323, 0, 00h, 0
	._inspect	'F', 'r', "one_net_write", "$one_net_write", 'G', 2325, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2326, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_write_done", "_one_net_write_done", 'G', 2333, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2352, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 2357, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_base_param", 'G', 2359, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_set_data_rate", "$one_net_set_data_rate", 'G', 2359, 0, 00h, 0
	._inspect	'F', 'e', "one_net", "$one_net", 'G', 8, 0


;## #	FUNCTION check_for_clr_channel
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	516,'v'
	._type	517,'x',260,1
	._type	517,'m','',0,516
	._func	'check_for_clr_channel','S',0,517,_check_for_clr_channel,0
	._inspect	'F', 's', "check_for_clr_channel", "_check_for_clr_channel", 'S', 3
	._line	2388
;## # C_SRC :	{
_check_for_clr_channel:
	._block
	._line	2389
;## # C_SRC :	    if(ont_inactive_or_expired(ONT_GENERAL_TIMER))
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 0, 2389
	jsr	$ont_inactive_or_expired
	mov.b	R0L,R0H
	jeq	L3111
	._line	2390
	._block
	._line	2391
;## # C_SRC :	        ont_set_timer(ONT_GENERAL_TIMER, ONE_NET_CLR_CHANNEL_TIME);
	push.w	#0000H
	push.w	#0005H
	._inspect	'S', 'p', 4
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 2391
	jsr	$ont_set_timer
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2392
;## # C_SRC :	        return one_net_channel_is_clear();
	._inspect	'S', 'c', "one_net_channel_is_clear", "_one_net_channel_is_clear", 'G', 0, 2392
	jmp	_one_net_channel_is_clear
	._eblock
L3111:
	._line	2395
;## # C_SRC :	    return FALSE;
	mov.b	#00H,R0L
	rts	
E24:
	._eblock
M26:
	._efunc	M26
	._inspect	'F', 'd', "check_for_clr_channel", "_check_for_clr_channel", 'S', 2388, 0, 00h, 0
	._inspect	'F', 't', "check_for_clr_channel", 'S', 517
	._inspect	'F', 'r', "ont_inactive_or_expired", "$ont_inactive_or_expired", 'G', 2389, 0, 00h, 0
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 2391, 0, 00h, 0
	._inspect	'F', 'r', "one_net_channel_is_clear", "_one_net_channel_is_clear", 'G', 2392, 0, 00h, 0
	._inspect	'F', 'e', "check_for_clr_channel", "_check_for_clr_channel", 'S', 4, 0


;## #	FUNCTION rx_pkt_addr
;## #	FRAME	AUTO	(  rx_nid)	size  6,	offset -14
;## #	FRAME	AUTO	(  rx_dst)	size  2,	offset -8
;## #	FRAME	AUTO	(  status)	size  2,	offset -6
;## #	FRAME	AUTO	( src_did)	size  2,	offset -4
;## #	FRAME	AUTO	(EXPECTED_SRC_DID)	size  2,	offset -2
;## #  REGISTER ARG    (EXPECTED_SRC_DID)   size   2,   REGISTER R1
;## #  REGISTER ARG    ( src_did)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(14)	Context Size(5)

	._type	518,'O',295
	._type	519,'O',295
	._type	520,'x',257,2
	._type	520,'m','EXPECTED_SRC_DID',0,518
	._type	520,'m','src_did',0,519
	._func	'rx_pkt_addr','S',14,520,$rx_pkt_addr,0
	._inspect	'F', 's', "rx_pkt_addr", "$rx_pkt_addr", 'S', 19
	._line	2441
;## # C_SRC :	{
$rx_pkt_addr:
	enter	#0eH
	mov.w	R1,-2[FB]	;  EXPECTED_SRC_DID  EXPECTED_SRC_DID 
	mov.w	R2,-4[FB]	;  src_did  src_did 
	._block
	._type	521,'O',295
	._var	'EXPECTED_SRC_DID','A',521,-2
	._type	522,'O',295
	._var	'src_did','A',522,-4
	._var	'rx_nid','A',381,-14
	._var	'rx_dst','A',295,-8
	._var	'status','A',257,-6
	._line	2446
;## # C_SRC :	    if(!EXPECTED_SRC_DID || !src_did)
	cmp.w	#0000H,-2[FB]	;  EXPECTED_SRC_DID 
	jeq	L3241
	cmp.w	#0000H,-4[FB]	;  src_did 
	jne	L3117
L3241:
	._line	2447
	._block
	._line	2448
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L3117:
	._line	2452
;## # C_SRC :	      != ONS_SUCCESS)
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "one_net_look_for_pkt", "_one_net_look_for_pkt", 'G', 0, 2452
	jsr	_one_net_look_for_pkt
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.w	R0,-6[FB]	;  status 
	jeq	L3141
	._line	2453
	._block
	._line	2454
;## # C_SRC :	        return status;
L3271:
	exitd	
	._eblock
L3141:
	._line	2458
;## # C_SRC :	    if(one_net_read(rx_dst, sizeof(rx_dst)) != sizeof(rx_dst))
	mov.w	#0002H,R2
	mova	-8[FB],R1	;  rx_dst 
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 2458
	jsr	$one_net_read
	cmp.w	#0002H,R0
	jeq	L3151
	._line	2459
	._block
	._line	2460
;## # C_SRC :	        return ONS_READ_ERR;
L3273:
	mov.w	#0028H,R0
	exitd	
	._eblock
L3151:
	._line	2464
;## # C_SRC :	      != ONS_SUCCESS && status != ONS_BROADCAST_ADDR)
	mova	-8[FB],R1	;  rx_dst 
	._inspect	'S', 'c', "on_validate_dst_DID", "$on_validate_dst_DID", 'G', 0, 2464
	jsr	$on_validate_dst_DID
	mov.w	R0,-6[FB]	;  status 
	jeq	L3267
	cmp.w	#0021H,R0
	jne	L3271
L3267:
	._line	2480
;## # C_SRC :	    if(one_net_read(rx_nid, sizeof(rx_nid)) != sizeof(rx_nid))
	mov.w	#0006H,R2
	mova	-14[FB],R1	;  rx_nid 
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 2480
	jsr	$one_net_read
	cmp.w	#0006H,R0
	jne	L3273
	._line	2485
;## # C_SRC :	    if(!on_is_my_NID((const on_encoded_nid_t * const)&rx_nid))
	mova	-14[FB],R1	;  rx_nid 
	._inspect	'S', 'c', "on_is_my_NID", "$on_is_my_NID", 'G', 0, 2485
	jsr	$on_is_my_NID
	mov.b	R0L,R0H
	jne	L3199
	._line	2486
	._block
	._line	2487
;## # C_SRC :	        return ONS_NID_FAILED;
	mov.w	#0024H,R0
	exitd	
	._eblock
L3199:
	._line	2492
;## # C_SRC :	      != sizeof(on_encoded_did_t))
	mov.w	#0002H,R2
	mov.w	-4[FB],R1	;  src_did 
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 2492
	jsr	$one_net_read
	cmp.w	#0002H,R0
	jne	L3273
	._line	2498
;## # C_SRC :	    if(!on_encoded_did_equal(EXPECTED_SRC_DID, &ON_ENCODED_BROADCAST_DID))
	mov.w	#_ON_ENCODED_BROADCAST_DID,R2
	mov.w	-2[FB],R1	;  EXPECTED_SRC_DID 
	._inspect	'S', 'c', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 0, 2498
	jsr	$on_encoded_did_equal
	mov.b	R0L,R0H
	jne	L3269
	._line	2499
	._block
	._line	2501
;## # C_SRC :	          (const on_encoded_did_t * const)src_did))
	mov.w	-4[FB],R2	;  src_did 
	mov.w	-2[FB],R1	;  EXPECTED_SRC_DID 
	._inspect	'S', 'c', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 0, 2501
	jsr	$on_encoded_did_equal
	mov.b	R0L,R0H
	jne	L3269
	._line	2502
	._block
	._line	2505
;## # C_SRC :	            return ONS_INCORRECT_ADDR;
	mov.w	#0023H,R0
	exitd	
	._eblock
	._eblock
L3269:
	._line	2518
;## # C_SRC :	    return status;
	mov.w	-6[FB],R0	;  status 
	exitd	
E25:
	._eblock
M27:
	._efunc	M27
	._inspect	'F', 'd', "rx_pkt_addr", "$rx_pkt_addr", 'S', 2441, 0, 00h, 0
	._inspect	'F', 't', "rx_pkt_addr", 'S', 520
	._inspect	'F', 'r', "one_net_look_for_pkt", "_one_net_look_for_pkt", 'G', 2452, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 2458, 0, 00h, 0
	._inspect	'F', 'r', "on_validate_dst_DID", "$on_validate_dst_DID", 'G', 2464, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 2480, 0, 00h, 0
	._inspect	'F', 'r', "on_is_my_NID", "$on_is_my_NID", 'G', 2485, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 2492, 0, 00h, 0
	._inspect	'V', 'r', "ON_ENCODED_BROADCAST_DID", 'G', 2498, 2, 0, 0, 00h
	._inspect	'F', 'r', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 2498, 0, 00h, 0
	._inspect	'F', 'r', "on_encoded_did_equal", "$on_encoded_did_equal", 'G', 2501, 0, 00h, 0
	._inspect	'F', 'e', "rx_pkt_addr", "$rx_pkt_addr", 'S', 4, 0


;## #	FUNCTION rx_single_resp_pkt
;## #	FRAME	AUTO	(ack_nack_payload)	size  5,	offset -31
;## #	FRAME	AUTO	(msg_class)	size  2,	offset -26
;## #	FRAME	AUTO	(msg_type)	size  2,	offset -24
;## #	FRAME	AUTO	(msg_data)	size  2,	offset -22
;## #	FRAME	AUTO	(abort_txn)	size  2,	offset -20
;## #	FRAME	AUTO	(raw_src_did)	size  2,	offset -18
;## #	FRAME	AUTO	(nack_reason)	size  2,	offset -16
;## #	FRAME	AUTO	(ack_nack_handle)	size  2,	offset -14
;## #	FRAME	AUTO	( src_did)	size  2,	offset -12
;## #	FRAME	AUTO	(     txn)	size  2,	offset -10
;## #	FRAME	AUTO	(src_unit)	size  1,	offset -8
;## #	FRAME	AUTO	(dst_unit)	size  1,	offset -7
;## #	FRAME	AUTO	(txn_nonce)	size  1,	offset -6
;## #	FRAME	AUTO	(next_nonce)	size  1,	offset -5
;## #	FRAME	AUTO	(     pid)	size  1,	offset -4
;## #	FRAME	AUTO	(is_master)	size  1,	offset -20
;## #	FRAME	AUTO	(member_of_network)	size  1,	offset -3
;## #	FRAME	AUTO	(   isACK)	size  1,	offset -2
;## #	FRAME	AUTO	(valid_pkt_pid)	size  1,	offset -1
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(31)	Context Size(5)

	._type	523,'O',265
	._type	524,'O',523
	._type	525,'x',257,1
	._type	525,'m','txn',0,524
	._func	'rx_single_resp_pkt','S',31,525,$rx_single_resp_pkt,0
	._inspect	'F', 's', "rx_single_resp_pkt", "$rx_single_resp_pkt", 'S', 36
	._line	2550
;## # C_SRC :	{
$rx_single_resp_pkt:
	enter	#01fH
	mov.w	R1,-10[FB]	;  txn  txn 
	._block
	._type	526,'O',265
	._type	527,'O',526
	._var	'txn','A',527,-10
	._var	'src_did','A',295,-12
	._var	'raw_src_did','A',279,-18
	._var	'pid','A',259,-4
	._var	'txn_nonce','A',259,-6
	._var	'next_nonce','A',259,-5
	._var	'valid_pkt_pid','A',260,-1
	._var	'isACK','A',260,-2
	._var	'abort_txn','A',257,-20
	._var	'nack_reason','A',338,-16
	._var	'ack_nack_handle','A',342,-14
	._var	'ack_nack_payload','A',350,-31
	._type	528,'S','',11
	._type	528,'m','did',295,0
	._type	528,'m','expected_nonce',259,2
	._type	528,'m','last_nonce',259,3
	._type	528,'m','send_nonce',259,4
	._type	528,'m','data_rate',259,5
	._type	528,'m','max_data_rate',259,6
	._type	528,'m','features',259,7
	._type	528,'m','flags',259,8
	._type	528,'m','use_current_key',260,9
	._type	528,'m','use_current_stream_key',260,10
	._type	529,'T','on_client_t',528
	._type	530,'O',529
	._type	531,'O',269
	._var	'member_of_network','A',260,-3
	._var	'is_master','A',260,-20
	._line	2557
;## # C_SRC :		BOOL isACK = FALSE;
	mov.w	#0100H,-2[FB]	;  isACK 
	._line	2565
;## # C_SRC :	    const on_client_t* client = 0;
	mov.w	#0000H,R0	;  client 
	._line	2567
;## # C_SRC :		const one_net_xtea_key_t * key = 0;
	mov.w	#0000H,R0	;  key 
	._line	2572
;## # C_SRC :		BOOL is_master = device_is_master(&member_of_network);
	mova	-3[FB],R1	;  member_of_network 
	._inspect	'S', 'c', "device_is_master", "$device_is_master", 'G', 0, 2572
	jsr	$device_is_master
	mov.b	R0L,-20[FB]	;  is_master 
	._line	2576
;## # C_SRC :	    if(!pkt_hdlr.single_data_hdlr)
	cmp.w	#0000H,_pkt_hdlr
	jne	L3277
	cmp.w	#0000H,_pkt_hdlr+2
	jne	L3277
	._line	2577
	._block
	._line	2578
;## # C_SRC :	        return ONS_NOT_INIT;
	mov.w	#0002H,R0
	exitd	
	._eblock
L3277:
	._line	2582
;## # C_SRC :	      || (*txn)->pkt_size < ON_MIN_ENCODED_PKT_SIZE)
	cmp.w	#0000H,-10[FB]	;  txn 
	jeq	L3835
	mov.w	-10[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	jeq	L3835
	mov.w	[A0],A0
	cmp.w	#0000H,000aH[A0]
	jeq	L3835
	cmp.b	#1aH,0009H[A0]
	jgeu	L3285
L3835:
	._line	2583
	._block
	._line	2584
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L3285:
	._line	2597
;## # C_SRC :	          != ONS_SUCCESS)
	mova	-12[FB],R2	;  src_did 
	mov.w	-10[FB],A0	;  txn 
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_13
	.stk	-3
	._inspect	'S', 'c', "rx_pkt_addr", "$rx_pkt_addr", 'S', 0, 2597
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L3343
	._eblock
	._line	2599
	._block
	._block
	._var	'status','R',257,5
	._line	2600
;## # C_SRC :	        return status;
L3857:
	._eblock
	exitd	
	._eblock
L3343:
	._line	2604
;## # C_SRC :	    if(one_net_read(&pid, sizeof(pid)) != sizeof(pid))
	mov.w	#0001H,R2
	mova	-4[FB],R1	;  pid 
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 2604
	jsr	$one_net_read
	cmp.w	#0001H,R0
	jeq	L3353
	._line	2605
	._block
	._line	2606
;## # C_SRC :	        return ONS_READ_ERR;
	mov.w	#0028H,R0
	exitd	
	._eblock
L3353:
	._line	2609
;## # C_SRC :	    switch(pid)
	mov.b	-4[FB],R0L	;  pid 
	cmp.b	#0bcH,R0L
	jeq	L3837
	cmp.b	#0b3H,R0L
	jeq	L3837
	cmp.b	#0baH,R0L
	jeq	L3841
	cmp.b	#64H,R0L
	jeq	L3841
	jmp	L3373
	._line	2610
	._block
	._line	2611
;## # C_SRC :			case ONE_NET_ENCODED_SINGLE_DATA_ACK:
L3837:
	._line	2613
;## # C_SRC :			    isACK = TRUE;
	mov.b	#01H,-2[FB]	;  isACK 
	._line	2616
;## # C_SRC :			    break;
	jmp	L3841
	._line	2617
;## # C_SRC :			default:
L3373:
	._line	2618
;## # C_SRC :			    valid_pkt_pid = FALSE;
	mov.b	#00H,-1[FB]	;  valid_pkt_pid 
	._eblock
	._line	2619
;## # C_SRC :		}
L3841:
	._line	2621
;## # C_SRC :	    if(!valid_pkt_pid)
	mov.b	-1[FB],R0L	;  valid_pkt_pid 
	jne	L3375
	._line	2622
	._block
	._line	2626
;## # C_SRC :	        return ONS_BAD_PKT_TYPE;
	mov.w	#001cH,R0
	exitd	
	._eblock
L3375:
	._line	2631
;## # C_SRC :		if(is_master)
	mov.b	-20[FB],R0L	;  is_master 
	jeq	L3393
	._line	2632
	._block
	._line	2633
;## # C_SRC :			client = client_info(&src_did);
	mova	-12[FB],R1	;  src_did 
	._inspect	'S', 'c', "client_info", "$client_info", 'G', 0, 2633
	jsr	$client_info
	._block
	._type	532,'O',529
	._var	'client','R',532,5
	._line	2634
;## # C_SRC :			if(client == 0)
	cmp.w	#0000H,R0	;  client 
	jne	L3383
	._eblock
	._line	2635
	._block
	._line	2636
;## # C_SRC :				return ONS_DID_FAILED;
	mov.w	#0025H,R0
	exitd	
	._eblock
L3383:
	._block
	._type	533,'O',529
	._var	'client','R',533,5
	._line	2638
;## # C_SRC :			key = get_client_encryption_key(client, FALSE);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_14
	.stk	-3
	._inspect	'S', 'p', 1
	._eblock
	._inspect	'S', 'c', "get_client_encryption_key", "$get_client_encryption_key", 'G', 0, 2638
	._inspect	'S', 'p', -1
	._block
	._type	534,'O',269
	._var	'key','R',534,5
	._eblock
	._line	2639
;## # C_SRC :		}
	jmp	L3395
	._eblock
	._line	2640
;## # C_SRC :		else
L3393:
	._line	2641
	._block
	._line	2642
;## # C_SRC :			key = &(on_base_param->current_key);
	mov.w	_on_base_param,R0	;  key 
	add.w	#000dH,R0	;  key 
	._block
	._type	535,'O',269
	._var	'key','R',535,5
	._eblock
	._line	2643
;## # C_SRC :		}
L3395:
	._eblock
	._line	2658
	._block
	._block
	._type	536,'O',269
	._var	'key','R',536,5
	._line	2660
;## # C_SRC :		        &ack_nack_handle, &ack_nack_payload, key, ON_SINGLE);
	push.w	#0003H
	._inspect	'S', 'p', 2
	push.w	R0	;  key 
	._inspect	'S', 'p', 2
	._eblock
	._inspect	'S', 'p', 2
	pusha	-31[FB]	;  ack_nack_payload 
	._inspect	'S', 'p', 2
	pusha	-14[FB]	;  ack_nack_handle 
	._inspect	'S', 'p', -8
	._eblock
	._line	2657
;## # C_SRC :		if(isACK)
	cmp.b	#00H,-2[FB]	;  isACK 
	jeq	L3397
	._block
	._type	537,'O',269
	._var	'key','R',537,5
;## # C_SRC :		        &ack_nack_handle, &ack_nack_payload, key, ON_SINGLE);
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	._eblock
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	push.w	#0000H
	._inspect	'S', 'p', 2
	jmp	L3861
	._inspect	'S', 'p', -10
	._line	2662
;## # C_SRC :		else
L3397:
	._block
	._type	538,'O',269
	._var	'key','R',538,5
;## # C_SRC :		        &ack_nack_handle, &ack_nack_payload, key, ON_SINGLE);
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	._eblock
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	pusha	-16[FB]	;  nack_reason 
L3861:
	mova	-5[FB],R2	;  next_nonce 
	mova	-6[FB],R1	;  txn_nonce 
	._inspect	'S', 'c', "rx_nonces", "$rx_nonces", 'S', 0, 2665
	jsr	$rx_nonces
	._inspect	'S', 'p', -10
	add.b	#0aH,SP
	._block
	._var	'status','R',257,5
	._line	2667
;## # C_SRC :	    if(status != ONS_SUCCESS)
	cmp.w	#0000H,R0	;  status 
	jne	L3857
	._line	2673
;## # C_SRC :		if(pid == ONE_NET_ENCODED_SINGLE_DATA_NACK)
	cmp.b	#0baH,-4[FB]	;  pid 
	jne	L3411
	._eblock
	._line	2674
	._block
	._line	2675
;## # C_SRC :			pid = ONE_NET_ENCODED_SINGLE_DATA_NACK_RSN;
	mov.b	#64H,-4[FB]	;  pid 
	._line	2676
;## # C_SRC :			nack_reason = ON_NACK_RSN_GENERAL_ERR;
	mov.w	#001fH,-16[FB]	;  nack_reason 
	._eblock
L3411:
	._line	2682
;## # C_SRC :		if(isACK)
	mov.b	-2[FB],R0L	;  isACK 
	jeq	L3421
	._line	2683
	._block
	._line	2684
;## # C_SRC :			nack_reason = ON_NACK_RSN_NO_ERROR;
	mov.w	#0000H,-16[FB]	;  nack_reason 
	._eblock
L3421:
	._line	2692
;## # C_SRC :		        && nack_reason == ON_NACK_RSN_NONCE_ERR))
	mov.w	-10[FB],A0	;  txn 
	mov.w	[A0],A0
	cmp.b	0002H[A0],-6[FB]	;  txn_nonce 
	jne	L3757
	cmp.b	#64H,-4[FB]	;  pid 
	jne	L3843
	cmp.w	#0001H,-16[FB]	;  nack_reason 
	jne	L3843
L3757:
	._line	2693
	._block
	._line	2695
;## # C_SRC :	        (*txn)->retry++;
	mov.w	-10[FB],A0	;  txn 
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_12
	.stk	-3
	._line	2697
;## # C_SRC :	        if((*txn)->retry >= ON_MAX_RETRY)
	jltu	L3425
	._line	2698
	._block
	._line	2700
;## # C_SRC :	              ONS_SINGLE_FAIL);
	push.w	#0012H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
L3859:
	._inspect	'S', 'c', "", "", 'O', 0, 2700
	jsri.a	_pkt_hdlr+12
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	2701
;## # C_SRC :	            on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._line	2702
;## # C_SRC :	            return ONS_SINGLE_FAIL;
	mov.w	#0012H,R0
	exitd	
	._eblock
L3425:
	._line	2705
;## # C_SRC :	        status = pkt_hdlr.single_txn_hdlr(txn, next_nonce, ONS_RX_NACK);
	push.w	#000eH
	._inspect	'S', 'p', 2
	push.b	-5[FB]	;  next_nonce 
	._inspect	'S', 'p', 1
	mov.w	-10[FB],R1	;  txn 
	._inspect	'S', 'c', "", "", 'O', 0, 2705
	jsri.a	_pkt_hdlr+12
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	2708
;## # C_SRC :	        ont_set_timer(ONT_GENERAL_TIMER, 0);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_11
	.stk	-3
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 2708
	._inspect	'S', 'p', -4
	._line	2709
;## # C_SRC :	        on_state = ON_SEND_SINGLE_DATA_PKT;
	mov.w	#0014H,_on_state
	._line	2710
;## # C_SRC :	        return ONS_INCORRECT_NONCE;
	mov.w	#0010H,R0
	exitd	
	._eblock
L3843:
	._line	2725
;## # C_SRC :		on_decode(raw_src_did, src_did, ON_ENCODED_DID_LEN);
	push.w	#0002H
	._inspect	'S', 'p', 2
	mova	-12[FB],R2	;  src_did 
	mova	-18[FB],R1	;  raw_src_did 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 2725
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._line	2730
;## # C_SRC :		                 &ack_nack_handle, &ack_nack_payload);
	._inspect	'S', 'p', 2
	pusha	-31[FB]	;  ack_nack_payload 
	._inspect	'S', 'p', 2
	pusha	-14[FB]	;  ack_nack_handle 
	._inspect	'S', 'p', 2
	pusha	-16[FB]	;  nack_reason 
	mova	-18[FB],R2	;  raw_src_did 
	mov.w	-10[FB],A0	;  txn 
	mov.w	[A0],R1
	._inspect	'S', 'c', "", "", 'O', 0, 2730
	jsri.a	_pkt_hdlr+4
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	mov.w	R0,-20[FB]	;  abort_txn 
	._line	2764
;## # C_SRC :		        nack_reason == ON_NACK_RSN_NO_ERROR && ack_nack_handle == ON_ACK_STATUS)
	jne	L3851
	cmp.b	#0bcH,-4[FB]	;  pid 
	jne	L3851
	cmp.w	#0000H,-16[FB]	;  nack_reason 
	jne	L3851
	cmp.w	#0004H,-14[FB]	;  ack_nack_handle 
	jne	L3851
	._line	2765
	._block
	._var	'src_unit','A',259,-8
	._var	'dst_unit','A',259,-7
	._var	'msg_class','A',356,-26
	._var	'msg_type','A',358,-24
	._var	'msg_data','A',261,-22
	._line	2775
;## # C_SRC :	            &dst_unit, &msg_class, &msg_type, &msg_data);
	._inspect	'S', 'p', 2
	pusha	-22[FB]	;  msg_data 
	._inspect	'S', 'p', 2
	pusha	-24[FB]	;  msg_type 
	._inspect	'S', 'p', 2
	pusha	-26[FB]	;  msg_class 
	._inspect	'S', 'p', 2
	pusha	-7[FB]	;  dst_unit 
	mova	-8[FB],R2	;  src_unit 
	mova	-31[FB],R1	;  ack_nack_payload 
	._inspect	'S', 'c', "on_parse_single_app_pld", "$on_parse_single_app_pld", 'G', 0, 2775
	jsr	$on_parse_single_app_pld
	._inspect	'S', 'p', -8
	add.b	#08H,SP
	mov.w	R0,-16[FB]	;  nack_reason 
	._line	2777
;## # C_SRC :			if(nack_reason == ON_NACK_RSN_NO_ERROR)
	jne	L3855
	._line	2778
	._block
	._line	2780
;## # C_SRC :				       msg_class != ONA_STATUS)
	cmp.w	#1000H,-26[FB]	;  msg_class 
	jeq	L3855
	cmp.w	#2000H,-26[FB]	;  msg_class 
	jeq	L3855
	cmp.w	#0000H,-26[FB]	;  msg_class 
	stnz	#09H,-16[FB]	;  nack_reason 
	stnz	#00H,-16+1[FB]	;  nack_reason 
	._eblock
L3855:
	._line	2787
;## # C_SRC :			if(nack_reason == ON_NACK_RSN_NO_ERROR)
	cmp.w	#0000H,-16[FB]	;  nack_reason 
	jne	L3545
	._line	2788
	._block
	._line	2792
;## # C_SRC :					&ack_nack_payload))
	._inspect	'S', 'p', 2
	pusha	-31[FB]	;  ack_nack_payload 
	._inspect	'S', 'p', 2
	pusha	-14[FB]	;  ack_nack_handle 
	._inspect	'S', 'p', 2
	pusha	-16[FB]	;  nack_reason 
	._inspect	'S', 'p', 2
	pusha	-18[FB]	;  raw_src_did 
	push.w	-22[FB]	;  msg_data 
	._inspect	'S', 'p', 2
	push.w	-8[FB]	;  src_unit 
	._inspect	'S', 'p', 2
	mov.w	-24[FB],R2	;  msg_type 
	mov.w	-26[FB],R1	;  msg_class 
	._inspect	'S', 'c', "", "", 'O', 0, 2792
	jsri.a	_pkt_hdlr+8
	._inspect	'S', 'p', -12
	add.b	#0cH,SP
	cmp.b	#00H,R0L
	stz	#08H,-20[FB]	;  abort_txn 
	stz	#00H,-20+1[FB]	;  abort_txn 
	._eblock
L3545:
	._line	2798
;## # C_SRC :			if(abort_txn == ONS_SUCCESS && nack_reason != ON_NACK_RSN_NO_ERROR)
	cmp.w	#0000H,-20[FB]	;  abort_txn 
	jne	L3851
	cmp.w	#0000H,-16[FB]	;  nack_reason 
	stnz	#64H,-4[FB]	;  pid 
	._eblock
L3851:
	._line	2806
;## # C_SRC :		if(abort_txn == ONS_CANCELED)
	cmp.w	#0008H,-20[FB]	;  abort_txn 
	jne	L3647
	._line	2807
	._block
	._line	2810
;## # C_SRC :	            ONS_CANCELED);
	push.w	#0008H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	-10[FB],R1	;  txn 
	._inspect	'S', 'c', "", "", 'O', 0, 2810
	jsri.a	_pkt_hdlr+12
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	2811
;## # C_SRC :	            on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._line	2812
;## # C_SRC :	            return ONS_CANCELED;        
	mov.w	#0008H,R0
	exitd	
	._eblock
L3647:
	._line	2815
;## # C_SRC :		if(abort_txn != ONS_SUCCESS)
	cmp.w	#0000H,-20[FB]	;  abort_txn 
	jeq	L3657
	._line	2816
	._block
	._line	2819
;## # C_SRC :	        pkt_hdlr.single_txn_hdlr(txn, ON_MAX_NONCE + 1, ONS_SINGLE_FAIL);
	push.w	#0012H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	-10[FB],R1	;  txn 
	jmp	L3859
	._inspect	'S', 'p', -3
	._eblock
L3657:
	._line	2824
;## # C_SRC :	    if(pid == ONE_NET_ENCODED_SINGLE_DATA_NACK_RSN)
	cmp.b	#64H,-4[FB]	;  pid 
	jeq	L3757
;## # C_SRC :	              ONS_SINGLE_FAIL);
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 1
	._inspect	'S', 'p', -3
;## # C_SRC :	        status = pkt_hdlr.single_txn_hdlr(txn, next_nonce, ONS_RX_NACK);
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 1
	._inspect	'S', 'p', -3
;## # C_SRC :	        ont_set_timer(ONT_GENERAL_TIMER, 0);
	._inspect	'S', 'p', 4
	._inspect	'S', 'p', -4
	._line	2859
	._block
	._line	2862
;## # C_SRC :			on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._line	2863
;## # C_SRC :			(*txn)->priority = ONE_NET_LOW_PRIORITY;
	mov.w	-10[FB],A0	;  txn 
	mov.w	[A0],A1
	mov.b	#01H,[A1]
	._line	2868
;## # C_SRC :	          ? ONS_RX_STAY_AWAKE : ONS_SUCCESS);
	cmp.b	#0b3H,-4[FB]	;  pid 
	stzx	#0dH,#00H,R0L
	mov.b	#00H,R0H
	push.w	R0
	._inspect	'S', 'p', 2
	push.b	-5[FB]	;  next_nonce 
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 2868
	jsri.a	_pkt_hdlr+12
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._block
	._var	'status','R',257,5
	._eblock
	._line	2905
;## # C_SRC :	    return status;
	jmp	L3857
	._eblock
E26:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_14:
	push.b	#00H
	mov.w	R0,R1
	jsr	$get_client_encryption_key
	add.b	#01H,SP
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_14:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_13:
	mov.w	[A0],A0
	mov.w	000aH[A0],R1
	add.w	#0004H,R1
	jsr	$rx_pkt_addr
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_13:

	._eblock
M31:
	._efunc	M31
	._inspect	'F', 'd', "rx_single_resp_pkt", "$rx_single_resp_pkt", 'S', 2550, 0, 00h, 0
	._inspect	'F', 't', "rx_single_resp_pkt", 'S', 525
	._inspect	'F', 'r', "device_is_master", "$device_is_master", 'G', 2572, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2576, 36, 0, 0, 00h
	._inspect	'F', 'r', "rx_pkt_addr", "$rx_pkt_addr", 'S', 2597, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 2604, 0, 00h, 0
	._inspect	'F', 'r', "client_info", "$client_info", 'G', 2633, 0, 00h, 0
	._inspect	'F', 'r', "get_client_encryption_key", "$get_client_encryption_key", 'G', 2638, 0, 00h, 0
	._inspect	'V', 'r', "on_base_param", 'G', 2642, 2, 0, 0, 00h
	._inspect	'F', 'r', "rx_nonces", "$rx_nonces", 'S', 2665, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2700, 36, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 2701, 2, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2705, 36, 0, 0, 00h
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 2708, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 2709, 2, 0, 0, 00h
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 2725, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2730, 36, 0, 0, 00h
	._inspect	'F', 'r', "on_parse_single_app_pld", "$on_parse_single_app_pld", 'G', 2775, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2792, 36, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2810, 36, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 2811, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 2862, 2, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 2868, 36, 0, 0, 00h
	._inspect	'F', 'e', "rx_single_resp_pkt", "$rx_single_resp_pkt", 'S', 12, 0


;## #	FUNCTION rx_block_resp_pkt
;## #	FRAME	AUTO	(ack_nack_payload)	size  5,	offset -20
;## #	FRAME	AUTO	(nack_reason)	size  2,	offset -15
;## #	FRAME	AUTO	(ack_nack_handle)	size  2,	offset -13
;## #	FRAME	AUTO	( src_did)	size  2,	offset -11
;## #	FRAME	AUTO	(  status)	size  2,	offset -9
;## #	FRAME	AUTO	(     txn)	size  2,	offset -7
;## #	FRAME	AUTO	(txn_nonce)	size  1,	offset -5
;## #	FRAME	AUTO	(next_nonce)	size  1,	offset -4
;## #	FRAME	AUTO	(     pid)	size  1,	offset -3
;## #	FRAME	AUTO	(is_master)	size  1,	offset -2
;## #	FRAME	AUTO	(member_of_network)	size  1,	offset -1
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(20)	Context Size(5)

	._type	539,'O',265
	._type	540,'O',539
	._type	541,'x',257,1
	._type	541,'m','txn',0,540
	._func	'rx_block_resp_pkt','S',20,541,$rx_block_resp_pkt,0
	._inspect	'F', 's', "rx_block_resp_pkt", "$rx_block_resp_pkt", 'S', 25
	._line	3026
;## # C_SRC :	    {
$rx_block_resp_pkt:
	enter	#014H
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_15
	.stk	-3
	._block
	._type	542,'O',265
	._type	543,'O',542
	._var	'txn','A',543,-7
	._var	'status','A',257,-9
	._var	'src_did','A',295,-11
	._var	'pid','A',259,-3
	._var	'txn_nonce','A',259,-5
	._var	'next_nonce','A',259,-4
	._var	'nack_reason','A',338,-15
	._var	'ack_nack_handle','A',342,-13
	._var	'ack_nack_payload','A',350,-20
	._type	544,'O',529
	._type	545,'O',269
	._var	'member_of_network','A',260,-1
	._var	'is_master','A',260,-2
	._line	3036
;## # C_SRC :	        const on_client_t* client = 0;
	._line	3038
;## # C_SRC :			const one_net_xtea_key_t * key = 0;
	._line	3043
;## # C_SRC :			BOOL is_master = device_is_master(&member_of_network);
	._inspect	'S', 'c', "device_is_master", "$device_is_master", 'G', 0, 3043
	._line	3047
;## # C_SRC :	        if(!pkt_hdlr.block_txn_hdlr)
	cmp.w	#0000H,_pkt_hdlr+20
	jne	L3869
	cmp.w	#0000H,_pkt_hdlr+20+2
	jne	L3869
	._line	3048
	._block
	._line	3049
;## # C_SRC :	            return ONS_NOT_INIT;
	mov.w	#0002H,R0
	exitd	
	._eblock
L3869:
	._line	3053
;## # C_SRC :	          || (*txn)->pkt_size < ON_MIN_ENCODED_PKT_SIZE)
	cmp.w	#0000H,-7[FB]	;  txn 
	jeq	L4177
	mov.w	-7[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	jeq	L4177
	mov.w	[A0],A0
	cmp.w	#0000H,000aH[A0]
	jeq	L4177
	cmp.b	#1aH,0009H[A0]
	jgeu	L3877
L4177:
	._line	3054
	._block
	._line	3055
;## # C_SRC :	            return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L3877:
	._line	3069
;## # C_SRC :	              != ONS_SUCCESS)
	mova	-11[FB],R2	;  src_did 
	mov.w	-7[FB],A0	;  txn 
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_13
	.stk	-3
	._inspect	'S', 'c', "rx_pkt_addr", "$rx_pkt_addr", 'S', 0, 3069
	mov.w	R0,-9[FB]	;  status 
	jeq	L3935
	._line	3071
	._block
	._line	3072
;## # C_SRC :	            return status;
L4185:
	exitd	
	._eblock
L3935:
	._line	3076
;## # C_SRC :	        if(one_net_read(&pid, sizeof(pid)) != sizeof(pid))
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_16
	.stk	-3
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3076
	jeq	L3945
	._line	3077
	._block
	._line	3078
;## # C_SRC :	            return ONS_READ_ERR;
	mov.w	#0028H,R0
	exitd	
	._eblock
L3945:
	._line	3082
;## # C_SRC :	          && pid != ONE_NET_ENCODED_BLOCK_DATA_NACK)
	cmp.b	#0ccH,-3[FB]	;  pid 
	jeq	L4179
	cmp.b	#0c3H,-3[FB]	;  pid 
	jeq	L4179
	._line	3083
	._block
	._line	3084
;## # C_SRC :	            return ONS_BAD_PKT_TYPE;
	mov.w	#001cH,R0
	exitd	
	._eblock
L4179:
	._line	3089
;## # C_SRC :			if(is_master)
	mov.b	-2[FB],R0L	;  is_master 
	jeq	L3993
	._line	3090
	._block
	._line	3091
;## # C_SRC :				client = client_info(&src_did);
	mova	-11[FB],R1	;  src_did 
	._inspect	'S', 'c', "client_info", "$client_info", 'G', 0, 3091
	jsr	$client_info
	._block
	._type	546,'O',529
	._var	'client','R',546,5
	._line	3092
;## # C_SRC :				if(client == 0)
	cmp.w	#0000H,R0	;  client 
	jne	L3983
	._eblock
	._line	3093
	._block
	._line	3094
;## # C_SRC :					return ONS_DID_FAILED;
	mov.w	#0025H,R0
	exitd	
	._eblock
L3983:
	._block
	._type	547,'O',529
	._var	'client','R',547,5
	._line	3096
;## # C_SRC :				key = get_client_encryption_key(client, FALSE);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_14
	.stk	-3
	._inspect	'S', 'p', 1
	._eblock
	._inspect	'S', 'c', "get_client_encryption_key", "$get_client_encryption_key", 'G', 0, 3096
	._inspect	'S', 'p', -1
	._block
	._type	548,'O',269
	._var	'key','R',548,5
	._eblock
	._line	3097
;## # C_SRC :			}
	jmp	L3995
	._eblock
	._line	3098
;## # C_SRC :			else
L3993:
	._line	3099
	._block
	._line	3100
;## # C_SRC :				key = &(on_base_param->current_key);
	mov.w	_on_base_param,R0	;  key 
	add.w	#000dH,R0	;  key 
	._block
	._type	549,'O',269
	._var	'key','R',549,5
	._eblock
	._line	3101
;## # C_SRC :			}
L3995:
	._line	3116
;## # C_SRC :			        &ack_nack_handle, &ack_nack_payload, key, ON_BLOCK)) != ONS_SUCCESS)
	push.w	#0005H
	._inspect	'S', 'p', 2
	push.w	R0	;  key 
	._inspect	'S', 'p', 2
	._eblock
	._inspect	'S', 'p', 2
	pusha	-20[FB]	;  ack_nack_payload 
	._inspect	'S', 'p', 2
	pusha	-13[FB]	;  ack_nack_handle 
	._inspect	'S', 'p', 2
	pusha	-15[FB]	;  nack_reason 
	mova	-4[FB],R2	;  next_nonce 
	mova	-5[FB],R1	;  txn_nonce 
	._inspect	'S', 'c', "rx_nonces", "$rx_nonces", 'S', 0, 3116
	jsr	$rx_nonces
	._inspect	'S', 'p', -10
	add.b	#0aH,SP
	mov.w	R0,-9[FB]	;  status 
	jne	L4185
	._line	3122
;## # C_SRC :		    if(pid == ONE_NET_ENCODED_BLOCK_DATA_NACK)
	cmp.b	#0c3H,-3[FB]	;  pid 
	jne	L4007
	._line	3123
	._block
	._line	3124
;## # C_SRC :		    	pid = ONE_NET_ENCODED_BLOCK_DATA_NACK_RSN;
	mov.b	#6cH,-3[FB]	;  pid 
	._line	3125
;## # C_SRC :			    nack_reason = ON_NACK_RSN_GENERAL_ERR;
	mov.w	#001fH,-15[FB]	;  nack_reason 
	._eblock
L4007:
	._line	3129
;## # C_SRC :	          || pid == ONE_NET_ENCODED_BLOCK_DATA_NACK_RSN)
	mov.w	-7[FB],A0	;  txn 
	mov.w	[A0],A0
	cmp.b	0002H[A0],-5[FB]	;  txn_nonce 
	jne	L4161
	cmp.b	#6cH,-3[FB]	;  pid 
	jne	L4181
L4161:
	._line	3130
	._block
	._line	3131
;## # C_SRC :	            (*txn)->retry++;
	mov.w	-7[FB],A0	;  txn 
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_12
	.stk	-3
	._line	3133
;## # C_SRC :	            if((*txn)->retry >= ON_MAX_RETRY)
	jltu	L4017
	._line	3134
	._block
	._line	3136
;## # C_SRC :	                  ONS_BLOCK_FAIL);
	push.w	#0014H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 3136
	jsri.a	_pkt_hdlr+20
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	3137
;## # C_SRC :	                return ONS_BLOCK_FAIL;
	mov.w	#0014H,R0
	exitd	
	._eblock
L4017:
	._line	3140
;## # C_SRC :	            if(txn_nonce != (*txn)->expected_nonce)
	mov.w	-7[FB],A0	;  txn 
	mov.w	[A0],A0
	cmp.b	0002H[A0],-5[FB]	;  txn_nonce 
	jeq	L4181
	._line	3141
	._block
	._line	3142
;## # C_SRC :	                return ONS_INCORRECT_NONCE;
	mov.w	#0010H,R0
	exitd	
	._eblock
	._eblock
L4181:
	._line	3146
;## # C_SRC :	        on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._line	3147
;## # C_SRC :	        if(pid == ONE_NET_ENCODED_BLOCK_DATA_NACK)
	cmp.b	#0c3H,-3[FB]	;  pid 
	jne	L4075
	._line	3148
	._block
	._line	3150
;## # C_SRC :	              ONS_RX_NACK)) == ONS_SUCCESS)
	push.w	#000eH
	._inspect	'S', 'p', 2
	push.b	-4[FB]	;  next_nonce 
	._inspect	'S', 'p', 1
	mov.w	-7[FB],R1	;  txn 
	._inspect	'S', 'c', "", "", 'O', 0, 3150
	jsri.a	_pkt_hdlr+20
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	mov.w	R0,-9[FB]	;  status 
	jne	L4183
	._line	3151
	._block
	._line	3152
;## # C_SRC :	                status = ONS_RX_NACK;
	mov.w	#000eH,-9[FB]	;  status 
	._eblock
	._line	3153
;## # C_SRC :	            } // if txn_hdlr successful //
	jmp	L4183
	._eblock
	._line	3155
;## # C_SRC :	        else
L4075:
	._line	3156
	._block
	._line	3157
;## # C_SRC :	            status = pkt_hdlr.block_txn_hdlr(txn, next_nonce, ONS_SUCCESS);
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.b	-4[FB]	;  next_nonce 
	._inspect	'S', 'p', 1
	mov.w	-7[FB],R1	;  txn 
	._inspect	'S', 'c', "", "", 'O', 0, 3157
	jsri.a	_pkt_hdlr+20
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	mov.w	R0,-9[FB]	;  status 
	._line	3159
;## # C_SRC :	            if(status == ONS_BLOCK_END)
	cmp.w	#0013H,R0
	jne	L4095
	._line	3160
	._block
	._line	3162
;## # C_SRC :	                (*txn)->data_len = (*txn)->pkt_size;
	mov.w	-7[FB],A0	;  txn 
	mov.w	[A0],A0
	mov.b	0009H[A0],0008H[A0]
	._line	3165
;## # C_SRC :	                ont_set_timer(ONT_GENERAL_TIMER, 0);
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_11
	.stk	-3
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ont_set_timer", "$ont_set_timer", 'G', 0, 3165
	._inspect	'S', 'p', -4
	._line	3170
;## # C_SRC :	                  != ONS_SUCCESS)
	push.b	#00H
	._inspect	'S', 'p', 1
	push.w	#0000H
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	pusha	-11[FB]	;  src_did 
	push.b	#0caH
	._inspect	'S', 'p', 1
	mov.w	-7[FB],A0	;  txn 
	mov.w	[A0],R2
	mov.w	R2,A0
	add.w	#0008H,R2
	mov.w	000aH[A0],R1
	._inspect	'S', 'c', "on_build_pkt", "$on_build_pkt", 'G', 0, 3170
	jsr	$on_build_pkt
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	mov.w	R0,-9[FB]	;  status 
	jeq	L4085
	._line	3171
	._block
	._line	3172
;## # C_SRC :	                    block_complete = TRUE;
	mov.b	#01H,_block_complete
	._line	3173
;## # C_SRC :	                    return status;
	jmp	L4185
	._eblock
L4085:
	._line	3176
;## # C_SRC :	                on_state = ON_SEND_PKT;
	mov.w	#000aH,_on_state
	._eblock
	._line	3177
;## # C_SRC :	            } // if the block transaction is complete //
	jmp	L4183
	._line	3178
;## # C_SRC :	            else
L4095:
	._line	3179
	._block
	._line	3180
;## # C_SRC :	                ont_stop_timer(ONT_GENERAL_TIMER);
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_stop_timer", "$ont_stop_timer", 'G', 0, 3180
	jsr	$ont_stop_timer
	._eblock
	._line	3181
;## # C_SRC :	            } // else the block transaction is not yet complete //
L4183:
	._eblock
	._line	3184
;## # C_SRC :	        return status;
	mov.w	-9[FB],R0	;  status 
	exitd	
E27:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_16:
	mov.w	#0001H,R2
	mova	-3[FB],R1
	jsr	$one_net_read
	cmp.w	#0001H,R0
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_16:

_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_15:
	mov.w	R1,-7[FB]
	mov.w	#0000H,R0
	mov.w	#0000H,R0
	mova	-1[FB],R1
	jsr	$device_is_master
	mov.b	R0L,-2[FB]
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_15:

	._eblock
M32:
	._efunc	M32
	._inspect	'F', 'd', "rx_block_resp_pkt", "$rx_block_resp_pkt", 'S', 3026, 0, 00h, 0
	._inspect	'F', 't', "rx_block_resp_pkt", 'S', 541
	._inspect	'F', 'r', "device_is_master", "$device_is_master", 'G', 3043, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3047, 36, 0, 0, 00h
	._inspect	'F', 'r', "rx_pkt_addr", "$rx_pkt_addr", 'S', 3069, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3076, 0, 00h, 0
	._inspect	'F', 'r', "client_info", "$client_info", 'G', 3091, 0, 00h, 0
	._inspect	'F', 'r', "get_client_encryption_key", "$get_client_encryption_key", 'G', 3096, 0, 00h, 0
	._inspect	'V', 'r', "on_base_param", 'G', 3100, 2, 0, 0, 00h
	._inspect	'F', 'r', "rx_nonces", "$rx_nonces", 'S', 3116, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3136, 36, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3146, 2, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3150, 36, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3157, 36, 0, 0, 00h
	._inspect	'F', 'r', "ont_set_timer", "$ont_set_timer", 'G', 3165, 0, 00h, 0
	._inspect	'F', 'r', "on_build_pkt", "$on_build_pkt", 'G', 3170, 0, 00h, 0
	._inspect	'V', 'r', "block_complete", 'S', 3172, 1, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3176, 2, 0, 0, 00h
	._inspect	'F', 'r', "ont_stop_timer", "$ont_stop_timer", 'G', 3180, 0, 00h, 0
	._inspect	'F', 'e', "rx_block_resp_pkt", "$rx_block_resp_pkt", 'S', 10, 0


;## #	FUNCTION rx_block_txn_ack
;## #	FRAME	AUTO	( src_did)	size  2,	offset -7
;## #	FRAME	AUTO	(  status)	size  2,	offset -5
;## #	FRAME	AUTO	(     txn)	size  2,	offset -3
;## #	FRAME	AUTO	(     pid)	size  1,	offset -1
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(7)	Context Size(5)

	._type	550,'O',265
	._type	551,'O',550
	._type	552,'x',257,1
	._type	552,'m','txn',0,551
	._func	'rx_block_txn_ack','S',7,552,$rx_block_txn_ack,0
	._inspect	'F', 's', "rx_block_txn_ack", "$rx_block_txn_ack", 'S', 12
	._line	3203
;## # C_SRC :	    {
$rx_block_txn_ack:
	enter	#07H
	mov.w	R1,-3[FB]	;  txn  txn 
	._block
	._type	553,'O',265
	._type	554,'O',553
	._var	'txn','A',554,-3
	._var	'status','A',257,-5
	._var	'src_did','A',295,-7
	._var	'pid','A',259,-1
	._line	3209
;## # C_SRC :	        if(!pkt_hdlr.block_txn_hdlr)
	cmp.w	#0000H,_pkt_hdlr+20
	jne	L4191
	cmp.w	#0000H,_pkt_hdlr+20+2
	jne	L4191
	._line	3210
	._block
	._line	3211
;## # C_SRC :	            return ONS_NOT_INIT;
	mov.w	#0002H,R0
	exitd	
	._eblock
L4191:
	._line	3215
;## # C_SRC :	          || (*txn)->pkt_size < ON_MIN_ENCODED_PKT_SIZE)
	cmp.w	#0000H,-3[FB]	;  txn 
	jeq	L4335
	mov.w	-3[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	jeq	L4335
	mov.w	[A0],A0
	cmp.w	#0000H,000aH[A0]
	jeq	L4335
	cmp.b	#1aH,0009H[A0]
	jgeu	L4199
L4335:
	._line	3216
	._block
	._line	3217
;## # C_SRC :	            return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L4199:
	._line	3232
;## # C_SRC :	              != ONS_SUCCESS)
	mova	-7[FB],R2	;  src_did 
	mov.w	-3[FB],A0	;  txn 
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_13
	.stk	-3
	._inspect	'S', 'c', "rx_pkt_addr", "$rx_pkt_addr", 'S', 0, 3232
	mov.w	R0,-5[FB]	;  status 
	jeq	L4257
	._line	3234
	._block
	._line	3235
;## # C_SRC :	            return status;
	exitd	
	._eblock
L4257:
	._line	3239
;## # C_SRC :	        if(one_net_read(&pid, sizeof(pid)) != sizeof(pid))
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_5
	.stk	-3
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3239
	jeq	L4267
	._line	3240
	._block
	._line	3241
;## # C_SRC :	            return ONS_READ_ERR;
	mov.w	#0028H,R0
	exitd	
	._eblock
L4267:
	._line	3244
;## # C_SRC :	        if(pid == ONE_NET_ENCODED_REPEAT_BLOCK_DATA)
	cmp.b	#0c4H,-1[FB]	;  pid 
	jne	L4277
	._line	3245
	._block
	._line	3250
;## # C_SRC :	            on_state = ON_SEND_BLOCK_DATA_RESP;
	mov.w	#0032H,_on_state
	._eblock
	._line	3251
;## # C_SRC :	        } // if block or repeat block packet //
	jmp	L4289
	._line	3252
;## # C_SRC :	        else if(pid == ONE_NET_ENCODED_BLOCK_TXN_ACK)
L4277:
	cmp.b	#0caH,-1[FB]	;  pid 
	jne	L4287
	._line	3253
	._block
	._line	3256
;## # C_SRC :	            pkt_hdlr.block_txn_hdlr(txn, ON_MAX_NONCE + 1, ONS_BLOCK_END);
	push.w	#0013H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	-3[FB],R1	;  txn 
	._inspect	'S', 'c', "", "", 'O', 0, 3256
	jsri.a	_pkt_hdlr+20
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	3257
;## # C_SRC :	            ont_stop_timer(ONT_GENERAL_TIMER);
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_stop_timer", "$ont_stop_timer", 'G', 0, 3257
	jsr	$ont_stop_timer
	._line	3258
;## # C_SRC :	            (*txn)->priority = ONE_NET_NO_PRIORITY;
	mov.w	-3[FB],A0	;  txn 
	mov.w	[A0],A0
	mov.b	#00H,[A0]
	._line	3259
;## # C_SRC :	            on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._eblock
	._line	3260
;## # C_SRC :	        } // else if a block txn ack //
	jmp	L4289
	._line	3261
;## # C_SRC :	        else
L4287:
	._line	3262
	._block
	._line	3263
;## # C_SRC :	            return ONS_BAD_PKT_TYPE;
	mov.w	#001cH,R0
	exitd	
	._eblock
	._line	3264
;## # C_SRC :	        } // if an unexpected packet was received //
L4289:
	._line	3266
;## # C_SRC :	        return status;
	mov.w	-5[FB],R0	;  status 
	exitd	
E28:
	._eblock
M33:
	._efunc	M33
	._inspect	'F', 'd', "rx_block_txn_ack", "$rx_block_txn_ack", 'S', 3203, 0, 00h, 0
	._inspect	'F', 't', "rx_block_txn_ack", 'S', 552
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3209, 36, 0, 0, 00h
	._inspect	'F', 'r', "rx_pkt_addr", "$rx_pkt_addr", 'S', 3232, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3239, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 3250, 2, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3256, 36, 0, 0, 00h
	._inspect	'F', 'r', "ont_stop_timer", "$ont_stop_timer", 'G', 3257, 0, 00h, 0
	._inspect	'V', 'r', "on_state", 'G', 3259, 2, 0, 0, 00h
	._inspect	'F', 'e', "rx_block_txn_ack", "$rx_block_txn_ack", 'S', 3, 0


;## #	FUNCTION rx_stream_resp_pkt
;## #	FRAME	AUTO	(ack_nack_payload)	size  5,	offset -20
;## #	FRAME	AUTO	(nack_reason)	size  2,	offset -15
;## #	FRAME	AUTO	(ack_nack_handle)	size  2,	offset -13
;## #	FRAME	AUTO	( src_did)	size  2,	offset -11
;## #	FRAME	AUTO	(  status)	size  2,	offset -9
;## #	FRAME	AUTO	(     txn)	size  2,	offset -7
;## #	FRAME	AUTO	(txn_nonce)	size  1,	offset -5
;## #	FRAME	AUTO	(next_nonce)	size  1,	offset -4
;## #	FRAME	AUTO	(     pid)	size  1,	offset -3
;## #	FRAME	AUTO	(is_master)	size  1,	offset -2
;## #	FRAME	AUTO	(member_of_network)	size  1,	offset -1
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(20)	Context Size(5)

	._type	555,'O',265
	._type	556,'O',555
	._type	557,'x',257,1
	._type	557,'m','txn',0,556
	._func	'rx_stream_resp_pkt','S',20,557,$rx_stream_resp_pkt,0
	._inspect	'F', 's', "rx_stream_resp_pkt", "$rx_stream_resp_pkt", 'S', 25
	._line	3289
;## # C_SRC :	    {
$rx_stream_resp_pkt:
	enter	#014H
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_15
	.stk	-3
	._block
	._type	558,'O',265
	._type	559,'O',558
	._var	'txn','A',559,-7
	._var	'status','A',257,-9
	._var	'src_did','A',295,-11
	._var	'pid','A',259,-3
	._var	'txn_nonce','A',259,-5
	._var	'next_nonce','A',259,-4
	._var	'nack_reason','A',338,-15
	._var	'ack_nack_handle','A',342,-13
	._var	'ack_nack_payload','A',350,-20
	._type	560,'O',529
	._type	561,'O',269
	._var	'member_of_network','A',260,-1
	._var	'is_master','A',260,-2
	._line	3299
;## # C_SRC :	        const on_client_t* client = 0;
	._line	3301
;## # C_SRC :			const one_net_xtea_key_t * key = 0;
	._line	3306
;## # C_SRC :			BOOL is_master = device_is_master(&member_of_network);
	._inspect	'S', 'c', "device_is_master", "$device_is_master", 'G', 0, 3306
	._line	3316
;## # C_SRC :	        if(!pkt_hdlr.stream_txn_hdlr)
	cmp.w	#0000H,_pkt_hdlr+28
	jne	L4339
	cmp.w	#0000H,_pkt_hdlr+28+2
	jne	L4339
	._line	3317
	._block
	._line	3318
;## # C_SRC :	            return ONS_NOT_INIT;
	mov.w	#0002H,R0
	exitd	
	._eblock
L4339:
	._line	3322
;## # C_SRC :	          || (*txn)->pkt_size < ON_MIN_ENCODED_PKT_SIZE)
	cmp.w	#0000H,-7[FB]	;  txn 
	jeq	L4553
	mov.w	-7[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	jeq	L4553
	mov.w	[A0],A0
	cmp.w	#0000H,000aH[A0]
	jeq	L4553
	cmp.b	#1aH,0009H[A0]
	jgeu	L4347
L4553:
	._line	3323
	._block
	._line	3324
;## # C_SRC :	            return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L4347:
	._line	3339
;## # C_SRC :	              != ONS_SUCCESS)
	mova	-11[FB],R2	;  src_did 
	mov.w	-7[FB],A0	;  txn 
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_13
	.stk	-3
	._inspect	'S', 'c', "rx_pkt_addr", "$rx_pkt_addr", 'S', 0, 3339
	mov.w	R0,-9[FB]	;  status 
	jeq	L4405
	._line	3341
	._block
	._line	3342
;## # C_SRC :	            return status;
L4555:
	exitd	
	._eblock
L4405:
	._line	3346
;## # C_SRC :	        if(one_net_read(&pid, sizeof(pid)) != sizeof(pid))
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_16
	.stk	-3
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3346
	jeq	L4415
	._line	3347
	._block
	._line	3348
;## # C_SRC :	            return ONS_READ_ERR;
	mov.w	#0028H,R0
	exitd	
	._eblock
L4415:
	._line	3357
;## # C_SRC :	        switch(pid)
	mov.b	-3[FB],R0L	;  pid 
	cmp.b	#0c9H,R0L
	jeq	L4425
	cmp.b	#0b9H,R0L
	jeq	L4429
	cmp.b	#0b6H,R0L
	jne	L4453
	._line	3358
	._block
	._line	3365
;## # C_SRC :	            case ONE_NET_ENCODED_SINGLE_DATA:               // fall through
L4429:
	._line	3367
	._block
	._line	3369
;## # C_SRC :	                cur_stream = *txn;
	mov.w	-7[FB],A0	;  txn 
	mov.w	[A0],_cur_stream
	._line	3372
;## # C_SRC :	                  (const on_encoded_did_t * const)&src_did, txn);
	push.w	-7[FB]	;  txn 
	._inspect	'S', 'p', 2
	mova	-11[FB],R2	;  src_did 
	mov.b	-3[FB],R1L	;  pid 
	._inspect	'S', 'c', "rx_single_data", "$rx_single_data", 'S', 0, 3372
	jsr	$rx_single_data
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	mov.w	R0,-9[FB]	;  status 
	._line	3374
;## # C_SRC :	                if(*txn != cur_stream)
	mov.w	-7[FB],A0	;  txn 
	cmp.w	_cur_stream,[A0]
	jeq	L4443
	._line	3375
	._block
	._line	3376
;## # C_SRC :	                    if(status == ONS_STREAM_END)
	cmp.w	#0015H,R0
	jne	L4433
	._line	3377
	._block
	._line	3379
;## # C_SRC :	                        cur_stream = 0;
	mov.w	#0000H,_cur_stream
	._eblock
L4433:
	._line	3382
;## # C_SRC :	                    on_state = ON_SEND_SINGLE_DATA_RESP; 
	mov.w	#001eH,_on_state
	._eblock
L4443:
	._line	3385
;## # C_SRC :	                return status;
	mov.w	-9[FB],R0	;  status 
	exitd	
	._eblock
	._line	3389
;## # C_SRC :	            default:
L4453:
	._line	3390
	._block
	._line	3391
;## # C_SRC :	                return ONS_BAD_PKT_TYPE;
	mov.w	#001cH,R0
	exitd	
	._eblock
	._eblock
	._line	3394
;## # C_SRC :	        } // switch(pid) //
L4425:
	._line	3398
;## # C_SRC :			if(is_master)
	mov.b	-2[FB],R0L	;  is_master 
	jeq	L4465
	._line	3399
	._block
	._line	3400
;## # C_SRC :				client = client_info(&src_did);
	mova	-11[FB],R1	;  src_did 
	._inspect	'S', 'c', "client_info", "$client_info", 'G', 0, 3400
	jsr	$client_info
	._block
	._type	562,'O',529
	._var	'client','R',562,5
	._line	3401
;## # C_SRC :				if(client == 0)
	cmp.w	#0000H,R0	;  client 
	jne	L4455
	._eblock
	._line	3402
	._block
	._line	3403
;## # C_SRC :					return ONS_DID_FAILED;
	mov.w	#0025H,R0
	exitd	
	._eblock
L4455:
	._block
	._type	563,'O',529
	._var	'client','R',563,5
	._line	3405
;## # C_SRC :				key = get_client_encryption_key(client, TRUE);
	push.b	#01H
	._inspect	'S', 'p', 1
	mov.w	R0,R1	;  client  client 
	._eblock
	._inspect	'S', 'c', "get_client_encryption_key", "$get_client_encryption_key", 'G', 0, 3405
	jsr	$get_client_encryption_key
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._type	564,'O',269
	._var	'key','R',564,5
	._eblock
	._line	3406
;## # C_SRC :			}
	jmp	L4467
	._eblock
	._line	3407
;## # C_SRC :			else
L4465:
	._line	3408
	._block
	._line	3409
;## # C_SRC :				key = &(on_base_param->stream_key);
	mov.w	_on_base_param,R0	;  key 
	add.w	#001eH,R0	;  key 
	._block
	._type	565,'O',269
	._var	'key','R',565,5
	._eblock
	._line	3410
;## # C_SRC :			}
L4467:
	._line	3430
;## # C_SRC :			        &ack_nack_handle, &ack_nack_payload, key, ON_STREAM)) != ONS_SUCCESS)
	push.w	#0004H
	._inspect	'S', 'p', 2
	push.w	R0	;  key 
	._inspect	'S', 'p', 2
	._eblock
	._inspect	'S', 'p', 2
	pusha	-20[FB]	;  ack_nack_payload 
	._inspect	'S', 'p', 2
	pusha	-13[FB]	;  ack_nack_handle 
	._inspect	'S', 'p', 2
	pusha	-15[FB]	;  nack_reason 
	mova	-4[FB],R2	;  next_nonce 
	mova	-5[FB],R1	;  txn_nonce 
	._inspect	'S', 'c', "rx_nonces", "$rx_nonces", 'S', 0, 3430
	jsr	$rx_nonces
	._inspect	'S', 'p', -10
	add.b	#0aH,SP
	mov.w	R0,-9[FB]	;  status 
	jne	L4555
	._line	3436
;## # C_SRC :			switch(pid)
	mov.b	-3[FB],R0L	;  pid 
	cmp.b	#0baH,R0L
	jeq	L4481
	cmp.b	#0c3H,R0L
	jeq	L4483
	jmp	L4479
	._line	3437
	._block
	._line	3438
;## # C_SRC :				case ONE_NET_ENCODED_SINGLE_DATA_NACK:
L4481:
	._line	3439
;## # C_SRC :				    pid = ONE_NET_ENCODED_SINGLE_DATA_NACK_RSN;
	mov.b	#64H,-3[FB]	;  pid 
	._line	3440
;## # C_SRC :					nack_reason = ON_NACK_RSN_GENERAL_ERR;
	jmp	L4549
	._line	3442
;## # C_SRC :				case ONE_NET_ENCODED_BLOCK_DATA_NACK:
L4483:
	._line	3443
;## # C_SRC :				    pid = ONE_NET_ENCODED_BLOCK_DATA_NACK_RSN;
	mov.b	#6cH,-3[FB]	;  pid 
	._line	3444
;## # C_SRC :					nack_reason = ON_NACK_RSN_GENERAL_ERR;
L4549:
	mov.w	#001fH,-15[FB]	;  nack_reason 
	._eblock
	._line	3446
;## # C_SRC :			}
L4479:
	._line	3448
;## # C_SRC :	        if(txn_nonce != (*txn)->expected_nonce)
	mov.w	-7[FB],A0	;  txn 
	mov.w	[A0],A1
	cmp.b	0002H[A1],-5[FB]	;  txn_nonce 
	jeq	L4495
	._line	3449
	._block
	._line	3450
;## # C_SRC :	            (*txn)->retry++;
	add.b	#01H,0001H[A1]
	._line	3452
;## # C_SRC :	            if((*txn)->retry >= ON_MAX_RETRY)
	mov.w	[A0],A1
	cmp.b	#08H,0001H[A1]
	jltu	L4485
	._line	3453
	._block
	._line	3454
;## # C_SRC :	                cur_stream = 0;
	mov.w	#0000H,_cur_stream
	._line	3456
;## # C_SRC :	                  ONS_STREAM_FAIL);
	push.w	#0016H
	._inspect	'S', 'p', 2
	push.b	#40H
	._inspect	'S', 'p', 1
	mov.w	A0,R1
	._inspect	'S', 'c', "", "", 'O', 0, 3456
	jsri.a	_pkt_hdlr+28
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	3457
;## # C_SRC :	                return ONS_STREAM_FAIL;
	mov.w	#0016H,R0
	exitd	
	._eblock
L4485:
	._line	3460
;## # C_SRC :	            return ONS_INCORRECT_NONCE;
	mov.w	#0010H,R0
	exitd	
	._eblock
L4495:
	._line	3463
;## # C_SRC :	        on_state = ON_LISTEN_FOR_DATA;
	mov.w	#0000H,_on_state
	._line	3464
;## # C_SRC :	        status = pkt_hdlr.stream_txn_hdlr(txn, next_nonce, ONS_SUCCESS);
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.b	-4[FB]	;  next_nonce 
	._inspect	'S', 'p', 1
	mov.w	-7[FB],R1	;  txn 
	._inspect	'S', 'c', "", "", 'O', 0, 3464
	jsri.a	_pkt_hdlr+28
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	mov.w	R0,-9[FB]	;  status 
	._line	3465
;## # C_SRC :	        ont_stop_timer(ONT_GENERAL_TIMER);
	mov.b	#05H,R1L
	._inspect	'S', 'c', "ont_stop_timer", "$ont_stop_timer", 'G', 0, 3465
	jsr	$ont_stop_timer
	._line	3467
;## # C_SRC :	        return status;
	jmp	L4443
E29:
	._eblock
M34:
	._efunc	M34
	._inspect	'F', 'd', "rx_stream_resp_pkt", "$rx_stream_resp_pkt", 'S', 3289, 0, 00h, 0
	._inspect	'F', 't', "rx_stream_resp_pkt", 'S', 557
	._inspect	'F', 'r', "device_is_master", "$device_is_master", 'G', 3306, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3316, 36, 0, 0, 00h
	._inspect	'F', 'r', "rx_pkt_addr", "$rx_pkt_addr", 'S', 3339, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3346, 0, 00h, 0
	._inspect	'V', 'r', "cur_stream", 'S', 3369, 2, 0, 0, 00h
	._inspect	'F', 'r', "rx_single_data", "$rx_single_data", 'S', 3372, 0, 00h, 0
	._inspect	'V', 'r', "cur_stream", 'S', 3374, 2, 0, 0, 00h
	._inspect	'V', 'r', "cur_stream", 'S', 3379, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3382, 2, 0, 0, 00h
	._inspect	'F', 'r', "client_info", "$client_info", 'G', 3400, 0, 00h, 0
	._inspect	'F', 'r', "get_client_encryption_key", "$get_client_encryption_key", 'G', 3405, 0, 00h, 0
	._inspect	'V', 'r', "on_base_param", 'G', 3409, 2, 0, 0, 00h
	._inspect	'F', 'r', "rx_nonces", "$rx_nonces", 'S', 3430, 0, 00h, 0
	._inspect	'V', 'r', "cur_stream", 'S', 3454, 2, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3456, 36, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3463, 2, 0, 0, 00h
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3464, 36, 0, 0, 00h
	._inspect	'F', 'r', "ont_stop_timer", "$ont_stop_timer", 'G', 3465, 0, 00h, 0
	._inspect	'F', 'e', "rx_stream_resp_pkt", "$rx_stream_resp_pkt", 'S', 10, 0


;## #	FUNCTION rx_data_rate
;## #	FRAME	AUTO	(test_pattern)	size  4,	offset -12
;## #	FRAME	AUTO	( src_did)	size  2,	offset -8
;## #	FRAME	AUTO	(  status)	size  2,	offset -6
;## #	FRAME	AUTO	(     txn)	size  2,	offset -4
;## #	FRAME	AUTO	(data_rate)	size  1,	offset -2
;## #	FRAME	AUTO	(     pid)	size  1,	offset -1
;## #  FRAME   ARG (RECEIVER)  size   1,    offset 5
;## #  REGISTER ARG    (     txn)   size   2,   REGISTER R1
;## #	ARG Size(1)	Auto Size(12)	Context Size(5)

	._type	566,'O',265
	._type	567,'x',257,2
	._type	567,'m','txn',0,566
	._type	567,'m','RECEIVER',0,260
	._func	'rx_data_rate','S',12,567,$rx_data_rate,0
	._inspect	'F', 's', "rx_data_rate", "$rx_data_rate", 'S', 17
	._line	3491
;## # C_SRC :	{
$rx_data_rate:
	enter	#0cH
	mov.w	R1,-4[FB]	;  txn  txn 
	._block
	._type	568,'O',265
	._var	'txn','A',568,-4
	._var	'RECEIVER','A',260,5
	._var	'status','A',257,-6
	._var	'src_did','A',295,-8
	._var	'pid','A',259,-1
	._var	'data_rate','A',259,-2
	._type	569,'Z',4,259
	._var	'test_pattern','A',569,-12
	._line	3504
;## # C_SRC :	    if(!txn || !(txn->pkt) || txn->pkt_size < ON_MIN_ENCODED_PKT_SIZE)
	jeq	L4723
	mov.w	-4[FB],A0	;  txn 
	cmp.w	#0000H,000aH[A0]
	jeq	L4723
	cmp.b	#1aH,0009H[A0]
	jgeu	L4557
L4723:
	._line	3505
	._block
	._line	3506
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L4557:
	._line	3509
;## # C_SRC :	    if(RECEIVER)
	mov.b	5[FB],R0L	;  RECEIVER 
	jeq	L4599
	._line	3510
	._block
	._line	3513
;## # C_SRC :	          ON_ENCODED_BROADCAST_DID, sizeof(ON_ENCODED_BROADCAST_DID));
	push.w	#0002H
	._inspect	'S', 'p', 2
	mov.w	#_ON_ENCODED_BROADCAST_DID,R2
	mov.w	-4[FB],A0	;  txn 
	mov.w	000aH[A0],R1
	add.w	#0004H,R1
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 3513
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
L4599:
	._line	3525
;## # C_SRC :	          &(txn->pkt[ONE_NET_ENCODED_DST_DID_IDX]), &src_did)) != ONS_SUCCESS)
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_17
	.stk	-3
	._inspect	'S', 'c', "rx_pkt_addr", "$rx_pkt_addr", 'S', 0, 3525
	jsr	$rx_pkt_addr
	mov.w	R0,-6[FB]	;  status 
	jeq	L4603
	._line	3527
	._block
	._line	3528
;## # C_SRC :	        return status;
	exitd	
	._eblock
L4603:
	._line	3532
;## # C_SRC :	    if(one_net_read(&pid, sizeof(pid)) != sizeof(pid))
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_5
	.stk	-3
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3532
	jeq	L4613
	._line	3533
	._block
	._line	3534
;## # C_SRC :	        return ONS_READ_ERR;
L4725:
	mov.w	#0028H,R0
	exitd	
	._eblock
L4613:
	._line	3544
;## # C_SRC :	    if(pid != ONE_NET_ENCODED_DATA_RATE_TEST)
	cmp.b	#0c6H,-1[FB]	;  pid 
	jeq	L4623
	._line	3545
	._block
	._line	3546
;## # C_SRC :	        return ONS_BAD_PKT_TYPE;
	mov.w	#001cH,R0
	exitd	
	._eblock
L4623:
	._line	3550
;## # C_SRC :	    if(one_net_read(&data_rate, sizeof(data_rate)) != sizeof(data_rate))
	mov.w	#0001H,R2
	mova	-2[FB],R1	;  data_rate 
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3550
	jsr	$one_net_read
	cmp.w	#0001H,R0
	jne	L4725
	._line	3555
;## # C_SRC :	    if(data_rate != txn->pkt[ON_DATA_RATE_IDX])
	mov.w	-4[FB],A0	;  txn 
	mov.w	000aH[A0],A0
	cmp.b	000fH[A0],-2[FB]	;  data_rate 
	jeq	L4643
	._line	3556
	._block
	._line	3557
;## # C_SRC :	        return ONS_INVALID_DATA;
L4727:
	mov.w	#0004H,R0
	exitd	
	._eblock
L4643:
	._line	3561
;## # C_SRC :	    if(one_net_read(test_pattern, sizeof(test_pattern)) != sizeof(test_pattern))
	mov.w	#0004H,R2
	mova	-12[FB],R1	;  test_pattern 
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3561
	jsr	$one_net_read
	cmp.w	#0004H,R0
	jne	L4725
	._line	3566
;## # C_SRC :	    for(i = 0; i < ON_TEST_PATTERN_SIZE; i++)
	mov.b	#00H,R0H	;  i 
	._block
	._var	'i','R',259,2
	._eblock
	mov.b	R0H,R0L	;  i  i 
	._block
	._var	'i','R',259,1
L4663:
	._eblock
	._line	3567
	._block
	._block
	._var	'i','R',259,1
	._line	3568
;## # C_SRC :	        if(test_pattern[i] != ON_TEST_PATTERN)
	mov.b	R0L,R1L
	mov.b	#00H,R1H
	mova	-12[FB],A0	;  test_pattern 
	add.w	R1,A0
	cmp.b	#0e1H,[A0]
	jne	L4727
	._eblock
	._eblock
	inc.b	R0L	;  i 
	._block
	._var	'i','R',259,1
	cmp.b	#04H,R0L	;  i 
	jltu	L4663
	._eblock
	._line	3574
;## # C_SRC :	    if(RECEIVER)
	mov.b	5[FB],R0L	;  RECEIVER 
	jeq	L4685
	._line	3575
	._block
	._line	3579
;## # C_SRC :	          sizeof(src_did));
	push.w	#0002H
	._inspect	'S', 'p', 2
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_17
	.stk	-3
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 3579
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
L4685:
	._line	3582
;## # C_SRC :	    return status;
	mov.w	-6[FB],R0	;  status 
	exitd	
E30:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_17:
	mova	-8[FB],R2
	mov.w	-4[FB],A0
	mov.w	000aH[A0],R1
	add.w	#0004H,R1
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_17:

	._eblock
M35:
	._efunc	M35
	._inspect	'F', 'd', "rx_data_rate", "$rx_data_rate", 'S', 3491, 0, 00h, 0
	._inspect	'F', 't', "rx_data_rate", 'S', 567
	._inspect	'V', 'r', "ON_ENCODED_BROADCAST_DID", 'G', 3513, 2, 0, 0, 00h
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 3513, 0, 00h, 0
	._inspect	'F', 'r', "rx_pkt_addr", "$rx_pkt_addr", 'S', 3525, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3532, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3550, 0, 00h, 0
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3561, 0, 00h, 0
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 3579, 0, 00h, 0
	._inspect	'F', 'e', "rx_data_rate", "$rx_data_rate", 'S', 2, 0


;## #	FUNCTION rx_single_data
;## #	FRAME	AUTO	( raw_pld)	size  9,	offset -12
;## #	FRAME	AUTO	( SRC_DID)	size  2,	offset -3
;## #	FRAME	AUTO	(     PID)	size  1,	offset -1
;## #  FRAME   ARG (     txn)  size   2,    offset 5
;## #  REGISTER ARG    (     PID)   size   1,   REGISTER R1L
;## #  REGISTER ARG    ( SRC_DID)   size   2,   REGISTER R2
;## #	ARG Size(2)	Auto Size(12)	Context Size(5)

	._type	570,'O',295
	._type	571,'O',265
	._type	572,'O',571
	._type	573,'x',257,3
	._type	573,'m','PID',0,259
	._type	573,'m','SRC_DID',0,570
	._type	573,'m','txn',0,572
	._func	'rx_single_data','S',12,573,$rx_single_data,0
	._inspect	'F', 's', "rx_single_data", "$rx_single_data", 'S', 17
	._line	3601
;## # C_SRC :	{
$rx_single_data:
	enter	#0cH
	mov.b	R1L,-1[FB]	;  PID  PID 
	mov.w	R2,-3[FB]	;  SRC_DID  SRC_DID 
	._block
	._var	'PID','A',259,-1
	._type	574,'O',295
	._var	'SRC_DID','A',574,-3
	._type	575,'O',265
	._type	576,'O',575
	._var	'txn','A',576,5
	._type	577,'Z',9,259
	._var	'raw_pld','A',577,-12
	._line	3602
;## # C_SRC :	    one_net_status_t status = ONS_INTERNAL_ERR;
	mov.w	#000aH,R0	;  status 
	._line	3613
;## # C_SRC :	      != ONS_SUCCESS)
	push.b	#0bH
	._inspect	'S', 'p', 1
	mova	-12[FB],R1	;  raw_pld 
	._inspect	'S', 'c', "rx_payload", "$rx_payload", 'S', 0, 3613
	jsr	$rx_payload
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L4731
	._eblock
	._line	3614
	._block
	._block
	._var	'status','R',257,5
	._line	3615
;## # C_SRC :	        return status;
L4747:
	._eblock
	exitd	
	._eblock
L4731:
	._line	3629
;## # C_SRC :	    status = (*pkt_hdlr.single_data_hdlr)(PID, SRC_DID, raw_pld, txn);
	push.w	5[FB]	;  txn 
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	pusha	-12[FB]	;  raw_pld 
	mov.w	-3[FB],R2	;  SRC_DID 
	mov.b	-1[FB],R1L	;  PID 
	._inspect	'S', 'c', "", "", 'O', 0, 3629
	jsri.a	_pkt_hdlr
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._block
	._var	'status','R',257,5
	._line	3635
;## # C_SRC :	    if(*txn)
	mov.w	5[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	stzx	#00H,#1eH,_on_state
	mov.b	#00H,_on_state+1
	._line	3644
;## # C_SRC :	    return status;
	jmp	L4747
	._eblock
E31:
	._eblock
M36:
	._efunc	M36
	._inspect	'F', 'd', "rx_single_data", "$rx_single_data", 'S', 3601, 0, 00h, 0
	._inspect	'F', 't', "rx_single_data", 'S', 573
	._inspect	'F', 'r', "rx_payload", "$rx_payload", 'S', 3613, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3629, 36, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3635, 2, 0, 0, 00h
	._inspect	'F', 'e', "rx_single_data", "$rx_single_data", 'S', 4, 0


;## #	FUNCTION rx_block_data
;## #	FRAME	AUTO	( raw_pld)	size 33,	offset -36
;## #	FRAME	AUTO	( SRC_DID)	size  2,	offset -3
;## #	FRAME	AUTO	(     PID)	size  1,	offset -1
;## #  FRAME   ARG (     txn)  size   2,    offset 5
;## #  REGISTER ARG    (     PID)   size   1,   REGISTER R1L
;## #  REGISTER ARG    ( SRC_DID)   size   2,   REGISTER R2
;## #	ARG Size(2)	Auto Size(36)	Context Size(5)

	._type	578,'O',295
	._type	579,'O',265
	._type	580,'O',579
	._type	581,'x',257,3
	._type	581,'m','PID',0,259
	._type	581,'m','SRC_DID',0,578
	._type	581,'m','txn',0,580
	._func	'rx_block_data','S',36,581,$rx_block_data,0
	._inspect	'F', 's', "rx_block_data", "$rx_block_data", 'S', 41
	._line	3664
;## # C_SRC :	    {
$rx_block_data:
	enter	#024H
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_18
	.stk	-3
	._block
	._var	'PID','A',259,-1
	._type	582,'O',295
	._var	'SRC_DID','A',582,-3
	._type	583,'O',265
	._type	584,'O',583
	._var	'txn','A',584,5
	._type	585,'Z',33,259
	._var	'raw_pld','A',585,-36
	._line	3665
;## # C_SRC :	        one_net_status_t status = ONS_INTERNAL_ERR;
	._line	3669
;## # C_SRC :	          != ONS_SUCCESS)
	._inspect	'S', 'p', 1
	._inspect	'S', 'c', "rx_payload", "$rx_payload", 'S', 0, 3669
	._inspect	'S', 'p', -1
	._block
	._var	'status','R',257,5
	jeq	L4749
	._eblock
	._line	3670
	._block
	._block
	._var	'status','R',257,5
	._line	3671
;## # C_SRC :	            return status;
L4831:
	._eblock
	exitd	
	._eblock
L4749:
	._line	3674
;## # C_SRC :	        status = (*pkt_hdlr.block_data_hdlr)(PID, SRC_DID, raw_pld, txn);
	push.w	5[FB]	;  txn 
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	pusha	-36[FB]	;  raw_pld 
	mov.w	-3[FB],R2	;  SRC_DID 
	mov.b	-1[FB],R1L	;  PID 
	._inspect	'S', 'c', "", "", 'O', 0, 3674
	jsri.a	_pkt_hdlr+16
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._block
	._var	'status','R',257,5
	._line	3676
;## # C_SRC :	        if(status == ONS_BLOCK_END)
	cmp.w	#0013H,R0	;  status 
	stz	#01H,_block_complete
	._line	3681
;## # C_SRC :	        if((status == ONS_SUCCESS || status == ONS_BLOCK_END) && *txn)
	cmp.w	#0000H,R0	;  status 
	jeq	L4823
	cmp.w	#0013H,R0	;  status 
	jne	L4831
L4823:
	mov.w	5[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	jeq	L4831
	._eblock
	._line	3682
	._block
	._block
	._var	'status','R',257,5
	._line	3683
;## # C_SRC :	            on_state = ON_SEND_BLOCK_DATA_RESP;
	mov.w	#0032H,_on_state
	._eblock
	._line	3686
;## # C_SRC :	        return status;
	jmp	L4831
	._eblock
E32:
_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_18:
	mov.b	R1L,-1[FB]
	mov.w	R2,-3[FB]
	mov.w	#000aH,R0
	push.b	#2bH
	mova	-36[FB],R1
	jsr	$rx_payload
	add.b	#01H,SP
	cmp.w	#0000H,R0
	rts	
E_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_18:

	._eblock
M38:
	._efunc	M38
	._inspect	'F', 'd', "rx_block_data", "$rx_block_data", 'S', 3664, 0, 00h, 0
	._inspect	'F', 't', "rx_block_data", 'S', 581
	._inspect	'F', 'r', "rx_payload", "$rx_payload", 'S', 3669, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3674, 36, 0, 0, 00h
	._inspect	'V', 'r', "block_complete", 'S', 3676, 1, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3683, 2, 0, 0, 00h
	._inspect	'F', 'e', "rx_block_data", "$rx_block_data", 'S', 4, 0


;## #	FUNCTION rx_stream_data
;## #	FRAME	AUTO	( raw_pld)	size 33,	offset -36
;## #	FRAME	AUTO	( SRC_DID)	size  2,	offset -3
;## #	FRAME	AUTO	(     PID)	size  1,	offset -1
;## #  FRAME   ARG (     txn)  size   2,    offset 5
;## #  REGISTER ARG    (     PID)   size   1,   REGISTER R1L
;## #  REGISTER ARG    ( SRC_DID)   size   2,   REGISTER R2
;## #	ARG Size(2)	Auto Size(36)	Context Size(5)

	._type	586,'O',295
	._type	587,'O',265
	._type	588,'O',587
	._type	589,'x',257,3
	._type	589,'m','PID',0,259
	._type	589,'m','SRC_DID',0,586
	._type	589,'m','txn',0,588
	._func	'rx_stream_data','S',36,589,$rx_stream_data,0
	._inspect	'F', 's', "rx_stream_data", "$rx_stream_data", 'S', 41
	._line	3704
;## # C_SRC :	    {
$rx_stream_data:
	enter	#024H
	.stk	3
	jsr	_Aopt_CHEWProj20trunkprocessorsrenesashewonenetevalevaladiDebugR8CE8SYSTEMonenet_18
	.stk	-3
	._block
	._var	'PID','A',259,-1
	._type	590,'O',295
	._var	'SRC_DID','A',590,-3
	._type	591,'O',265
	._type	592,'O',591
	._var	'txn','A',592,5
	._type	593,'Z',33,259
	._var	'raw_pld','A',593,-36
	._line	3705
;## # C_SRC :	        one_net_status_t status = ONS_INTERNAL_ERR;
	._line	3709
;## # C_SRC :	          != ONS_SUCCESS)
	._inspect	'S', 'p', 1
	._inspect	'S', 'c', "rx_payload", "$rx_payload", 'S', 0, 3709
	._inspect	'S', 'p', -1
	._block
	._var	'status','R',257,5
	jeq	L4833
	._eblock
	._line	3710
	._block
	._block
	._var	'status','R',257,5
	._line	3711
;## # C_SRC :	            return status;
L4875:
	._eblock
	exitd	
	._eblock
L4833:
	._line	3714
;## # C_SRC :	        status = (*pkt_hdlr.stream_data_hdlr)(PID, SRC_DID, raw_pld, txn);
	push.w	5[FB]	;  txn 
	._inspect	'S', 'p', 2
	._inspect	'S', 'p', 2
	pusha	-36[FB]	;  raw_pld 
	mov.w	-3[FB],R2	;  SRC_DID 
	mov.b	-1[FB],R1L	;  PID 
	._inspect	'S', 'c', "", "", 'O', 0, 3714
	jsri.a	_pkt_hdlr+24
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._block
	._var	'status','R',257,5
	._line	3716
;## # C_SRC :	        if(*txn)
	mov.w	5[FB],A0	;  txn 
	cmp.w	#0000H,[A0]
	jeq	L4875
	._eblock
	._line	3717
	._block
	._block
	._var	'status','R',257,5
	._line	3718
;## # C_SRC :	            if(status == ONS_SUCCESS)
	cmp.w	#0000H,R0	;  status 
	jne	L4843
	._eblock
	._line	3719
	._block
	._line	3720
;## # C_SRC :	                on_state = ON_SEND_STREAM_DATA_RESP;
	mov.w	#0046H,_on_state
	._eblock
	._line	3721
;## # C_SRC :	            } // if successful //
	mov.w	#0000H,R0
	exitd	
	._line	3722
;## # C_SRC :	            else if(status == ONS_STREAM_END)
L4843:
	._block
	._var	'status','R',257,5
	cmp.w	#0015H,R0	;  status 
	jne	L4875
	._eblock
	._line	3723
	._block
	._block
	._var	'status','R',257,5
	._line	3724
;## # C_SRC :	                cur_stream = 0;
	mov.w	#0000H,_cur_stream
	._line	3725
;## # C_SRC :	                on_state = ON_SEND_SINGLE_DATA_PKT;
	mov.w	#0014H,_on_state
	._eblock
	._eblock
	._line	3729
;## # C_SRC :	        return status;
	jmp	L4875
	._eblock
E33:
	._eblock
M39:
	._efunc	M39
	._inspect	'F', 'd', "rx_stream_data", "$rx_stream_data", 'S', 3704, 0, 00h, 0
	._inspect	'F', 't', "rx_stream_data", 'S', 589
	._inspect	'F', 'r', "rx_payload", "$rx_payload", 'S', 3709, 0, 00h, 0
	._inspect	'V', 'r', "pkt_hdlr", 'S', 3714, 36, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3720, 2, 0, 0, 00h
	._inspect	'V', 'r', "cur_stream", 'S', 3724, 2, 0, 0, 00h
	._inspect	'V', 'r', "on_state", 'G', 3725, 2, 0, 0, 00h
	._inspect	'F', 'e', "rx_stream_data", "$rx_stream_data", 'S', 4, 0


;## #	FUNCTION rx_payload
;## #	FRAME	AUTO	(rx_encoded_pld)	size 43,	offset -45
;## #	FRAME	AUTO	( raw_pld)	size  2,	offset -2
;## #  FRAME   ARG (ENCODED_LEN)  size   1,    offset 5
;## #  REGISTER ARG    ( raw_pld)   size   2,   REGISTER R1
;## #	ARG Size(1)	Auto Size(45)	Context Size(5)

	._type	594,'O',259
	._type	595,'x',257,2
	._type	595,'m','raw_pld',0,594
	._type	595,'m','ENCODED_LEN',0,259
	._func	'rx_payload','S',45,595,$rx_payload,0
	._inspect	'F', 's', "rx_payload", "$rx_payload", 'S', 50
	._line	3747
;## # C_SRC :	{
$rx_payload:
	enter	#02dH
	mov.w	R1,-2[FB]	;  raw_pld  raw_pld 
	._block
	._type	596,'O',259
	._var	'raw_pld','A',596,-2
	._var	'ENCODED_LEN','A',259,5
	._type	597,'Z',43,259
	._var	'rx_encoded_pld','A',597,-45
	._line	3750
;## # C_SRC :	    if(!raw_pld || ENCODED_LEN > sizeof(rx_encoded_pld))
	jeq	L4921
	cmp.b	#2bH,5[FB]	;  ENCODED_LEN 
	jleu	L4877
L4921:
	._line	3751
	._block
	._line	3752
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L4877:
	._line	3756
;## # C_SRC :	    if(one_net_read(rx_encoded_pld, ENCODED_LEN) != ENCODED_LEN)
	mov.b	5[FB],A0	;  ENCODED_LEN 
	mova	-45[FB],R1	;  rx_encoded_pld 
	mov.w	A0,R2
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3756
	jsr	$one_net_read
	mov.b	5[FB],R1L	;  ENCODED_LEN 
	mov.b	#00H,R1H
	cmp.w	R1,R0
	jeq	L4903
	._line	3757
	._block
	._line	3758
;## # C_SRC :	        return ONS_READ_ERR;
	mov.w	#0028H,R0
	exitd	
	._eblock
L4903:
	._line	3762
;## # C_SRC :	    return on_decode(raw_pld, rx_encoded_pld, ENCODED_LEN);
	mov.b	5[FB],R0L	;  ENCODED_LEN 
	mov.b	#00H,R0H
	push.w	R0
	._inspect	'S', 'p', 2
	mova	-45[FB],R2	;  rx_encoded_pld 
	mov.w	-2[FB],R1	;  raw_pld 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 3762
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	exitd	
E34:
	._eblock
M40:
	._efunc	M40
	._inspect	'F', 'd', "rx_payload", "$rx_payload", 'S', 3747, 0, 00h, 0
	._inspect	'F', 't', "rx_payload", 'S', 595
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3756, 0, 00h, 0
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 3762, 0, 00h, 0
	._inspect	'F', 'e', "rx_payload", "$rx_payload", 'S', 2, 0


;## #	FUNCTION rx_nonces
;## #	FRAME	AUTO	(encoded_pld)	size 11,	offset -24
;## #	FRAME	AUTO	( raw_pld)	size  9,	offset -13
;## #	FRAME	AUTO	(next_nonce)	size  2,	offset -4
;## #	FRAME	AUTO	(txn_nonce)	size  2,	offset -2
;## #  FRAME   ARG (nack_reason)  size   2,    offset 5
;## #  FRAME   ARG (ack_nack_handle)  size   2,    offset 7
;## #  FRAME   ARG (ack_nack_payload)  size   2,    offset 9
;## #  FRAME   ARG (     key)  size   2,    offset 11
;## #  FRAME   ARG (data_type)  size   2,    offset 13
;## #  REGISTER ARG    (txn_nonce)   size   2,   REGISTER R1
;## #  REGISTER ARG    (next_nonce)   size   2,   REGISTER R2
;## #	ARG Size(10)	Auto Size(24)	Context Size(5)

	._type	598,'O',259
	._type	599,'O',259
	._type	600,'O',338
	._type	601,'O',342
	._type	602,'O',350
	._type	603,'O',269
	._type	604,'x',257,7
	._type	604,'m','txn_nonce',0,598
	._type	604,'m','next_nonce',0,599
	._type	604,'m','nack_reason',0,600
	._type	604,'m','ack_nack_handle',0,601
	._type	604,'m','ack_nack_payload',0,602
	._type	604,'m','key',0,603
	._type	604,'m','data_type',0,470
	._func	'rx_nonces','S',24,604,$rx_nonces,0
	._inspect	'F', 's', "rx_nonces", "$rx_nonces", 'S', 29
	._line	3788
;## # C_SRC :	{
$rx_nonces:
	enter	#018H
	mov.w	R1,-2[FB]	;  txn_nonce  txn_nonce 
	mov.w	R2,-4[FB]	;  next_nonce  next_nonce 
	._block
	._type	605,'O',259
	._var	'txn_nonce','A',605,-2
	._type	606,'O',259
	._var	'next_nonce','A',606,-4
	._type	607,'O',338
	._var	'nack_reason','A',607,5
	._type	608,'O',342
	._var	'ack_nack_handle','A',608,7
	._type	609,'O',350
	._var	'ack_nack_payload','A',609,9
	._type	610,'O',269
	._var	'key','A',610,11
	._var	'data_type','A',470,13
	._var	'encoded_nonce','A',259,0
	._type	611,'Z',11,259
	._var	'encoded_pld','A',611,-24
	._type	612,'Z',9,259
	._var	'raw_pld','A',612,-13
	._var	'i','A',259,0
	._var	'uint32','A',263,0
	._line	3796
;## # C_SRC :	    if(!txn_nonce || !next_nonce || !ack_nack_handle || !ack_nack_payload)
	cmp.w	#0000H,-2[FB]	;  txn_nonce 
	jeq	L5101
	cmp.w	#0000H,-4[FB]	;  next_nonce 
	jeq	L5101
	cmp.w	#0000H,7[FB]	;  ack_nack_handle 
	jeq	L5101
	cmp.w	#0000H,9[FB]	;  ack_nack_payload 
	jne	L4925
L5101:
	._line	3797
	._block
	._line	3798
;## # C_SRC :	        return ONS_BAD_PARAM;
	mov.w	#0001H,R0
	exitd	
	._eblock
L4925:
	._line	3802
;## # C_SRC :	      != 11)
	mov.w	#000bH,R2
	mova	-24[FB],R1	;  encoded_pld 
	._inspect	'S', 'c', "one_net_read", "$one_net_read", 'G', 0, 3802
	jsr	$one_net_read
	cmp.w	#000bH,R0
	jeq	L4981
	._line	3803
	._block
	._line	3804
;## # C_SRC :	        return ONS_READ_ERR;;
	mov.w	#0028H,R0
	exitd	
	._eblock
L4981:
	._line	3808
;## # C_SRC :		if((status = on_decode(raw_pld, encoded_pld, 11)) != ONS_SUCCESS)
	push.w	#000bH
	._inspect	'S', 'p', 2
	mova	-24[FB],R2	;  encoded_pld 
	mova	-13[FB],R1	;  raw_pld 
	._inspect	'S', 'c', "on_decode", "$on_decode", 'G', 0, 3808
	jsr	$on_decode
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L4991
	._eblock
	._line	3809
	._block
	._line	3810
;## # C_SRC :			return ONS_INVALID_DATA;
L5105:
	mov.w	#0004H,R0
	exitd	
	._eblock
L4991:
	._line	3813
;## # C_SRC :		if(raw_pld[8] != 0x40) /* bad encryption technique */
	cmp.b	#40H,-5[FB]	;  raw_pld 
	jne	L5105
	._line	3818
;## # C_SRC :		if((status = on_decrypt(data_type, raw_pld, key)) != ONS_SUCCESS)
	push.w	11[FB]	;  key 
	._inspect	'S', 'p', 2
	mova	-13[FB],R2	;  raw_pld 
	mov.b	13[FB],R1L	;  data_type 
	._inspect	'S', 'c', "on_decrypt", "$on_decrypt", 'G', 0, 3818
	jsr	$on_decrypt
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'status','R',257,5
	cmp.w	#0000H,R0	;  status 
	jeq	L5011
	._eblock
	._line	3819
	._block
	._block
	._var	'status','R',257,5
	._line	3825
;## # C_SRC :			return status;
	._eblock
	exitd	
	._eblock
L5011:
	._line	3829
;## # C_SRC :	      ON_PLD_CRC_ORDER);
	push.b	#08H
	._inspect	'S', 'p', 1
	push.w	#00ffH
	._inspect	'S', 'p', 2
	push.b	#07H
	._inspect	'S', 'p', 1
	mova	-12[FB],R1	;  raw_pld 
	._inspect	'S', 'c', "one_net_compute_crc", "$one_net_compute_crc", 'G', 0, 3829
	jsr	$one_net_compute_crc
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._block
	._var	'crc','R',259,1
	._line	3831
;## # C_SRC :		if(raw_pld[0] != crc)
	cmp.b	-13[FB],R0L	;  raw_pld  crc 
	jeq	L5021
	._eblock
	._line	3832
	._block
	._line	3833
;## # C_SRC :			return ONS_CRC_FAIL;
	mov.w	#000cH,R0
	exitd	
	._eblock
L5021:
	._line	3837
;## # C_SRC :	    *txn_nonce = (raw_pld[1] & 0xFC) >> 2;
	mov.b	-12[FB],R0L	;  raw_pld 
	and.b	#0fcH,R0L
	shl.b	#-2,R0L
	mov.w	-2[FB],A0	;  txn_nonce 
	mov.b	R0L,[A0]
	._line	3838
;## # C_SRC :		*next_nonce = ((raw_pld[1] & 0x03) << 4) + ((raw_pld[2] & 0xF0) >> 4);
	mov.b	-12[FB],R0L	;  raw_pld 
	and.b	#03H,R0L
	shl.b	#04H,R0L
	mov.b	-11[FB],R0H	;  raw_pld 
	and.b	#0f0H,R0H
	shl.b	#-4,R0H
	add.b	R0H,R0L
	mov.w	-4[FB],A0	;  next_nonce 
	mov.b	R0L,[A0]
	._line	3841
;## # C_SRC :		if(nack_reason != 0)
	cmp.w	#0000H,5[FB]	;  nack_reason 
	jeq	L5031
	._line	3842
	._block
	._line	3843
;## # C_SRC :			*nack_reason = raw_pld[3] >> 2;
	mov.b	-10[FB],R0L	;  raw_pld 
	shl.b	#-2,R0L
	mov.b	#00H,R0H
	mov.w	5[FB],A0	;  nack_reason 
	mov.w	R0,[A0]
	._eblock
L5031:
	._line	3847
;## # C_SRC :		*ack_nack_handle = raw_pld[2] & 0x0F;
	mov.b	-11[FB],R0L	;  raw_pld 
	and.b	#0fH,R0L
	mov.b	#00H,R0H
	mov.w	7[FB],A0	;  ack_nack_handle 
	mov.w	R0,[A0]
	._line	3850
;## # C_SRC :		switch(*ack_nack_handle)
	jeq	L5103
	cmp.w	#0004H,R0
	jne	L5107
	._line	3851
	._block
	._line	3892
;## # C_SRC :				if(nack_reason != NULL)
	cmp.w	#0000H,5[FB]	;  nack_reason 
	jeq	L5047
	._line	3893
	._block
	._line	3894
;## # C_SRC :					return ONS_BAD_PKT; // invalid handling for a NACK
L5107:
	mov.w	#001dH,R0
	exitd	
	._eblock
L5047:
	._line	3896
;## # C_SRC :			    one_net_memmove((*ack_nack_payload).query_resp, &raw_pld[3], 5);
	push.w	#0005H
	._inspect	'S', 'p', 2
	mova	-10[FB],R2	;  raw_pld 
	mov.w	9[FB],R1	;  ack_nack_payload 
	._inspect	'S', 'c', "one_net_memmove", "$one_net_memmove", 'G', 0, 3896
	jsr	$one_net_memmove
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
	._line	3901
;## # C_SRC :		}
L5103:
	._line	3947
;## # C_SRC :	    return ONS_SUCCESS;
	mov.w	#0000H,R0
	exitd	
E35:
	._eblock
M41:
	._efunc	M41
	._inspect	'F', 'd', "rx_nonces", "$rx_nonces", 'S', 3788, 0, 00h, 0
	._inspect	'F', 't', "rx_nonces", 'S', 604
	._inspect	'F', 'r', "one_net_read", "$one_net_read", 'G', 3802, 0, 00h, 0
	._inspect	'F', 'r', "on_decode", "$on_decode", 'G', 3808, 0, 00h, 0
	._inspect	'F', 'r', "on_decrypt", "$on_decrypt", 'G', 3818, 0, 00h, 0
	._inspect	'F', 'r', "one_net_compute_crc", "$one_net_compute_crc", 'G', 3829, 0, 00h, 0
	._inspect	'F', 'r', "one_net_memmove", "$one_net_memmove", 'G', 3896, 0, 00h, 0
	._inspect	'F', 'e', "rx_nonces", "$rx_nonces", 'S', 4, 0

	.glb	$one_net_xtea_encipher
	.glb	$one_net_xtea_decipher
	.glb	$on_build_nonces
	.glb	$one_net_compute_crc
	.glb	$on_encode
	.glb	$on_decode
	.glb	_abort
	.glb	$div
	.glb	$exit
	.glb	$calloc
	.glb	_free
	.glb	$malloc
	.glb	$realloc
	.glb	_strtol
	.glb	$_n_n_strtol
	.glb	$_n_f_strtol
	.glb	$_f_n_strtol
	.glb	_strtoul
	.glb	$_n_n_strtoul
	.glb	$_n_f_strtoul
	.glb	$_f_n_strtoul
	.glb	_strtod
	.glb	$_n_n_strtod
	.glb	$_n_f_strtod
	.glb	$_f_n_strtod
	.glb	_atoi
	.glb	_atol
	.glb	_atof
	.glb	$abs
	.glb	_labs
	.glb	_ldiv
	.glb	$qsort
	.glb	_bsearch
	.glb	$mblen
	.glb	_mbtowc
	.glb	$wctomb
	.glb	_wcstombs
	.glb	_mbstowcs
	.glb	_rand
	.glb	$srand
	.glb	_strtof
	.glb	$_n_n_strtof
	.glb	$_n_f_strtof
	.glb	$_f_n_strtof
	.glb	_atoff
	.glb	_init_tick
	.glb	_get_tick_count
	.glb	$delay_ms
	.glb	$delay_100s_us
	.glb	$one_net_memmove
	.glb	$one_net_memcmp
	.glb	$one_net_byte_stream_to_int16
	.glb	$one_net_int16_to_byte_stream
	.glb	$one_net_byte_stream_to_int32
	.glb	$one_net_int32_to_byte_stream
	.glb	_one_net_tick
	.glb	_one_net_ms_to_tick
	.glb	_one_net_tick_to_ms
	.glb	$one_net_set_channel
	.glb	_one_net_channel_is_clear
	.glb	$one_net_set_data_rate
	.glb	_one_net_look_for_pkt
	.glb	$one_net_read
	.glb	$one_net_write
	.glb	_one_net_write_done
	.glb	_one_net_send_single
	.glb	_one_net_block_stream_request
	.glb	$ona_parse_msg_class_and_type
	.glb	$on_parse_single_app_pld
	.glb	$ona_send_unit_type_count_query
	.glb	$ona_send_unit_type_query
	.glb	$ona_parse_unit_type_count
	.glb	$ona_parse_unit_type_status
	.glb	_ONE_NET_DEVICE_UNIT_TYPE
	.glb	_client_joined_network
	.glb	_client_looking_for_invite
	.glb	$one_net_client_look_for_invite
	.glb	$one_net_client_init
	.glb	$one_net_copy_to_nv_param
	.glb	$one_net_client_raw_master_did
	.glb	$one_net_client_send_single
	.glb	$on_client_handle_ack_nack_response
	.glb	$one_net_client_block_stream_request
	.glb	_one_net_client_end_stream
	.glb	_one_net_client_stream_key_query
	.glb	$one_net_client_join_network
	.glb	_one_net_client
	.glb	_one_net_client_get_channel
	.glb	$one_net_master_create_network
	.glb	$one_net_master_init
	.glb	_one_net_master_get_channel
	.glb	$one_net_master_send_single
	.glb	$one_net_master_block_stream_request
	.glb	$one_net_master_end_stream
	.glb	$one_net_master_change_client_data_rate
	.glb	$one_net_master_change_client_keep_alive
	.glb	$one_net_master_change_frag_dly
	.glb	$one_net_master_change_key
	.glb	$one_net_master_change_stream_key
	.glb	$one_net_master_set_update_master_flag
	.glb	$one_net_master_start_data_rate_test
	.glb	$one_net_master_invite
	.glb	$one_net_master_cancel_invite
	.glb	$one_net_master_remove_device
	.glb	_one_net_master
	.glb	$one_net_master_add_client
	.glb	$client_info
	.glb	$get_encryption_key
	.glb	$get_client_encryption_key
	.glb	$on_master_handle_ack_nack_response
	.glb	$one_net_master_delete_last_client
	.glb	$ont_set_timer
	.glb	$ont_get_timer
	.glb	$ont_stop_timer
	.glb	$ont_active
	.glb	$ont_expired
	.glb	$ont_inactive_or_expired
	.glb	_one_net_prand

	.SECTION	data_NE,DATA,align
	._inspect	'U', 1, "data_NE", "data_NE", 0
_pkt_hdlr:
	.blkb	36
	.glb	_on_state
_on_state:
	.blkb	2
	.glb	_on_base_param
_on_base_param:
	.blkb	2
_cur_stream:
	.blkb	2
_last_single_ack_time:
	.blkb	4

	.SECTION	data_NO,DATA
	._inspect	'U', 1, "data_NO", "data_NO", 0
_block_complete:
	.blkb	1
	.glb	_single_data_queue_size
_single_data_queue_size:
	.blkb	1
	.glb	_parse_txn_payload
_parse_txn_payload:
	.blkb	1

	.SECTION	data_NEI,ROMDATA
	._inspect	'U', 1, "data_NEI", "data_NEI", 0
;## # init data of pkt_hdlr.
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
	.word	0000H
;## # init data of on_state.
	.word	03e8H
;## # init data of on_base_param.
	.word	0000H
;## # init data of cur_stream.
	.word	0000H
;## # init data of last_single_ack_time.
	.word	0000H
	.word	0000H

	.SECTION	data_NOI,ROMDATA
	._inspect	'U', 1, "data_NOI", "data_NOI", 0
;## # init data of block_complete.
	.byte	00H
;## # init data of single_data_queue_size.
	.byte	00H
;## # init data of parse_txn_payload.
	.byte	00H

	.SECTION	bss_NE,DATA,align
	._inspect	'U', 3, "bss_NE", "bss_NE", 0
_last_single_ack_did:
	.blkb	2

	.SECTION	bss_NO,DATA
	._inspect	'U', 3, "bss_NO", "bss_NO", 0
_data_rate_result:
	.blkb	1
_last_single_ack_payload:
	.blkb	5
	.glb	_single_data_queue
_single_data_queue:
	.blkb	57

	.SECTION	rom_NE,ROMDATA,align
	._inspect	'U', 4, "rom_NE", "rom_NE", 0
	.glb	_ON_ENCODED_BROADCAST_DID
_ON_ENCODED_BROADCAST_DID:
	.byte	0b4H
	.byte	0b4H
	.glb	_ON_RAW_BROADCAST_DID
_ON_RAW_BROADCAST_DID:
	.byte	00H
	.byte	00H

	.SECTION	rom_NO,ROMDATA
	._inspect	'U', 4, "rom_NO", "rom_NO", 0
_PREAMBLE:
	.byte	55H	;  'U'
	.byte	55H	;  'U'
	.byte	55H	;  'U'
_SOF:
	.byte	33H	;  '3'
;#################################
;###  STATIC DATA INFORMATION  ###
;#################################
	._type	613,'T','SInt8',19
	._type	614,'T','SInt16',16
	._type	615,'T','SInt32',20
	._type	616,'T','Float32',10
	._type	617,'N','_ona_block_msg_type'
	._type	617,'m','ONA_BLOCK_BINARY',2
	._type	617,'m','ONA_BLOCK_TEXT',1
	._type	617,'m','ONA_BLOCK_INSTEON_EXTENDED',0
	._type	618,'T','ona_block_msg_type_t',617
	._type	619,'N','_ona_unit_type'
	._type	619,'m','ONA_SIMPLE_SWITCH',0
	._type	620,'T','ona_unit_type_t',619
	._type	621,'S','',3
	._type	621,'m','type',620,0
	._type	621,'m','count',259,2
	._type	622,'T','ona_unit_type_count_t',621
	._type	623,'v'
	._type	624,'O',259
	._type	625,'O',269
	._type	626,'x',623,3
	._type	626,'m','ROUNDS',0,259
	._type	626,'m','data',0,624
	._type	626,'m','KEY',0,625
	._var	'one_net_xtea_encipher','F',626
	._type	627,'v'
	._type	628,'O',259
	._type	629,'O',269
	._type	630,'x',627,3
	._type	630,'m','ROUNDS',0,259
	._type	630,'m','data',0,628
	._type	630,'m','KEY',0,629
	._var	'one_net_xtea_decipher','F',630
	._type	631,'N',''
	._type	631,'m','ONE_NET_ENCODED_BLOCK_DATA_NACK_RSN',108
	._type	631,'m','ONE_NET_ENCODED_SINGLE_DATA_NACK_RSN',100
	._type	631,'m','ONE_NET_ENCODED_DATA_RATE_TEST',198
	._type	631,'m','ONE_NET_ENCODED_STREAM_KEEP_ALIVE',201
	._type	631,'m','ONE_NET_ENCODED_STREAM_DATA',197
	._type	631,'m','ONE_NET_ENCODED_BLOCK_TXN_ACK',202
	._type	631,'m','ONE_NET_ENCODED_BLOCK_DATA_NACK',195
	._type	631,'m','ONE_NET_ENCODED_BLOCK_DATA_ACK',204
	._type	631,'m','ONE_NET_ENCODED_REPEAT_BLOCK_DATA',196
	._type	631,'m','ONE_NET_ENCODED_BLOCK_DATA',178
	._type	631,'m','ONE_NET_ENCODED_REPEAT_SINGLE_DATA',182
	._type	631,'m','ONE_NET_ENCODED_SINGLE_DATA',185
	._type	631,'m','ONE_NET_ENCODED_SINGLE_DATA_NACK',186
	._type	631,'m','ONE_NET_ENCODED_SINGLE_DATA_ACK_STAY_AWAKE',179
	._type	631,'m','ONE_NET_ENCODED_SINGLE_DATA_ACK',188
	._type	631,'m','ONE_NET_ENCODED_MASTER_INVITE_NEW_CLIENT',180
	._type	632,'T','on_pid_t',631
	._type	633,'N',''
	._type	633,'m','ON_INVALID_MSG_TYPE',3
	._type	633,'m','ON_EXTENDED_ADMIN_MSG',2
	._type	633,'m','ON_ADMIN_MSG',1
	._type	633,'m','ON_APP_MSG',0
	._type	634,'T','on_msg_type_t',633
	._type	635,'N',''
	._type	635,'m','ON_RM_DEV',34
	._type	635,'m','ON_STREAM_KEY_QUERY',33
	._type	635,'m','ON_RECV_STREAM_HIGH',31
	._type	635,'m','ON_SEND_STREAM_HIGH',30
	._type	635,'m','ON_RECV_BLOCK_HIGH',29
	._type	635,'m','ON_SEND_BLOCK_HIGH',28
	._type	635,'m','ON_CHANGE_HIGH_FRAGMENT_DELAY',27
	._type	635,'m','ON_CHANGE_PEER_DATA_RATE',26
	._type	635,'m','ON_ADMIN_UNUSED4',25
	._type	635,'m','ON_ADMIN_UNUSED3',24
	._type	635,'m','ON_ADMIN_UNUSED2',23
	._type	635,'m','ON_ADMIN_UNUSED1',22
	._type	635,'m','ON_ADMIN_UNUSED0',21
	._type	635,'m','ON_DATA_RATE_RESULT',20
	._type	635,'m','ON_INIT_DATA_RATE_TEST',19
	._type	635,'m','ON_END_STREAM',18
	._type	635,'m','ON_RECV_STREAM_LOW',17
	._type	635,'m','ON_SEND_STREAM_LOW',16
	._type	635,'m','ON_RECV_BLOCK_LOW',15
	._type	635,'m','ON_SEND_BLOCK_LOW',14
	._type	635,'m','ON_NEW_KEY_FRAGMENT',11
	._type	635,'m','ON_CHANGE_KEEP_ALIVE',10
	._type	635,'m','ON_KEEP_ALIVE_RESP',9
	._type	635,'m','ON_KEEP_ALIVE_QUERY',8
	._type	635,'m','ON_CHANGE_LOW_FRAGMENT_DELAY',7
	._type	635,'m','ON_FRAGMENT_DELAY_RESP',6
	._type	635,'m','ON_FRAGMENT_DELAY_QUERY',5
	._type	635,'m','ON_CHANGE_SETTINGS',4
	._type	635,'m','ON_SETTINGS_RESP',3
	._type	635,'m','ON_SETTINGS_QUERY',2
	._type	635,'m','ON_STATUS_RESP',1
	._type	635,'m','ON_STATUS_QUERY',0
	._type	636,'T','on_admin_msg_t',635
	._type	637,'N',''
	._type	637,'m','ON_NACK_TIME_MS',3
	._type	637,'m','ON_NACK_VALUE',2
	._type	637,'m','ON_NACK_DATA',1
	._type	637,'m','ON_NACK',0
	._type	638,'T','on_nack_handle_t',637
	._type	639,'N',''
	._type	639,'m','ON_CHANGE_STREAM_KEY',0
	._type	640,'T','on_extended_admin_msg_t',639
	._type	641,'N',''
	._type	641,'m','ONE_NET_DATA_RATE_LIMIT',6
	._type	641,'m','ONE_NET_DATA_RATE_230_4',5
	._type	641,'m','ONE_NET_DATA_RATE_192_0',4
	._type	641,'m','ONE_NET_DATA_RATE_153_6',3
	._type	641,'m','ONE_NET_DATA_RATE_115_2',2
	._type	641,'m','ONE_NET_DATA_RATE_76_8',1
	._type	641,'m','ONE_NET_DATA_RATE_38_4',0
	._type	642,'T','on_data_rate_t',641
	._type	643,'N',''
	._type	643,'m','ONE_NET_SEND_SINGLE_PRIORITY',2
	._type	643,'m','ONE_NET_HIGH_PRIORITY',2
	._type	643,'m','ONE_NET_LOW_PRIORITY',1
	._type	643,'m','ONE_NET_NO_PRIORITY',0
	._type	644,'T','on_priority_t',643
	._type	645,'N',''
	._type	645,'m','ON_INIT_STATE',1000
	._type	645,'m','ON_JOIN_NETWORK',500
	._type	645,'m','ON_SEND_DATA_RATE_RESP_WRITE_WAIT',93
	._type	645,'m','ON_SEND_DATA_RATE_RESP',92
	._type	645,'m','ON_RX_DATA_RATE',91
	._type	645,'m','ON_INIT_RX_DATA_RATE',90
	._type	645,'m','ON_RX_DATA_RATE_RESP',83
	._type	645,'m','ON_SEND_DATA_RATE_WRITE_WAIT',82
	._type	645,'m','ON_SEND_DATA_RATE',81
	._type	645,'m','ON_INIT_SEND_DATA_RATE',80
	._type	645,'m','ON_SEND_STREAM_DATA_RESP_WRITE_WAIT',71
	._type	645,'m','ON_SEND_STREAM_DATA_RESP',70
	._type	645,'m','ON_WAIT_FOR_STREAM_DATA_RESP',62
	._type	645,'m','ON_SEND_STREAM_DATA_WRITE_WAIT',61
	._type	645,'m','ON_SEND_STREAM_DATA_PKT',60
	._type	645,'m','ON_WAIT_FOR_BLOCK_DATA_END',52
	._type	645,'m','ON_SEND_BLOCK_DATA_RESP_WRITE_WAIT',51
	._type	645,'m','ON_SEND_BLOCK_DATA_RESP',50
	._type	645,'m','ON_WAIT_FOR_BLOCK_DATA_RESP',42
	._type	645,'m','ON_SEND_BLOCK_DATA_WRITE_WAIT',41
	._type	645,'m','ON_SEND_BLOCK_DATA_PKT',40
	._type	645,'m','ON_SEND_SINGLE_DATA_RESP_WRITE_WAIT',31
	._type	645,'m','ON_SEND_SINGLE_DATA_RESP',30
	._type	645,'m','ON_WAIT_FOR_SINGLE_DATA_RESP',22
	._type	645,'m','ON_SEND_SINGLE_DATA_WRITE_WAIT',21
	._type	645,'m','ON_SEND_SINGLE_DATA_PKT',20
	._type	645,'m','ON_SEND_PKT_WRITE_WAIT',11
	._type	645,'m','ON_SEND_PKT',10
	._type	645,'m','ON_LISTEN_FOR_DATA',0
	._type	646,'T','on_state_t',645
	._type	647,'N',''
	._type	647,'m','ONE_NET_SINGLE_BLOCK_ENCRYPT_TBD1',192
	._type	647,'m','ONE_NET_SINGLE_BLOCK_ENCRYPT_TBD0',128
	._type	647,'m','ONE_NET_SINGLE_BLOCK_ENCRYPT_XTEA32',64
	._type	647,'m','ONE_NET_SINGLE_BLOCK_ENCRYPT_NONE',0
	._type	648,'T','one_net_single_blk_encryption_t',647
	._type	649,'N',''
	._type	649,'m','ONE_NET_STREAM_ENCRYPT_TBD1',192
	._type	649,'m','ONE_NET_STREAM_ENCRYPT_TBD0',128
	._type	649,'m','ONE_NET_STREAM_ENCRYPT_XTEA8',64
	._type	649,'m','ONE_NET_STREAM_ENCRYPT_NONE',0
	._type	650,'T','one_net_stream_encryption_t',649
	._type	651,'Z',5,259
	._type	652,'T','one_net_raw_nid_t',651
	._type	653,'Z',6,259
	._type	654,'T','one_net_raw_sid_t',653
	._type	655,'Z',8,259
	._type	656,'T','on_encoded_sid_t',655
	._type	657,'Z',4,259
	._type	658,'T','one_net_xtea_key_fragment_t',657
	._type	659,'S','',55
	._type	659,'m','crc',259,0
	._type	659,'m','version',261,1
	._type	659,'m','sid',656,3
	._type	659,'m','channel',259,11
	._type	659,'m','data_rate',259,12
	._type	659,'m','current_key',269,13
	._type	659,'m','single_block_encrypt',259,29
	._type	659,'m','stream_key',269,30
	._type	659,'m','stream_encrypt',259,46
	._type	659,'m','fragment_delay_low',264,47
	._type	659,'m','fragment_delay_high',264,51
	._type	660,'T','on_base_param_t',659
	._type	661,'S','',5
	._type	661,'m','did',295,0
	._type	661,'m','expected_nonce',259,2
	._type	661,'m','last_nonce',259,3
	._type	661,'m','send_nonce',259,4
	._type	662,'T','on_sending_device_t',661
	._var	'ON_ENCODED_BROADCAST_DID','G',295,_ON_ENCODED_BROADCAST_DID
	._var	'ON_RAW_BROADCAST_DID','G',279,_ON_RAW_BROADCAST_DID
	._type	663,'O',259
	._type	664,'x',257,3
	._type	664,'m','data',0,663
	._type	664,'m','TXN_NONCE',0,259
	._type	664,'m','RESP_NONCE',0,259
	._var	'on_build_nonces','F',664
	._type	665,'O',259
	._type	666,'x',261,4
	._type	666,'m','DATA',0,665
	._type	666,'m','LEN',0,259
	._type	666,'m','STARTING_CRC',0,261
	._type	666,'m','ORDER',0,259
	._var	'one_net_compute_crc','F',666
	._type	667,'O',259
	._type	668,'O',259
	._type	669,'x',257,3
	._type	669,'m','encoded',0,667
	._type	669,'m','RAW',0,668
	._type	669,'m','ENCODED_SIZE',0,261
	._var	'on_encode','F',669
	._type	670,'O',259
	._type	671,'O',259
	._type	672,'x',257,3
	._type	672,'m','raw',0,670
	._type	672,'m','ENCODED',0,671
	._type	672,'m','ENCODED_SIZE',0,261
	._var	'on_decode','F',672
	._type	673,'S','_div_t',4
	._type	673,'m','quot',16,0
	._type	673,'m','rem',16,2
	._type	674,'T','div_t',673
	._type	675,'S','_ldiv_t',8
	._type	675,'m','quot',20,0
	._type	675,'m','rem',20,4
	._type	676,'T','ldiv_t',675
	._type	677,'T','size_t',18
	._type	678,'T','wchar_t',5
	._type	679,'v'
	._type	680,'v'
	._type	681,'x',679,1
	._type	681,'m','',0,680
	._var	'abort','F',681
	._type	682,'x',674,2
	._type	682,'m','numer',0,16
	._type	682,'m','denom',0,16
	._var	'div','F',682
	._type	683,'v'
	._type	684,'x',683,1
	._type	684,'m','status',0,16
	._var	'exit','F',684
	._type	685,'v'
	._type	686,'P',685
	._type	687,'x',686,2
	._type	687,'m','nelem',0,677
	._type	687,'m','size',0,677
	._var	'calloc','F',687
	._type	688,'v'
	._type	689,'v'
	._type	690,'P',689
	._type	691,'x',688,1
	._type	691,'m','ptr',0,690
	._var	'free','F',691
	._type	692,'v'
	._type	693,'P',692
	._type	694,'x',693,1
	._type	694,'m','size',0,677
	._var	'malloc','F',694
	._type	695,'v'
	._type	696,'P',695
	._type	697,'v'
	._type	698,'P',697
	._type	699,'x',696,2
	._type	699,'m','ptr',0,698
	._type	699,'m','size',0,677
	._var	'realloc','F',699
	._type	700,'P',3
	._type	701,'P',3
	._type	702,'P',701
	._type	703,'x',20,3
	._type	703,'m','s',0,700
	._type	703,'m','endptr',0,702
	._type	703,'m','base',0,16
	._var	'strtol','F',703
	._type	704,'O',3
	._type	705,'O',3
	._type	706,'O',705
	._type	707,'x',20,3
	._type	707,'m','s',0,704
	._type	707,'m','endptr',0,706
	._type	707,'m','base',0,16
	._var	'_n_n_strtol','F',707
	._type	708,'O',3
	._type	709,'O',3
	._type	710,'P',709
	._type	711,'x',20,3
	._type	711,'m','s',0,708
	._type	711,'m','endptr',0,710
	._type	711,'m','base',0,16
	._var	'_n_f_strtol','F',711
	._type	712,'P',3
	._type	713,'P',3
	._type	714,'O',713
	._type	715,'x',20,3
	._type	715,'m','s',0,712
	._type	715,'m','endptr',0,714
	._type	715,'m','base',0,16
	._var	'_f_n_strtol','F',715
	._type	716,'P',3
	._type	717,'P',3
	._type	718,'P',717
	._type	719,'x',7,3
	._type	719,'m','s',0,716
	._type	719,'m','endptr',0,718
	._type	719,'m','base',0,16
	._var	'strtoul','F',719
	._type	720,'O',3
	._type	721,'O',3
	._type	722,'O',721
	._type	723,'x',7,3
	._type	723,'m','s',0,720
	._type	723,'m','endptr',0,722
	._type	723,'m','base',0,16
	._var	'_n_n_strtoul','F',723
	._type	724,'O',3
	._type	725,'O',3
	._type	726,'P',725
	._type	727,'x',7,3
	._type	727,'m','s',0,724
	._type	727,'m','endptr',0,726
	._type	727,'m','base',0,16
	._var	'_n_f_strtoul','F',727
	._type	728,'P',3
	._type	729,'P',3
	._type	730,'O',729
	._type	731,'x',7,3
	._type	731,'m','s',0,728
	._type	731,'m','endptr',0,730
	._type	731,'m','base',0,16
	._var	'_f_n_strtoul','F',731
	._type	732,'P',3
	._type	733,'P',3
	._type	734,'P',733
	._type	735,'x',10,2
	._type	735,'m','s',0,732
	._type	735,'m','endptr',0,734
	._var	'strtod','F',735
	._type	736,'O',3
	._type	737,'O',3
	._type	738,'O',737
	._type	739,'x',10,2
	._type	739,'m','s',0,736
	._type	739,'m','endptr',0,738
	._var	'_n_n_strtod','F',739
	._type	740,'O',3
	._type	741,'O',3
	._type	742,'P',741
	._type	743,'x',10,2
	._type	743,'m','s',0,740
	._type	743,'m','endptr',0,742
	._var	'_n_f_strtod','F',743
	._type	744,'P',3
	._type	745,'P',3
	._type	746,'O',745
	._type	747,'x',10,2
	._type	747,'m','s',0,744
	._type	747,'m','endptr',0,746
	._var	'_f_n_strtod','F',747
	._type	748,'P',3
	._type	749,'x',16,1
	._type	749,'m','s',0,748
	._var	'atoi','F',749
	._type	750,'P',3
	._type	751,'x',20,1
	._type	751,'m','s',0,750
	._var	'atol','F',751
	._type	752,'P',3
	._type	753,'x',10,1
	._type	753,'m','s',0,752
	._var	'atof','F',753
	._type	754,'x',16,1
	._type	754,'m','n',0,16
	._var	'abs','F',754
	._type	755,'x',20,1
	._type	755,'m','n',0,20
	._var	'labs','F',755
	._type	756,'x',676,2
	._type	756,'m','numer',0,20
	._type	756,'m','denom',0,20
	._var	'ldiv','F',756
	._type	757,'v'
	._type	758,'v'
	._type	759,'P',758
	._type	760,'v'
	._type	761,'P',760
	._type	762,'v'
	._type	763,'P',762
	._type	764,'x',16,2
	._type	764,'m','e1',0,761
	._type	764,'m','e2',0,763
	._type	765,'P',764
	._type	766,'x',757,4
	._type	766,'m','base',0,759
	._type	766,'m','nelem',0,677
	._type	766,'m','size',0,677
	._type	766,'m','cmp',0,765
	._var	'qsort','F',766
	._type	767,'v'
	._type	768,'O',767
	._type	769,'v'
	._type	770,'P',769
	._type	771,'v'
	._type	772,'P',771
	._type	773,'v'
	._type	774,'P',773
	._type	775,'v'
	._type	776,'P',775
	._type	777,'x',16,2
	._type	777,'m','ck',0,774
	._type	777,'m','ce',0,776
	._type	778,'P',777
	._type	779,'x',768,5
	._type	779,'m','key',0,770
	._type	779,'m','base',0,772
	._type	779,'m','nelem',0,677
	._type	779,'m','size',0,677
	._type	779,'m','cmp',0,778
	._var	'bsearch','F',779
	._type	780,'P',3
	._type	781,'x',16,2
	._type	781,'m','s',0,780
	._type	781,'m','n',0,677
	._var	'mblen','F',781
	._type	782,'P',678
	._type	783,'P',3
	._type	784,'x',16,3
	._type	784,'m','pwc',0,782
	._type	784,'m','s',0,783
	._type	784,'m','n',0,677
	._var	'mbtowc','F',784
	._type	785,'P',3
	._type	786,'x',16,2
	._type	786,'m','s',0,785
	._type	786,'m','wchar',0,678
	._var	'wctomb','F',786
	._type	787,'P',3
	._type	788,'P',678
	._type	789,'x',677,3
	._type	789,'m','s',0,787
	._type	789,'m','wcs',0,788
	._type	789,'m','n',0,677
	._var	'wcstombs','F',789
	._type	790,'P',678
	._type	791,'P',3
	._type	792,'x',677,3
	._type	792,'m','wcs',0,790
	._type	792,'m','s',0,791
	._type	792,'m','n',0,677
	._var	'mbstowcs','F',792
	._type	793,'v'
	._type	794,'x',16,1
	._type	794,'m','',0,793
	._var	'rand','F',794
	._type	795,'v'
	._type	796,'x',795,1
	._type	796,'m','',0,18
	._var	'srand','F',796
	._type	797,'P',3
	._type	798,'P',3
	._type	799,'P',798
	._type	800,'x',10,2
	._type	800,'m','s',0,797
	._type	800,'m','endptr',0,799
	._var	'strtof','F',800
	._type	801,'O',3
	._type	802,'O',3
	._type	803,'O',802
	._type	804,'x',10,2
	._type	804,'m','s',0,801
	._type	804,'m','endptr',0,803
	._var	'_n_n_strtof','F',804
	._type	805,'O',3
	._type	806,'O',3
	._type	807,'P',806
	._type	808,'x',10,2
	._type	808,'m','s',0,805
	._type	808,'m','endptr',0,807
	._var	'_n_f_strtof','F',808
	._type	809,'P',3
	._type	810,'P',3
	._type	811,'O',810
	._type	812,'x',10,2
	._type	812,'m','s',0,809
	._type	812,'m','endptr',0,811
	._var	'_f_n_strtof','F',812
	._type	813,'P',3
	._type	814,'x',10,1
	._type	814,'m','s',0,813
	._var	'atoff','F',814
	._type	815,'v'
	._type	816,'v'
	._type	817,'x',815,1
	._type	817,'m','',0,816
	._var	'init_tick','F',817
	._type	818,'v'
	._type	819,'x',264,1
	._type	819,'m','',0,818
	._var	'get_tick_count','F',819
	._type	820,'v'
	._type	821,'x',820,1
	._type	821,'m','count',0,261
	._var	'delay_ms','F',821
	._type	822,'v'
	._type	823,'x',822,1
	._type	823,'m','count',0,261
	._var	'delay_100s_us','F',823
	._type	824,'N',''
	._type	824,'m','ONE_NET_MAX_CHANNEL',27
	._type	824,'m','ONE_NET_NUM_CHANNELS',28
	._type	824,'m','ONE_NET_MAX_EUR_CHANNEL',27
	._type	824,'m','ONE_NET_EUR_CHANNEL_3',27
	._type	824,'m','ONE_NET_EUR_CHANNEL_2',26
	._type	824,'m','ONE_NET_EUR_CHANNEL_1',25
	._type	824,'m','ONE_NET_MIN_EUR_CHANNEL',25
	._type	824,'m','ONE_NET_MAX_US_CHANNEL',24
	._type	824,'m','ONE_NET_US_CHANNEL_25',24
	._type	824,'m','ONE_NET_US_CHANNEL_24',23
	._type	824,'m','ONE_NET_US_CHANNEL_23',22
	._type	824,'m','ONE_NET_US_CHANNEL_22',21
	._type	824,'m','ONE_NET_US_CHANNEL_21',20
	._type	824,'m','ONE_NET_US_CHANNEL_20',19
	._type	824,'m','ONE_NET_US_CHANNEL_19',18
	._type	824,'m','ONE_NET_US_CHANNEL_18',17
	._type	824,'m','ONE_NET_US_CHANNEL_17',16
	._type	824,'m','ONE_NET_US_CHANNEL_16',15
	._type	824,'m','ONE_NET_US_CHANNEL_15',14
	._type	824,'m','ONE_NET_US_CHANNEL_14',13
	._type	824,'m','ONE_NET_US_CHANNEL_13',12
	._type	824,'m','ONE_NET_US_CHANNEL_12',11
	._type	824,'m','ONE_NET_US_CHANNEL_11',10
	._type	824,'m','ONE_NET_US_CHANNEL_10',9
	._type	824,'m','ONE_NET_US_CHANNEL_9',8
	._type	824,'m','ONE_NET_US_CHANNEL_8',7
	._type	824,'m','ONE_NET_US_CHANNEL_7',6
	._type	824,'m','ONE_NET_US_CHANNEL_6',5
	._type	824,'m','ONE_NET_US_CHANNEL_5',4
	._type	824,'m','ONE_NET_US_CHANNEL_4',3
	._type	824,'m','ONE_NET_US_CHANNEL_3',2
	._type	824,'m','ONE_NET_US_CHANNEL_2',1
	._type	824,'m','ONE_NET_US_CHANNEL_1',0
	._type	824,'m','ONE_NET_MIN_US_CHANNEL',0
	._type	825,'T','one_net_channel_t',824
	._type	826,'v'
	._type	827,'O',826
	._type	828,'v'
	._type	829,'O',828
	._type	830,'v'
	._type	831,'O',830
	._type	832,'x',827,3
	._type	832,'m','dst',0,829
	._type	832,'m','SRC',0,831
	._type	832,'m','len',0,677
	._var	'one_net_memmove','F',832
	._type	833,'v'
	._type	834,'O',833
	._type	835,'v'
	._type	836,'O',835
	._type	837,'x',613,3
	._type	837,'m','vp1',0,834
	._type	837,'m','vp2',0,836
	._type	837,'m','n',0,677
	._var	'one_net_memcmp','F',837
	._type	838,'O',259
	._type	839,'x',261,1
	._type	839,'m','BYTE_STREAM',0,838
	._var	'one_net_byte_stream_to_int16','F',839
	._type	840,'v'
	._type	841,'O',259
	._type	842,'x',840,2
	._type	842,'m','VAL',0,261
	._type	842,'m','byte_stream',0,841
	._var	'one_net_int16_to_byte_stream','F',842
	._type	843,'O',259
	._type	844,'x',263,1
	._type	844,'m','BYTE_STREAM',0,843
	._var	'one_net_byte_stream_to_int32','F',844
	._type	845,'v'
	._type	846,'O',259
	._type	847,'x',845,2
	._type	847,'m','VAL',0,263
	._type	847,'m','byte_stream',0,846
	._var	'one_net_int32_to_byte_stream','F',847
	._type	848,'v'
	._type	849,'x',264,1
	._type	849,'m','',0,848
	._var	'one_net_tick','F',849
	._type	850,'x',264,1
	._type	850,'m','MS',0,263
	._var	'one_net_ms_to_tick','F',850
	._type	851,'x',263,1
	._type	851,'m','TICK',0,264
	._var	'one_net_tick_to_ms','F',851
	._type	852,'v'
	._type	853,'x',852,1
	._type	853,'m','CHANNEL',0,259
	._var	'one_net_set_channel','F',853
	._type	854,'v'
	._type	855,'x',260,1
	._type	855,'m','',0,854
	._var	'one_net_channel_is_clear','F',855
	._type	856,'v'
	._type	857,'x',856,1
	._type	857,'m','DATA_RATE',0,259
	._var	'one_net_set_data_rate','F',857
	._type	858,'x',257,1
	._type	858,'m','DURATION',0,264
	._var	'one_net_look_for_pkt','F',858
	._type	859,'O',259
	._type	860,'x',261,2
	._type	860,'m','data',0,859
	._type	860,'m','LEN',0,261
	._var	'one_net_read','F',860
	._type	861,'O',259
	._type	862,'x',261,2
	._type	862,'m','DATA',0,861
	._type	862,'m','LEN',0,261
	._var	'one_net_write','F',862
	._type	863,'v'
	._type	864,'x',260,1
	._type	864,'m','',0,863
	._var	'one_net_write_done','F',864
	._type	865,'O',259
	._type	866,'O',279
	._type	867,'O',264
	._type	868,'O',264
	._type	869,'x',257,8
	._type	869,'m','data',0,865
	._type	869,'m','DATA_LEN',0,259
	._type	869,'m','DST_UNIT_IDX',0,259
	._type	869,'m','PRIORITY',0,259
	._type	869,'m','RAW_DST',0,866
	._type	869,'m','SRC_UNIT',0,259
	._type	869,'m','send_time_from_now',0,867
	._type	869,'m','expire_time_from_now',0,868
	._type	870,'P',869
	._type	871,'T','one_net_send_single_func_t',870
	._type	872,'O',279
	._type	873,'x',257,7
	._type	873,'m','TYPE',0,259
	._type	873,'m','SEND',0,260
	._type	873,'m','DATA_TYPE',0,261
	._type	873,'m','LEN',0,261
	._type	873,'m','PRIORITY',0,259
	._type	873,'m','DID',0,872
	._type	873,'m','SRC_UNIT',0,259
	._type	874,'P',873
	._type	875,'T','one_net_block_stream_request_func_t',874
	._var	'one_net_send_single','E',871
	._var	'one_net_block_stream_request','E',875
	._type	876,'O',259
	._type	877,'O',356
	._type	878,'O',358
	._type	879,'x',257,3
	._type	879,'m','MSG_DATA',0,876
	._type	879,'m','msg_class',0,877
	._type	879,'m','msg_type',0,878
	._var	'ona_parse_msg_class_and_type','F',879
	._type	880,'O',259
	._type	881,'O',259
	._type	882,'O',259
	._type	883,'O',356
	._type	884,'O',358
	._type	885,'O',261
	._type	886,'x',338,6
	._type	886,'m','pld',0,880
	._type	886,'m','src_unit',0,881
	._type	886,'m','dst_unit',0,882
	._type	886,'m','msg_class',0,883
	._type	886,'m','msg_type',0,884
	._type	886,'m','msg_data',0,885
	._var	'on_parse_single_app_pld','F',886
	._type	887,'O',279
	._type	888,'x',257,1
	._type	888,'m','RAW_DST',0,887
	._var	'ona_send_unit_type_count_query','F',888
	._type	889,'O',279
	._type	890,'x',257,2
	._type	890,'m','UNIT_TYPE_INDEX',0,259
	._type	890,'m','RAW_DST',0,889
	._var	'ona_send_unit_type_query','F',890
	._type	891,'O',259
	._type	892,'O',259
	._type	893,'O',259
	._type	894,'x',257,3
	._type	894,'m','MSG_DATA',0,891
	._type	894,'m','unit_count',0,892
	._type	894,'m','unit_type_count',0,893
	._var	'ona_parse_unit_type_count','F',894
	._type	895,'O',259
	._type	896,'O',620
	._type	897,'O',259
	._type	898,'x',257,3
	._type	898,'m','MSG_DATA',0,895
	._type	898,'m','unit_type',0,896
	._type	898,'m','unit_count',0,897
	._var	'ona_parse_unit_type_status','F',898
	._type	899,'Z',1,622
	._var	'ONE_NET_DEVICE_UNIT_TYPE','E',899
	._type	901,'S','',2
	._type	901,'m','master_data_rate',259,0
	._type	901,'m','flags',259,1
	._type	900,'S','',11
	._type	900,'m','device',662,0
	._type	900,'m','keep_alive_interval',264,5
	._type	900,'m','settings',901,9
	._type	902,'T','on_master_t',900
	._type	903,'S','',60
	._type	903,'m','channel',825,0
	._type	903,'m','current_key',269,2
	._type	903,'m','single_block_encrypt_method',259,18
	._type	903,'m','data_rate',642,19
	._type	903,'m','raw_sid',654,21
	._type	903,'m','raw_master_did',279,27
	._type	903,'m','master_data_rate',642,29
	._type	903,'m','keep_alive_interval',264,31
	._type	903,'m','fragment_delay_low',264,35
	._type	903,'m','fragment_delay_high',264,39
	._type	903,'m','stream_key',269,43
	._type	903,'m','stream_encrypt_method',259,59
	._type	904,'T','one_net_client_join_network_data_t',903
	._var	'client_joined_network','E',260
	._var	'client_looking_for_invite','E',260
	._type	905,'O',269
	._type	906,'x',257,3
	._type	906,'m','INVITE_KEY',0,905
	._type	906,'m','SINGLE_BLOCK_ENCRYPT_METHOD',0,259
	._type	906,'m','STREAM_ENCRYPT_METHOD',0,259
	._var	'one_net_client_look_for_invite','F',906
	._type	907,'O',259
	._type	908,'x',257,2
	._type	908,'m','PARAM',0,907
	._type	908,'m','PARAM_LEN',0,261
	._var	'one_net_client_init','F',908
	._type	909,'v'
	._type	910,'O',259
	._type	911,'x',909,2
	._type	911,'m','param',0,910
	._type	911,'m','len',0,261
	._var	'one_net_copy_to_nv_param','F',911
	._type	912,'v'
	._type	913,'O',279
	._type	914,'x',912,1
	._type	914,'m','master_did',0,913
	._var	'one_net_client_raw_master_did','F',914
	._type	915,'O',259
	._type	916,'O',279
	._type	917,'O',264
	._type	918,'O',264
	._type	919,'x',257,8
	._type	919,'m','data',0,915
	._type	919,'m','data_len',0,259
	._type	919,'m','dst_unit_idx',0,259
	._type	919,'m','priority',0,259
	._type	919,'m','raw_dst',0,916
	._type	919,'m','src_unit',0,259
	._type	919,'m','send_time_from_now',0,917
	._type	919,'m','expire_time_from_now',0,918
	._var	'one_net_client_send_single','F',919
	._type	920,'O',265
	._type	921,'O',279
	._type	922,'O',338
	._type	923,'O',342
	._type	924,'O',350
	._type	925,'x',257,5
	._type	925,'m','txn',0,920
	._type	925,'m','src_did',0,921
	._type	925,'m','nack_reason',0,922
	._type	925,'m','ack_nack_handle',0,923
	._type	925,'m','ack_nack_payload',0,924
	._var	'on_client_handle_ack_nack_response','F',925
	._type	926,'O',279
	._type	927,'x',257,7
	._type	927,'m','TYPE',0,259
	._type	927,'m','SEND',0,260
	._type	927,'m','DATA_TYPE',0,261
	._type	927,'m','LEN',0,261
	._type	927,'m','PRIORITY',0,259
	._type	927,'m','DID',0,926
	._type	927,'m','SRC_UNIT',0,259
	._var	'one_net_client_block_stream_request','F',927
	._type	928,'v'
	._type	929,'x',257,1
	._type	929,'m','',0,928
	._var	'one_net_client_end_stream','F',929
	._type	930,'v'
	._type	931,'v'
	._type	932,'x',930,1
	._type	932,'m','',0,931
	._var	'one_net_client_stream_key_query','F',932
	._type	933,'O',904
	._type	934,'x',257,1
	._type	934,'m','DATA',0,933
	._var	'one_net_client_join_network','F',934
	._type	935,'v'
	._type	936,'x',264,1
	._type	936,'m','',0,935
	._var	'one_net_client','F',936
	._type	937,'v'
	._type	938,'x',259,1
	._type	938,'m','',0,937
	._var	'one_net_client_get_channel','F',938
	._type	939,'N',''
	._type	939,'m','ONE_NET_UPDATE_NOTHING',11
	._type	939,'m','ONE_NET_UPDATE_STREAM_KEY',10
	._type	939,'m','ONE_NET_UPDATE_REMOVE_DEVICE',9
	._type	939,'m','ONE_NET_UPDATE_KEEP_ALIVE',8
	._type	939,'m','ONE_NET_UPDATE_HIGH_FRAGMENT_DELAY',7
	._type	939,'m','ONE_NET_UPDATE_LOW_FRAGMENT_DELAY',6
	._type	939,'m','ONE_NET_UPDATE_REPORT_TO_MASTER',5
	._type	939,'m','ONE_NET_UPDATE_UNASSIGN_PEER',4
	._type	939,'m','ONE_NET_UPDATE_ASSIGN_PEER',3
	._type	939,'m','ONE_NET_UPDATE_NETWORK_KEY',2
	._type	939,'m','ONE_NET_UPDATE_PEER_DATA_RATE',1
	._type	939,'m','ONE_NET_UPDATE_DATA_RATE',0
	._type	940,'T','one_net_mac_update_t',939
	._type	941,'S','',6
	._type	941,'m','multi_hop_repeater',260,0
	._type	941,'m','multi_hop_capable',260,1
	._type	941,'m','full_featured',260,2
	._type	941,'m','max_peers',259,3
	._type	941,'m','max_data_rate',642,4
	._type	942,'T','one_net_master_add_client_in_t',941
	._type	943,'S','',61
	._type	943,'m','raw_sid',654,0
	._type	943,'m','current_key',269,6
	._type	943,'m','stream_key',269,22
	._type	943,'m','master_did',279,38
	._type	943,'m','keep_alive_interval',264,40
	._type	943,'m','fragment_delay_low',264,44
	._type	943,'m','fragment_delay_high',264,48
	._type	943,'m','single_block_encrypt_method',259,52
	._type	943,'m','stream_encrypt_method',259,53
	._type	943,'m','master_data_rate',642,54
	._type	943,'m','data_rate',642,56
	._type	943,'m','channel',825,58
	._type	943,'m','update_master',260,60
	._type	944,'T','one_net_master_add_client_out_t',943
	._type	945,'S','',36
	._type	945,'m','next_client_did',261,0
	._type	945,'m','old_key',269,2
	._type	945,'m','old_stream_key',269,18
	._type	945,'m','client_count',261,34
	._type	946,'T','on_master_param_t',945
	._type	947,'O',654
	._type	948,'O',269
	._type	949,'O',269
	._type	950,'x',257,5
	._type	950,'m','SID',0,947
	._type	950,'m','KEY',0,948
	._type	950,'m','SINGLE_BLOCK_ENCRYPT_METHOD',0,259
	._type	950,'m','STREAM_KEY',0,949
	._type	950,'m','STREAM_ENCRYPT_METHOD',0,259
	._var	'one_net_master_create_network','F',950
	._type	951,'O',259
	._type	952,'x',257,2
	._type	952,'m','PARAM',0,951
	._type	952,'m','PARAM_LEN',0,261
	._var	'one_net_master_init','F',952
	._type	953,'v'
	._type	954,'x',259,1
	._type	954,'m','',0,953
	._var	'one_net_master_get_channel','F',954
	._type	955,'O',259
	._type	956,'O',279
	._type	957,'O',264
	._type	958,'O',264
	._type	959,'x',257,8
	._type	959,'m','data',0,955
	._type	959,'m','data_len',0,259
	._type	959,'m','dst_unit_idx',0,259
	._type	959,'m','priority',0,259
	._type	959,'m','raw_dst',0,956
	._type	959,'m','src_unit',0,259
	._type	959,'m','send_time_from_now',0,957
	._type	959,'m','expire_time_from_now',0,958
	._var	'one_net_master_send_single','F',959
	._type	960,'O',279
	._type	961,'x',257,7
	._type	961,'m','TYPE',0,259
	._type	961,'m','SEND',0,260
	._type	961,'m','DATA_TYPE',0,261
	._type	961,'m','LEN',0,261
	._type	961,'m','PRIORITY',0,259
	._type	961,'m','DID',0,960
	._type	961,'m','SRC_UNIT',0,259
	._var	'one_net_master_block_stream_request','F',961
	._type	962,'O',279
	._type	963,'x',257,1
	._type	963,'m','DID',0,962
	._var	'one_net_master_end_stream','F',963
	._type	964,'O',279
	._type	965,'x',257,2
	._type	965,'m','RAW_DID',0,964
	._type	965,'m','DATA_RATE',0,259
	._var	'one_net_master_change_client_data_rate','F',965
	._type	966,'O',279
	._type	967,'x',257,2
	._type	967,'m','RAW_DST',0,966
	._type	967,'m','KEEP_ALIVE',0,263
	._var	'one_net_master_change_client_keep_alive','F',967
	._type	968,'O',279
	._type	969,'x',257,3
	._type	969,'m','RAW_DST',0,968
	._type	969,'m','PRIORITY',0,259
	._type	969,'m','DELAY',0,263
	._var	'one_net_master_change_frag_dly','F',969
	._type	970,'x',257,1
	._type	970,'m','KEY_FRAGMENT',0,658
	._var	'one_net_master_change_key','F',970
	._type	971,'O',269
	._type	972,'x',257,1
	._type	972,'m','NEW_STREAM_KEY',0,971
	._var	'one_net_master_change_stream_key','F',972
	._type	973,'O',279
	._type	974,'x',257,2
	._type	974,'m','UPDATE_MASTER',0,260
	._type	974,'m','DST_DID',0,973
	._var	'one_net_master_set_update_master_flag','F',974
	._type	975,'O',279
	._type	976,'O',279
	._type	977,'x',257,3
	._type	977,'m','SENDER',0,975
	._type	977,'m','RECEIVER',0,976
	._type	977,'m','DATA_RATE',0,259
	._var	'one_net_master_start_data_rate_test','F',977
	._type	978,'O',269
	._type	979,'x',257,1
	._type	979,'m','KEY',0,978
	._var	'one_net_master_invite','F',979
	._type	980,'O',269
	._type	981,'x',257,1
	._type	981,'m','KEY',0,980
	._var	'one_net_master_cancel_invite','F',981
	._type	982,'O',279
	._type	983,'x',257,1
	._type	983,'m','RAW_PEER_DID',0,982
	._var	'one_net_master_remove_device','F',983
	._type	984,'v'
	._type	985,'v'
	._type	986,'x',984,1
	._type	986,'m','',0,985
	._var	'one_net_master','F',986
	._type	987,'O',942
	._type	988,'O',944
	._type	989,'x',257,2
	._type	989,'m','CAPABILITIES',0,987
	._type	989,'m','config',0,988
	._var	'one_net_master_add_client','F',989
	._type	990,'O',529
	._type	991,'O',295
	._type	992,'x',990,1
	._type	992,'m','CLIENT_DID',0,991
	._var	'client_info','F',992
	._type	993,'O',269
	._type	994,'x',993,2
	._type	994,'m','current_key',0,260
	._type	994,'m','stream_key',0,260
	._var	'get_encryption_key','F',994
	._type	995,'O',269
	._type	996,'O',529
	._type	997,'x',995,2
	._type	997,'m','client',0,996
	._type	997,'m','stream_key',0,260
	._var	'get_client_encryption_key','F',997
	._type	998,'O',265
	._type	999,'O',279
	._type	1000,'O',338
	._type	1001,'O',342
	._type	1002,'O',350
	._type	1003,'x',257,5
	._type	1003,'m','txn',0,998
	._type	1003,'m','src_did',0,999
	._type	1003,'m','nack_reason',0,1000
	._type	1003,'m','ack_nack_handle',0,1001
	._type	1003,'m','ack_nack_payload',0,1002
	._var	'on_master_handle_ack_nack_response','F',1003
	._type	1004,'O',279
	._type	1005,'x',257,1
	._type	1005,'m','raw_client_did',0,1004
	._var	'one_net_master_delete_last_client','F',1005
	._type	1006,'x',260,2
	._type	1006,'m','TIMER',0,259
	._type	1006,'m','DURATION',0,264
	._var	'ont_set_timer','F',1006
	._type	1007,'x',264,1
	._type	1007,'m','TIMER',0,259
	._var	'ont_get_timer','F',1007
	._type	1008,'x',260,1
	._type	1008,'m','TIMER',0,259
	._var	'ont_stop_timer','F',1008
	._type	1009,'x',260,1
	._type	1009,'m','TIMER',0,259
	._var	'ont_active','F',1009
	._type	1010,'x',260,1
	._type	1010,'m','TIMER',0,259
	._var	'ont_expired','F',1010
	._type	1011,'x',260,1
	._type	1011,'m','TIMER',0,259
	._var	'ont_inactive_or_expired','F',1011
	._type	1012,'x',263,2
	._type	1012,'m','MODIFIER',0,263
	._type	1012,'m','MAX_RAND',0,263
	._var	'one_net_prand','F',1012
	._type	1013,'Z',3,259
	._var	'PREAMBLE','S',1013,_PREAMBLE
	._type	1014,'Z',1,259
	._var	'SOF','S',1014,_SOF
	._var	'pkt_hdlr','S',376,_pkt_hdlr
	._var	'on_state','G',646,_on_state
	._type	1015,'O',660
	._var	'on_base_param','G',1015,_on_base_param
	._var	'data_rate_result','S',259,_data_rate_result
	._var	'block_complete','S',260,_block_complete
	._type	1016,'O',265
	._var	'cur_stream','S',1016,_cur_stream
	._var	'last_single_ack_time','S',264,_last_single_ack_time
	._var	'last_single_ack_did','S',279,_last_single_ack_did
	._type	1017,'Z',5,259
	._var	'last_single_ack_payload','S',1017,_last_single_ack_payload
	._var	'single_data_queue_size','G',259,_single_data_queue_size
	._type	1018,'Z',3,303
	._var	'single_data_queue','G',1018,_single_data_queue
	._var	'parse_txn_payload','G',260,_parse_txn_payload
;#################################
;#################################
;#################################
	._inspect	'V', 't', "UInt8", 'O', 3
	._inspect	'V', 't', "SInt8", 'O', 19
	._inspect	'V', 't', "UInt16", 'O', 18
	._inspect	'V', 't', "SInt16", 'O', 16
	._inspect	'V', 't', "UInt32", 'O', 7
	._inspect	'V', 't', "SInt32", 'O', 20
	._inspect	'V', 't', "Float32", 'O', 10
	._inspect	'V', 't', "tick_t", 'O', 263
	._inspect	'V', 't', "BOOL", 'O', 259
	._inspect	'V', 't', "ona_msg_class_t", 'O', 355
	._inspect	'V', 't', "ona_msg_type_t", 'O', 357
	._inspect	'V', 't', "ona_block_msg_type_t", 'O', 617
	._inspect	'V', 't', "ona_unit_type_t", 'O', 619
	._inspect	'V', 't', "ona_unit_type_count_t", 'O', 621
	._inspect	'V', 't', "one_net_status_t", 'O', 256
	._inspect	'V', 't', "one_net_xtea_key_t", 'O', 268
	._inspect	'F', 't', "one_net_xtea_encipher", 'G', 626
	._inspect	'F', 't', "one_net_xtea_decipher", 'G', 630
	._inspect	'V', 't', "on_pid_t", 'O', 631
	._inspect	'V', 't', "on_msg_type_t", 'O', 633
	._inspect	'V', 't', "on_admin_msg_t", 'O', 635
	._inspect	'V', 't', "on_nack_rsn_t", 'O', 337
	._inspect	'V', 't', "on_ack_handle_t", 'O', 340
	._inspect	'V', 't', "on_nack_handle_t", 'O', 637
	._inspect	'V', 't', "on_ack_nack_handle_t", 'O', 341
	._inspect	'V', 't', "ack_value_t", 'O', 347
	._inspect	'V', 't', "ack_nack_payload_t", 'O', 344
	._inspect	'V', 't', "on_extended_admin_msg_t", 'O', 639
	._inspect	'V', 't', "on_data_rate_t", 'O', 641
	._inspect	'V', 't', "on_data_t", 'O', 469
	._inspect	'V', 't', "on_priority_t", 'O', 643
	._inspect	'V', 't', "on_state_t", 'O', 645
	._inspect	'V', 't', "one_net_single_blk_encryption_t", 'O', 647
	._inspect	'V', 't', "one_net_stream_encryption_t", 'O', 649
	._inspect	'V', 't', "one_net_raw_nid_t", 'O', 651
	._inspect	'V', 't', "one_net_raw_did_t", 'O', 278
	._inspect	'V', 't', "one_net_raw_sid_t", 'O', 653
	._inspect	'V', 't', "on_encoded_nid_t", 'O', 380
	._inspect	'V', 't', "on_encoded_did_t", 'O', 294
	._inspect	'V', 't', "on_encoded_sid_t", 'O', 655
	._inspect	'V', 't', "one_net_xtea_key_fragment_t", 'O', 657
	._inspect	'V', 't', "on_single_data_queue_t", 'O', 301
	._inspect	'V', 't', "on_base_param_t", 'O', 659
	._inspect	'V', 't', "on_sending_device_t", 'O', 661
	._inspect	'V', 't', "on_txn_t", 'O', 258
	._inspect	'V', 't', "on_pkt_hdlr_t", 'O', 333
	._inspect	'V', 't', "on_ack_nack_hdlr_t", 'O', 353
	._inspect	'V', 't', "on_status_msg_hdlr_t", 'O', 364
	._inspect	'V', 't', "on_txn_hdlr_t", 'O', 369
	._inspect	'V', 't', "on_data_rate_result_hdlr_t", 'O', 374
	._inspect	'V', 't', "on_pkt_hdlr_set_t", 'O', 327
	._inspect	'V', 't', "ON_ENCODED_BROADCAST_DID", 'G', 295
	._inspect	'V', 't', "ON_RAW_BROADCAST_DID", 'G', 279
	._inspect	'F', 't', "on_build_nonces", 'G', 664
	._inspect	'F', 't', "one_net_compute_crc", 'G', 666
	._inspect	'F', 't', "on_encode", 'G', 669
	._inspect	'F', 't', "on_decode", 'G', 672
	._inspect	'V', 't', "div_t", 'O', 673
	._inspect	'V', 't', "ldiv_t", 'O', 675
	._inspect	'V', 't', "size_t", 'O', 18
	._inspect	'V', 't', "wchar_t", 'O', 5
	._inspect	'F', 't', "abort", 'G', 681
	._inspect	'F', 't', "div", 'G', 682
	._inspect	'F', 't', "exit", 'G', 684
	._inspect	'F', 't', "calloc", 'G', 687
	._inspect	'F', 't', "free", 'G', 691
	._inspect	'F', 't', "malloc", 'G', 694
	._inspect	'F', 't', "realloc", 'G', 699
	._inspect	'F', 't', "strtol", 'G', 703
	._inspect	'F', 't', "_n_n_strtol", 'G', 707
	._inspect	'F', 't', "_n_f_strtol", 'G', 711
	._inspect	'F', 't', "_f_n_strtol", 'G', 715
	._inspect	'F', 't', "strtoul", 'G', 719
	._inspect	'F', 't', "_n_n_strtoul", 'G', 723
	._inspect	'F', 't', "_n_f_strtoul", 'G', 727
	._inspect	'F', 't', "_f_n_strtoul", 'G', 731
	._inspect	'F', 't', "strtod", 'G', 735
	._inspect	'F', 't', "_n_n_strtod", 'G', 739
	._inspect	'F', 't', "_n_f_strtod", 'G', 743
	._inspect	'F', 't', "_f_n_strtod", 'G', 747
	._inspect	'F', 't', "atoi", 'G', 749
	._inspect	'F', 't', "atol", 'G', 751
	._inspect	'F', 't', "atof", 'G', 753
	._inspect	'F', 't', "abs", 'G', 754
	._inspect	'F', 't', "labs", 'G', 755
	._inspect	'F', 't', "ldiv", 'G', 756
	._inspect	'F', 't', "qsort", 'G', 766
	._inspect	'F', 't', "bsearch", 'G', 779
	._inspect	'F', 't', "mblen", 'G', 781
	._inspect	'F', 't', "mbtowc", 'G', 784
	._inspect	'F', 't', "wctomb", 'G', 786
	._inspect	'F', 't', "wcstombs", 'G', 789
	._inspect	'F', 't', "mbstowcs", 'G', 792
	._inspect	'F', 't', "rand", 'G', 794
	._inspect	'F', 't', "srand", 'G', 796
	._inspect	'F', 't', "strtof", 'G', 800
	._inspect	'F', 't', "_n_n_strtof", 'G', 804
	._inspect	'F', 't', "_n_f_strtof", 'G', 808
	._inspect	'F', 't', "_f_n_strtof", 'G', 812
	._inspect	'F', 't', "atoff", 'G', 814
	._inspect	'F', 't', "init_tick", 'G', 817
	._inspect	'F', 't', "get_tick_count", 'G', 819
	._inspect	'F', 't', "delay_ms", 'G', 821
	._inspect	'F', 't', "delay_100s_us", 'G', 823
	._inspect	'V', 't', "one_net_channel_t", 'O', 824
	._inspect	'F', 't', "one_net_memmove", 'G', 832
	._inspect	'F', 't', "one_net_memcmp", 'G', 837
	._inspect	'F', 't', "one_net_byte_stream_to_int16", 'G', 839
	._inspect	'F', 't', "one_net_int16_to_byte_stream", 'G', 842
	._inspect	'F', 't', "one_net_byte_stream_to_int32", 'G', 844
	._inspect	'F', 't', "one_net_int32_to_byte_stream", 'G', 847
	._inspect	'F', 't', "one_net_tick", 'G', 849
	._inspect	'F', 't', "one_net_ms_to_tick", 'G', 850
	._inspect	'F', 't', "one_net_tick_to_ms", 'G', 851
	._inspect	'F', 't', "one_net_set_channel", 'G', 853
	._inspect	'F', 't', "one_net_channel_is_clear", 'G', 855
	._inspect	'F', 't', "one_net_set_data_rate", 'G', 857
	._inspect	'F', 't', "one_net_look_for_pkt", 'G', 858
	._inspect	'F', 't', "one_net_read", 'G', 860
	._inspect	'F', 't', "one_net_write", 'G', 862
	._inspect	'F', 't', "one_net_write_done", 'G', 864
	._inspect	'V', 't', "one_net_send_single_func_t", 'O', 870
	._inspect	'V', 't', "one_net_block_stream_request_func_t", 'O', 874
	._inspect	'V', 't', "one_net_send_single", 'G', 871
	._inspect	'V', 't', "one_net_block_stream_request", 'G', 875
	._inspect	'F', 't', "ona_parse_msg_class_and_type", 'G', 879
	._inspect	'F', 't', "on_parse_single_app_pld", 'G', 886
	._inspect	'F', 't', "ona_send_unit_type_count_query", 'G', 888
	._inspect	'F', 't', "ona_send_unit_type_query", 'G', 890
	._inspect	'F', 't', "ona_parse_unit_type_count", 'G', 894
	._inspect	'F', 't', "ona_parse_unit_type_status", 'G', 898
	._inspect	'V', 't', "ONE_NET_DEVICE_UNIT_TYPE", 'G', 899
	._inspect	'V', 't', "on_master_t", 'O', 900
	._inspect	'V', 't', "one_net_client_join_network_data_t", 'O', 903
	._inspect	'V', 't', "client_joined_network", 'G', 260
	._inspect	'V', 't', "client_looking_for_invite", 'G', 260
	._inspect	'F', 't', "one_net_client_look_for_invite", 'G', 906
	._inspect	'F', 't', "one_net_client_init", 'G', 908
	._inspect	'F', 't', "one_net_copy_to_nv_param", 'G', 911
	._inspect	'F', 't', "one_net_client_raw_master_did", 'G', 914
	._inspect	'F', 't', "one_net_client_send_single", 'G', 919
	._inspect	'F', 't', "on_client_handle_ack_nack_response", 'G', 925
	._inspect	'F', 't', "one_net_client_block_stream_request", 'G', 927
	._inspect	'F', 't', "one_net_client_end_stream", 'G', 929
	._inspect	'F', 't', "one_net_client_stream_key_query", 'G', 932
	._inspect	'F', 't', "one_net_client_join_network", 'G', 934
	._inspect	'F', 't', "one_net_client", 'G', 936
	._inspect	'F', 't', "one_net_client_get_channel", 'G', 938
	._inspect	'V', 't', "one_net_mac_update_t", 'O', 939
	._inspect	'V', 't', "one_net_master_add_client_in_t", 'O', 941
	._inspect	'V', 't', "one_net_master_add_client_out_t", 'O', 943
	._inspect	'V', 't', "on_master_param_t", 'O', 945
	._inspect	'V', 't', "on_client_t", 'O', 528
	._inspect	'F', 't', "one_net_master_create_network", 'G', 950
	._inspect	'F', 't', "one_net_master_init", 'G', 952
	._inspect	'F', 't', "one_net_master_get_channel", 'G', 954
	._inspect	'F', 't', "one_net_master_send_single", 'G', 959
	._inspect	'F', 't', "one_net_master_block_stream_request", 'G', 961
	._inspect	'F', 't', "one_net_master_end_stream", 'G', 963
	._inspect	'F', 't', "one_net_master_change_client_data_rate", 'G', 965
	._inspect	'F', 't', "one_net_master_change_client_keep_alive", 'G', 967
	._inspect	'F', 't', "one_net_master_change_frag_dly", 'G', 969
	._inspect	'F', 't', "one_net_master_change_key", 'G', 970
	._inspect	'F', 't', "one_net_master_change_stream_key", 'G', 972
	._inspect	'F', 't', "one_net_master_set_update_master_flag", 'G', 974
	._inspect	'F', 't', "one_net_master_start_data_rate_test", 'G', 977
	._inspect	'F', 't', "one_net_master_invite", 'G', 979
	._inspect	'F', 't', "one_net_master_cancel_invite", 'G', 981
	._inspect	'F', 't', "one_net_master_remove_device", 'G', 983
	._inspect	'F', 't', "one_net_master", 'G', 986
	._inspect	'F', 't', "one_net_master_add_client", 'G', 989
	._inspect	'F', 't', "client_info", 'G', 992
	._inspect	'F', 't', "get_encryption_key", 'G', 994
	._inspect	'F', 't', "get_client_encryption_key", 'G', 997
	._inspect	'F', 't', "on_master_handle_ack_nack_response", 'G', 1003
	._inspect	'F', 't', "one_net_master_delete_last_client", 'G', 1005
	._inspect	'F', 't', "ont_set_timer", 'G', 1006
	._inspect	'F', 't', "ont_get_timer", 'G', 1007
	._inspect	'F', 't', "ont_stop_timer", 'G', 1008
	._inspect	'F', 't', "ont_active", 'G', 1009
	._inspect	'F', 't', "ont_expired", 'G', 1010
	._inspect	'F', 't', "ont_inactive_or_expired", 'G', 1011
	._inspect	'F', 't', "one_net_prand", 'G', 1012
	._inspect	'V', 't', "PREAMBLE", 'S', 1013
	._inspect	'V', 't', "SOF", 'S', 1014
	._inspect	'V', 't', "pkt_hdlr", 'S', 376
	._inspect	'V', 't', "on_state", 'G', 646
	._inspect	'V', 't', "on_base_param", 'G', 1015
	._inspect	'V', 't', "data_rate_result", 'S', 259
	._inspect	'V', 't', "block_complete", 'S', 260
	._inspect	'V', 't', "cur_stream", 'S', 1016
	._inspect	'V', 't', "last_single_ack_time", 'S', 264
	._inspect	'V', 't', "last_single_ack_did", 'S', 279
	._inspect	'V', 't', "last_single_ack_payload", 'S', 1017
	._inspect	'V', 't', "single_data_queue_size", 'G', 259
	._inspect	'V', 't', "single_data_queue", 'G', 1018
	._inspect	'V', 't', "parse_txn_payload", 'G', 260

	.END

;## Compile End Time Sat Jun 11 07:36:31 2011


